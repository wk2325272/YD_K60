###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     09/May/2013  22:08:29 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\Source_ #
#                    MQX\Shell_Task.c                                         #
#    Command line =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\Source_ #
#                    MQX\Shell_Task.c -D _DEBUG=1 -lC                         #
#                    "L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n51 #
#                    2\Int Flash Debug\List\" -lA                             #
#                    "L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n51 #
#                    2\Int Flash Debug\List\" --diag_suppress                 #
#                    Pa039,Pa082,Pe186 -o "L:\git_workspace\YD_PRJ_NEW_201303 #
#                    23_git_\IAR\twrk60n512\Int Flash Debug\Obj\" --no_cse    #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\ -I L:\git_workspace\YD_PRJ_NEW_20130323_git #
#                    _\IAR\..\lib\twrk60n512.iar\bsp\ -I                      #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\psp\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_Code\ -I   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\rtcs\ -I L:\git_workspace\YD_PRJ_NEW_2013032 #
#                    3_git_\IAR\..\lib\twrk60n512.iar\mfs\ -I                 #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\host\ -I L:\git_workspace\YD_PRJ_NEW_201 #
#                    30323_git_\IAR\..\lib\twrk60n512.iar\shell\ -I           #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\ -I L:\git_workspace\YD_PRJ_NEW_20130323_gi #
#                    t_\IAR\..\Source\Source_MQX\ -I                          #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\Source\ #
#                     -I "E:\Freescale\Freescale MQX                          #
#                    3.8\shell\source\include\" -Ol --use_c++_inline          #
#    List file    =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\List\Shell_Task.lst                     #
#    Object file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\Obj\Shell_Task.o                        #
#                                                                             #
#                                                                             #
###############################################################################

L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\Source_MQX\Shell_Task.c
      1          /**HEADER********************************************************************
      2          * 
      3          * Copyright (c) 2008 Freescale Semiconductor;
      4          * All Rights Reserved
      5          *
      6          * Copyright (c) 1989-2008 ARC International;
      7          * All Rights Reserved
      8          *
      9          *************************************************************************** 
     10          *
     11          * THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY EXPRESSED OR 
     12          * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
     13          * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  
     14          * IN NO EVENT SHALL FREESCALE OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
     15          * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
     16          * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
     17          * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
     18          * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
     19          * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
     20          * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
     21          * THE POSSIBILITY OF SUCH DAMAGE.
     22          *
     23          **************************************************************************
     24          *
     25          * $FileName: Shell_Task.c$
     26          * $Version : 3.0.6.0$
     27          * $Date    : Jun-9-2009$
     28          *
     29          * Comments:
     30          *
     31          *   
     32          *
     33          *END************************************************************************/
     34          
     35          
     36          #include "FTP_Task.h"

  #ifdef 0
         ^
"L:\git_workspace\YD_PRJ_NEW_20130323_git_\lib\twrk60n512.iar\rtcs\rtcscfg.h",183  Warning[Pe040]: 
          expected an identifier
     37          #include "Shell_Task.h"
     38          #define _SHELL_DBUG_
     39          

   \                                 In section .rodata, align 4
     40          const SHELL_COMMAND_STRUCT Shell_commands[] = {   
   \                     Shell_commands:
   \   00000000   0x........         DC32 `?<Constant "cd">`, Shell_cd, `?<Constant "copy">`, Shell_copy
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000010   0x........         DC32 `?<Constant "create">`, Shell_create, `?<Constant "del">`
   \              0x........   
   \              0x........   
   \   0000001C   0x........         DC32 Shell_del, `?<Constant "disect">`, Shell_disect
   \              0x........   
   \              0x........   
   \   00000028   0x........         DC32 `?<Constant "dir">`, Shell_dir, `?<Constant "df">`, Shell_df
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000038   0x........         DC32 `?<Constant "exit">`, Shell_exit, `?<Constant "format">`
   \              0x........   
   \              0x........   
   \   00000044   0x........         DC32 Shell_format, `?<Constant "help">`, Shell_help
   \              0x........   
   \              0x........   
   \   00000050   0x........         DC32 `?<Constant "mkdir">`, Shell_mkdir, `?<Constant "pwd">`, Shell_pwd
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000060   0x........         DC32 `?<Constant "read">`, Shell_read, `?<Constant "ren">`
   \              0x........   
   \              0x........   
   \   0000006C   0x........         DC32 Shell_rename, `?<Constant "rmdir">`, Shell_rmdir
   \              0x........   
   \              0x........   
   \   00000078   0x........         DC32 `?<Constant "sh">`, Shell_sh, `?<Constant "type">`, Shell_type
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000088   0x........         DC32 `?<Constant "write">`, Shell_write, `?<Constant "df_s">`
   \              0x........   
   \              0x........   
   \   00000094   0x........         DC32 Shell_search_file_r, `?<Constant "update">`, Shell_update
   \              0x........   
   \              0x........   
   \   000000A0   0x........         DC32 `?<Constant "?">`, Shell_command_list, 0H, 0H
   \              0x........   
   \              0x00000000   
   \              0x00000000   
     41             { "cd",        Shell_cd },      //0
     42             { "copy",      Shell_copy },   //1
     43             { "create",    Shell_create }, //2
     44             { "del",       Shell_del },    //3     
     45             { "disect",    Shell_disect},    //4  
     46             { "dir",       Shell_dir },   //5
     47             { "df",        Shell_df },   //6
     48             { "exit",      Shell_exit },   //7
     49             { "format",    Shell_format },    //8  
     50             { "help",      Shell_help }, //9
     51             { "mkdir",     Shell_mkdir },   //10  
     52             { "pwd",       Shell_pwd },    //11   
     53             { "read",      Shell_read },    //12  
     54             { "ren",       Shell_rename },   //13 
     55             { "rmdir",     Shell_rmdir },  //14
     56             { "sh",        Shell_sh },  //15
     57             { "type",      Shell_type },  //16
     58             { "write",     Shell_write }, //17
     59          //   { "writebuf",  Shell_write_buf },
     60             {"df_s",  Shell_search_file_r}, // wk @130331-->  查找文件
     61             {"update",  Shell_update}, // wk @130331-->  更新flash
     62             { "?",         Shell_command_list },    
     63             { NULL,        NULL } 
     64          };
     65          
     66          
     67          /*TASK*-----------------------------------------------------------------
     68          *
     69          * Function Name  : Shell_Task
     70          * Returned Value : void
     71          * Comments       :
     72          *
     73          *END------------------------------------------------------------------*/
     74          

   \                                 In section .text, align 4, keep-with-next
     75          void Shell_Task(uint_32 temp)
     76          { 
   \                     Shell_Task:
   \   00000000   0xB580             PUSH     {R7,LR}
     77          
     78           #ifdef _SHELL_DBUG_
     79             printf("\n----------  Shell_Task  ----------\n");
   \   00000002   0x480C             LDR.N    R0,??Shell_Task_0
   \   00000004   0x.... 0x....      BL       _io_printf
     80             printf("\n----------             ----------\n");
   \   00000008   0x480B             LDR.N    R0,??Shell_Task_0+0x4
   \   0000000A   0x.... 0x....      BL       _io_printf
     81             printf("\n----------             ----------\n");
   \   0000000E   0x480A             LDR.N    R0,??Shell_Task_0+0x4
   \   00000010   0x.... 0x....      BL       _io_printf
     82             printf("\n----------      END    ----------\n");
   \   00000014   0x4809             LDR.N    R0,??Shell_Task_0+0x8
   \   00000016   0x.... 0x....      BL       _io_printf
     83             
     84             delay_ms(2000);
                    ^
Warning[Pe223]: function "delay_ms" declared implicitly
   \   0000001A   0xF44F 0x60FA      MOV      R0,#+2000
   \   0000001E   0x.... 0x....      BL       delay_ms
     85             /* wk --> test shell_create function */
     86          //   char_ptr create[]={"test","kk3.txt"},write[]={"write","kk3.txt","10"};  // wk --> test array of USB
     87          //         /*      wk --> test  function of USB */
     88          //      Shell_create(2,create); 
     89          //      Shell_write(3,write);
     90             
     91          #endif  
     92             /* Run the shell on the serial port */
     93             for(;;)  {
     94                Shell(Shell_commands, NULL);
   \                     ??Shell_Task_1:
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x4806             LDR.N    R0,??Shell_Task_0+0xC
   \   00000026   0x.... 0x....      BL       Shell
     95          //       Shell(FTPd_commands, NULL);
     96                printf("Shell exited, restarting...\n");
   \   0000002A   0x4806             LDR.N    R0,??Shell_Task_0+0x10
   \   0000002C   0x.... 0x....      BL       _io_printf
   \   00000030   0xE7F7             B.N      ??Shell_Task_1
   \   00000032   0xBF00             Nop      
   \                     ??Shell_Task_0:
   \   00000034   0x........         DC32     `?<Constant "\\n----------  Shell_Ta...">`
   \   00000038   0x........         DC32     `?<Constant "\\n----------          ...">`
   \   0000003C   0x........         DC32     `?<Constant "\\n----------      END ...">`
   \   00000040   0x........         DC32     Shell_commands
   \   00000044   0x........         DC32     `?<Constant "Shell exited, restart...">`
     97               /*      wk --> test  function of USB */
     98          //      Shell_create(2,create); 
     99          //      Shell_write(3,write);
    100             }
    101          }

   \                                 In section .rodata, align 4
   \                     `?<Constant "cd">`:
   \   00000000   0x63 0x64          DC8 "cd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "copy">`:
   \   00000000   0x63 0x6F          DC8 "copy"
   \              0x70 0x79    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "create">`:
   \   00000000   0x63 0x72          DC8 "create"
   \              0x65 0x61    
   \              0x74 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "del">`:
   \   00000000   0x64 0x65          DC8 "del"
   \              0x6C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "disect">`:
   \   00000000   0x64 0x69          DC8 "disect"
   \              0x73 0x65    
   \              0x63 0x74    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dir">`:
   \   00000000   0x64 0x69          DC8 "dir"
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "df">`:
   \   00000000   0x64 0x66          DC8 "df"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "exit">`:
   \   00000000   0x65 0x78          DC8 "exit"
   \              0x69 0x74    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "format">`:
   \   00000000   0x66 0x6F          DC8 "format"
   \              0x72 0x6D    
   \              0x61 0x74    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "help">`:
   \   00000000   0x68 0x65          DC8 "help"
   \              0x6C 0x70    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mkdir">`:
   \   00000000   0x6D 0x6B          DC8 "mkdir"
   \              0x64 0x69    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "pwd">`:
   \   00000000   0x70 0x77          DC8 "pwd"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "read">`:
   \   00000000   0x72 0x65          DC8 "read"
   \              0x61 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ren">`:
   \   00000000   0x72 0x65          DC8 "ren"
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "rmdir">`:
   \   00000000   0x72 0x6D          DC8 "rmdir"
   \              0x64 0x69    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "sh">`:
   \   00000000   0x73 0x68          DC8 "sh"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "type">`:
   \   00000000   0x74 0x79          DC8 "type"
   \              0x70 0x65    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "write">`:
   \   00000000   0x77 0x72          DC8 "write"
   \              0x69 0x74    
   \              0x65 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "df_s">`:
   \   00000000   0x64 0x66          DC8 "df_s"
   \              0x5F 0x73    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "update">`:
   \   00000000   0x75 0x70          DC8 "update"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 2
   \                     `?<Constant "?">`:
   \   00000000   0x3F 0x00          DC8 "?"

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------  Shell_Ta...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------  Shell_Task  ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x53    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x20    
   \              0x20 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------          ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------             ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------      END ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------      END    ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x45    
   \              0x4E 0x44    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Shell exited, restart...">`:
   \   00000000   0x53 0x68          DC8 "Shell exited, restarting...\012"
   \              0x65 0x6C    
   \              0x6C 0x20    
   \              0x65 0x78    
   \              0x69 0x74    
   \              0x65 0x64    
   \              0x2C 0x20    
   \              0x72 0x65    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x2E 0x2E    
   \              0x2E 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    102           
    103          /* EOF */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Shell_Task
             8 -> Shell
             8 -> _io_printf
             8 -> delay_ms


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant "?">
      32  ?<Constant "Shell exited, restart...">
      36  ?<Constant "\n----------          ...">
      36  ?<Constant "\n----------      END ...">
      40  ?<Constant "\n----------  Shell_Ta...">
       4  ?<Constant "cd">
       8  ?<Constant "copy">
       8  ?<Constant "create">
       4  ?<Constant "del">
       4  ?<Constant "df">
       8  ?<Constant "df_s">
       4  ?<Constant "dir">
       8  ?<Constant "disect">
       8  ?<Constant "exit">
       8  ?<Constant "format">
       8  ?<Constant "help">
       8  ?<Constant "mkdir">
       4  ?<Constant "pwd">
       8  ?<Constant "read">
       4  ?<Constant "ren">
       8  ?<Constant "rmdir">
       4  ?<Constant "sh">
       8  ?<Constant "type">
       8  ?<Constant "update">
       8  ?<Constant "write">
      72  Shell_Task
     176  Shell_commands

 
 454 bytes in section .rodata
  72 bytes in section .text
 
  72 bytes of CODE  memory
 454 bytes of CONST memory

Errors: none
Warnings: 2
