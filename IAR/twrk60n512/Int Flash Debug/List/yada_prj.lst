###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     08/May/2013  21:58:45 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\ya #
#                    da_prj.c                                                 #
#    Command line =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\ya #
#                    da_prj.c -D _DEBUG=1 -lC "E:\Freescale\mqx_test\YD_PRJ_N #
#                    EW_20130323_git_\IAR\twrk60n512\Int Flash Debug\List\"   #
#                    -lA "E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\ #
#                    twrk60n512\Int Flash Debug\List\" --diag_suppress        #
#                    Pa039,Pa082,Pe186 -o "E:\Freescale\mqx_test\YD_PRJ_NEW_2 #
#                    0130323_git_\IAR\twrk60n512\Int Flash Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_20 #
#                    130323_git_\IAR\..\lib\twrk60n512.iar\bsp\ -I            #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\psp\ -I E:\Freescale\mqx_test\YD_PRJ_NE #
#                    W_20130323_git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_ #
#                    Code\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\ #
#                    IAR\..\lib\twrk60n512.iar\rtcs\ -I                       #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\mfs\ -I E:\Freescale\mqx_test\YD_PRJ_NE #
#                    W_20130323_git_\IAR\..\lib\twrk60n512.iar\usb\host\ -I   #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\shell\ -I E:\Freescale\mqx_test\YD_PRJ_ #
#                    NEW_20130323_git_\IAR\..\lib\twrk60n512.iar\usb\ -I      #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\   #
#                    -I E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\.. #
#                    \Source\Source_MQX\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_ #
#                    20130323_git_\IAR\..\Source\ -I "E:\Freescale\Freescale  #
#                    MQX 3.8\shell\source\include\" -Ol --use_c++_inline      #
#    List file    =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\twrk6 #
#                    0n512\Int Flash Debug\List\yada_prj.lst                  #
#    Object file  =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\twrk6 #
#                    0n512\Int Flash Debug\Obj\yada_prj.o                     #
#                                                                             #
#                                                                             #
###############################################################################

E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\yada_prj.c
      1          /*******************************************************************************
      2          * File Name       	 : 
      3          * Author             	 : 
      4          * Version            	 : 
      5          * Date               	 :
      6          * Description     	 :
      7          *******************************************************************************/
      8          #include "includes.h"
      9          
     10          #if ! BSPCFG_ENABLE_IO_SUBSYSTEM
     11          #error This application requires BSPCFG_ENABLE_IO_SUBSYSTEM defined non-zero in user_config.h. Please recompile BSP with this option.
     12          #endif
     13          
     14          #define _GUI_DBUG_
     15          /* Task IDs */
     16          #define RS232_TASK 5
     17          #define LPT_FLAG_CLOCK_SOURCE_LPO           (0x00000002) // wk @130330 --> test timer
     18          

   \                                 In section .bss, align 1
     19          volatile U8 RefreshFlg; // 页面刷新标志
   \                     RefreshFlg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     20          U8 U_FLAG = 0,Time_Ref = 0;
   \                     U_FLAG:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Time_Ref:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     21          uchar read_buffer[8]={0x12,0x23};  // wk @130403 --> uncomment
   \                     read_buffer:
   \   00000000   0x12 0x23          DC8 18, 35, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .bss, align 1
     22          U8 SavePowerFlg; // WK @130401 --> 电能质量数据存储标志 1时存储
   \                     SavePowerFlg:
   \   00000000                      DS8 1
     23          
     24          extern void YaDa(uint_32);
     25          extern void MainLoop();
     26          extern void USB_task(uint_32 param);
     27          //extern void sdcard_task(uint_32 param);
     28          extern void FTP_task(uint_32 param);
     29          extern void Shell_Task(uint_32 param);
     30          extern void LCDTouchSel_Task(uint_32 param);
     31          extern void SPIDMA_Task( uint_32 param);
     32          extern void sdcard_task(uint_32 temp);
     33          extern void PIN2(uint_32 temp);
     34          extern void mem_flash_app(uint_32 temp);
     35          extern void tcp_socket_task( uint_32 val);
     36          
     37          void flg_int();
     38          
     39          /*  pin2 int callback function */

   \                                 In section .text, align 2, keep-with-next
     40          void int_callback(void) 
     41          {
   \                     int_callback:
   \   00000000   0xB580             PUSH     {R7,LR}
     42            pointer ppin2_event;
     43            _event_open("pin2_event",&ppin2_event);
   \   00000002   0xA900             ADD      R1,SP,#+0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable4
   \   00000008   0x.... 0x....      BL       _event_open
     44            _event_set(ppin2_event,0x04);
   \   0000000C   0x2104             MOVS     R1,#+4
   \   0000000E   0x9800             LDR      R0,[SP, #+0]
   \   00000010   0x.... 0x....      BL       _event_set
     45            
     46            printf("Switch2 is pressed(int mode)!\n");
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000018   0x.... 0x....      BL       _io_printf
     47          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
     48          /*******************************************************************************
     49          ** Function Name	：timser_isr
     50          ** Input		：device num of timer
     51          ** Return		：void
     52          ** Author		：wk
     53          ** Version	：v1.0
     54          ** Date		：130330
     55          ** Dessription	：LPT 定时器0中断函数入口
     56          ** Reverse	：
     57          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     58          static void timer_isr
     59              (
     60                  pointer parameter
     61              )
     62          {
   \                     timer_isr:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     63              uint_32 timer = (uint_32)parameter;
     64              
     65              /* Stop the timer */
     66              _lpt_run (timer, FALSE);
                     ^
Warning[Pe223]: function "_lpt_run" declared implicitly
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _lpt_run
     67              _lpt_clear_int (timer);
                     ^
Warning[Pe223]: function "_lpt_clear_int" declared implicitly
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       _lpt_clear_int
     68          
     69          //    printf("\nhellow\n");
     70              SavePowerFlg =1;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x7001             STRB     R1,[R0, #+0]
     71          //    EventKeyFlg=1; SPIEventFlg=1;// wk @130401 --> test event data save
     72              _lpt_init(0,3 * 1000000 , LPT_FLAG_CLOCK_SOURCE_LPO,TRUE);
                     ^
Warning[Pe223]: function "_lpt_init" declared implicitly
   \   0000001A   0x2301             MOVS     R3,#+1
   \   0000001C   0x2202             MOVS     R2,#+2
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable4_3  ;; 0x2dc6c0
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       _lpt_init
     73          }
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
     74          /*******************************************************************************
     75          ** Function Name	：timser_isr
     76          ** Input		：device num of timer
     77          ** Return		：void
     78          ** Author		：wk
     79          ** Version	：v1.0
     80          ** Date		：130330
     81          ** Dessription	：LPT 定时器1中断函数入口
     82          ** Reverse	：
     83          *******************************************************************************/
     84          static void timer_isr_1
     85              (
     86                  pointer parameter
     87              )
     88          {
     89              uint_32 timer = (uint_32)parameter;
     90              
     91              /* Stop the timer */
     92              _lpt_run (timer, FALSE);
                     ^
Warning[Pe223]: function "_lpt_run" declared implicitly
     93              _lpt_clear_int (timer);
                     ^
Warning[Pe223]: function "_lpt_clear_int" declared implicitly
     94              
     95              Time_Ref = 1;
     96              printf("1s\n");
     97              _lpt_init(1,1 * 1000000 , LPT_FLAG_CLOCK_SOURCE_LPO,TRUE);
                     ^
Warning[Pe223]: function "_lpt_init" declared implicitly
     98          }
     99          
    100          /*
    101          ** 作者：
    102          ** 时间：2013-02-27
    103          ** 说明： Task ：YADA 与 Shell_Task 的优先级问题
    104          **　      在目前调试阶段，需要运行谁，将优先级提高
    105          **    --> 最后完善阶段，需要通过在 YADA 任务中选择调用 Shell_Task <--   ,--> 已解决，通过PIN2任务
    106          */

   \                                 In section .rodata, align 4
    107          const TASK_TEMPLATE_STRUCT  MQX_template_list[] =    //  | MQX_TIME_SLICE_TASK
   \                     MQX_template_list:
   \   00000000   0x00000001         DC32 1, YaDa, 4000, 11, `?<Constant "MAIN&GUI_Task">`, 1, 0, 1000, 2
   \              0x........   
   \              0x00000FA0   
   \              0x0000000B   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x000003E8   
   \              0x00000002   
   \   00000024   0x........         DC32 Shell_Task, 4000, 12, `?<Constant "Shell_Task">`, 1, 0, 1000, 3
   \              0x00000FA0   
   \              0x0000000C   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x000003E8   
   \              0x00000003   
   \   00000044   0x........         DC32 FTP_task, 2000, 9, `?<Constant "FTP_Task">`, 1, 0, 0, 4
   \              0x000007D0   
   \              0x00000009   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000004   
   \   00000064   0x........         DC32 tcp_socket_task, 2000, 9, `?<Constant "tcp_socket_task">`, 0, 0, 0
   \              0x000007D0   
   \              0x00000009   
   \              0x........   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000080   0x00000005         DC32 5, USB_task, 5200, 8, `?<Constant "USB_Task">`, 1, 0, 0, 6
   \              0x........   
   \              0x00001450   
   \              0x00000008   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000006   
   \   000000A4   0x........         DC32 mem_flash_app, 4000, 8, `?<Constant "Flash_Task">`, 1, 0, 0, 7
   \              0x00000FA0   
   \              0x00000008   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000007   
   \   000000C4   0x........         DC32 LCDTouchSel_Task, 1000, 7, `?<Constant "UartTouch_Task">`, 1, 0, 0
   \              0x000003E8   
   \              0x00000007   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \   000000E0   0x00000008         DC32 8, SPIDMA_Task, 5000, 6, `?<Constant "SPIDMA_Task">`, 1, 0, 0, 11
   \              0x........   
   \              0x00001388   
   \              0x00000006   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x0000000B   
   \   00000104   0x........         DC32 PIN2, 400, 9, `?<Constant "PIN2_Task">`, 1, 0, 0, 0
   \              0x00000190   
   \              0x00000009   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    108          { 
    109             /* Task Index,   Function,         Stack,  Priority, Name,     Attributes,          Param, Time Slice */
    110             {1,  YaDa,       4000,   11,         "MAIN&GUI_Task", MQX_AUTO_START_TASK , 0,    1000 },  // | MQX_TIME_SLICE_TASK
    111             {2,  Shell_Task, 4000L,  12, "Shell_Task",   MQX_AUTO_START_TASK, 0,     1000 },  //  | MQX_TIME_SLICE_TASK
    112             
    113             {3,  FTP_task,   2000,   9L,   "FTP_Task",     MQX_AUTO_START_TASK, 0,     0 },
    114             {4,  tcp_socket_task,   3000-1000L,   9L,   "tcp_socket_task",     0, 0,     0 },
    115             {5,  USB_task,   5200L,  8L,   "USB_Task",     MQX_AUTO_START_TASK, 0,     0 },  // MQX_AUTO_START_TASK
    116             {6,  mem_flash_app, 4000L,  8L,   "Flash_Task",     MQX_AUTO_START_TASK, 0,     0 },
    117             {7,  LCDTouchSel_Task ,1000,7 , "UartTouch_Task", MQX_AUTO_START_TASK, 0 , 0},
    118             {8,  SPIDMA_Task , 5000, 6 , "SPIDMA_Task",MQX_AUTO_START_TASK,0 ,0 },
    119             //   {10,  sdcard_task,2000L,  8L, "SDcard",  MQX_AUTO_START_TASK, 0,     0 },
    120             {11, PIN2,       500-100L,   9L,  "PIN2_Task", MQX_AUTO_START_TASK,0 ,0 }, // 按键的处理任务
    121             { 0 }
    122          };
    123          
    124          /*TASK*-----------------------------------------------------
    125          * 
    126          * Task Name    : YaDa
    127          * Comments     :
    128          *    
    129          *
    130          *END*-----------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    131          void YaDa
    132             (
    133                uint_32 initial_data
    134             )
    135          {
   \                     YaDa:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    136          #ifdef _GUI_DBUG_
    137             printf("\n----------MAIN&GUI_Task----------\n");
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable4_4
   \   00000008   0x.... 0x....      BL       _io_printf
    138             printf("\n----------             ----------\n");
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable4_5
   \   00000010   0x.... 0x....      BL       _io_printf
    139             printf("\n----------             ----------\n");
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable4_5
   \   00000018   0x.... 0x....      BL       _io_printf
    140             printf("\n----------      END    ----------\n");
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   00000020   0x.... 0x....      BL       _io_printf
    141          #endif 
    142            UartLCD_init();  // uart initialization
   \   00000024   0x.... 0x....      BL       UartLCD_init
    143            UartTouch_init();
   \   00000028   0x.... 0x....      BL       UartTouch_init
    144            flg_int(); // wk --> 初始化一些标志 !  
   \   0000002C   0x.... 0x....      BL       flg_int
    145            spi2_dma_int(); // dsp2k60 spi2 初始化
   \   00000030   0x.... 0x....      BL       spi2_dma_int
    146            
    147            YADA_70(PageStart); //必要的初始化后进入首页
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       YADA_70
    148            delay_ms(1000); // wk -->test  延时1s
   \   0000003A   0xF44F 0x707A      MOV      R0,#+1000
   \   0000003E   0x.... 0x....      BL       delay_ms
    149          //  delay_ms(4000); // wk -->test  延时4s，等待U盘启动完成
    150          //  YADA_E4();  // wk --> 屏幕校正
    151            YADA_70(MenuTop);  // 进入菜单首页
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       YADA_70
    152            
    153            RefreshFlg = 0; //页面无刷新 
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable4_7
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x7001             STRB     R1,[R0, #+0]
    154              
    155              SHELL_CONTEXT_PTR    shell_ptr;
    156              shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000050   0xF44F 0x70F2      MOV      R0,#+484
   \   00000054   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000058   0x0004             MOVS     R4,R0
    157              _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000005A   0xF245 0x0101      MOVW     R1,#+20481
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0x.... 0x....      BL       _lwmem_set_type
    158              uint_32 file_size;  uchar status;
    159             /* wk @130401 --> 在 flash中 新建 sysset 用于系统变量保存 */
    160              shell_ptr->ARGC = 2;
   \   00000064   0x2002             MOVS     R0,#+2
   \   00000066   0x6220             STR      R0,[R4, #+32]
    161              shell_ptr->ARGV[0]="cd";
   \   00000068   0x....             ADR.N    R0,??DataTable2  ;; 0x63, 0x64, 0x00, 0x00
   \   0000006A   0x6020             STR      R0,[R4, #+0]
    162              shell_ptr->ARGV[1]="f:\\"; 
   \   0000006C   0x....             ADR.N    R0,??DataTable2_1  ;; "f:\\"
   \   0000006E   0x6060             STR      R0,[R4, #+4]
    163              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000070   0x0021             MOVS     R1,R4
   \   00000072   0x6A20             LDR      R0,[R4, #+32]
   \   00000074   0x.... 0x....      BL       Shell_cd
    164              
    165          //      shell_ptr->ARGC = 2;
    166          //      shell_ptr->ARGV[0]="df_s";
    167              shell_ptr->ARGV[1]="SYSSET";   //wk --> 注意：查找的文件名暂时必须要是大写
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable4_8
   \   0000007C   0x6060             STR      R0,[R4, #+4]
    168              status=Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,&file_size);
   \   0000007E   0xAA02             ADD      R2,SP,#+8
   \   00000080   0x0021             MOVS     R1,R4
   \   00000082   0x6A20             LDR      R0,[R4, #+32]
   \   00000084   0x.... 0x....      BL       Shell_search_file_r1
    169              if(status==0)
   \   00000088   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD106             BNE.N    ??YaDa_0
    170              {
    171          //        shell_ptr->ARGC = 2;
    172          //        shell_ptr->ARGV[0]="mkdir";
    173                shell_ptr->ARGV[1]="SYSSET"; 
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable4_8
   \   00000092   0x6060             STR      R0,[R4, #+4]
    174                Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000094   0x0021             MOVS     R1,R4
   \   00000096   0x6A20             LDR      R0,[R4, #+32]
   \   00000098   0x.... 0x....      BL       Shell_mkdir
    175              }
    176            _mem_free(shell_ptr);
   \                     ??YaDa_0:
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0x.... 0x....      BL       _lwmem_free
    177              
    178            /* button1 into interrupt for shell or maingui task change */
    179             GPIO_PIN_STRUCT pins_int[] = {
    180                      BSP_BUTTON1 | GPIO_PIN_IRQ_RISING ,
    181                      GPIO_LIST_END
    182                  };
   \   000000A2   0xA803             ADD      R0,SP,#+12
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable4_9
   \   000000A8   0xC90C             LDM      R1!,{R2,R3}
   \   000000AA   0xC00C             STM      R0!,{R2,R3}
   \   000000AC   0x3908             SUBS     R1,R1,#+8
   \   000000AE   0x3808             SUBS     R0,R0,#+8
    183              MQX_FILE_PTR port_file4;        
    184                   /* 这是按键1 上升沿中断*/
    185             port_file4 = fopen("gpio:read", (char_ptr) &pins_int );
   \   000000B0   0xA903             ADD      R1,SP,#+12
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable4_10
   \   000000B6   0x.... 0x....      BL       _io_fopen
    186             ioctl(port_file4, GPIO_IOCTL_SET_IRQ_FUNCTION, (pointer)int_callback);        
   \   000000BA   0x.... 0x....      LDR.W    R2,??DataTable4_11
   \   000000BE   0xF240 0x3106      MOVW     R1,#+774
   \   000000C2   0x.... 0x....      BL       _io_ioctl
    187            /* end */
    188            /* wk @130330 -->timer of lpt */
    189             /* wk @130504 --> 调试事件，先关闭 */
    190             _lpt_install (0,3 * 1000000 , LPT_FLAG_CLOCK_SOURCE_LPO, 11, timer_isr, TRUE);//2 * 1000000  --> 2秒  
                    ^
Warning[Pe223]: function "_lpt_install" declared implicitly

  static void timer_isr_1
              ^
"E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\yada_prj.c",84  Warning[Pe177]: 
          function "timer_isr_1" was declared but never referenced
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x9001             STR      R0,[SP, #+4]
   \   000000CA   0x....             LDR.N    R0,??DataTable4_12
   \   000000CC   0x9000             STR      R0,[SP, #+0]
   \   000000CE   0x230B             MOVS     R3,#+11
   \   000000D0   0x2202             MOVS     R2,#+2
   \   000000D2   0x....             LDR.N    R1,??DataTable4_3  ;; 0x2dc6c0
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x.... 0x....      BL       _lpt_install
    191             /* wk --> 刷新时钟 注意：现在除了timer 0 能用之外，其他的都不能用，待研究中……*/
    192          //    _lpt_install (1,1 * 1000000 , LPT_FLAG_CLOCK_SOURCE_LPO, 11, timer_isr_1, TRUE);//2 * 1000000  --> 2秒  
    193            /* wk @130330 -->timer end */
    194             
    195             for(int i=0;i<84;i++)
   \   000000DA   0x2000             MOVS     R0,#+0
   \   000000DC   0xE003             B.N      ??YaDa_1
    196             {
    197               SysFlashData[i]=10;
   \                     ??YaDa_2:
   \   000000DE   0x....             LDR.N    R1,??DataTable4_13
   \   000000E0   0x220A             MOVS     R2,#+10
   \   000000E2   0x5442             STRB     R2,[R0, R1]
    198             }
   \   000000E4   0x1C40             ADDS     R0,R0,#+1
   \                     ??YaDa_1:
   \   000000E6   0x2854             CMP      R0,#+84
   \   000000E8   0xDBF9             BLT.N    ??YaDa_2
    199            while(1)
    200            {   
    201                if(SysFlashDataT[5])                           //背光标志，1为开背光，0为关。
   \                     ??YaDa_3:
   \   000000EA   0x....             LDR.N    R0,??DataTable4_14
   \   000000EC   0x7940             LDRB     R0,[R0, #+5]
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD003             BEQ.N    ??YaDa_4
    202                  {
    203                      YADA_5F(0x3f);                            //背光全开
   \   000000F2   0x203F             MOVS     R0,#+63
   \   000000F4   0x.... 0x....      BL       YADA_5F
   \   000000F8   0xE002             B.N      ??YaDa_5
    204                  }
    205                  else
    206                  {
    207                      YADA_5F(0x08);                             //背光部分开
   \                     ??YaDa_4:
   \   000000FA   0x2008             MOVS     R0,#+8
   \   000000FC   0x.... 0x....      BL       YADA_5F
    208                  }
    209                
    210                MainLoop(); //循环主程序
   \                     ??YaDa_5:
   \   00000100   0x.... 0x....      BL       MainLoop
   \   00000104   0xE7F1             B.N      ??YaDa_3
    211            }
    212          }
    213          
    214          /*******************************************************************************
    215          * 函  数  名      : MainLoop
    216          * 描      述      : main函数中的菜单主函数
    217          * 输      入      : 无
    218          * 返      回      : 无
    219          *******************************************************************************/
    220          

   \                                 In section .text, align 2, keep-with-next
    221          void MainLoop()
    222          {
   \                     MainLoop:
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    223            if (SPIPowerFlg) //接收到电能数据
   \   00000002   0x....             LDR.N    R0,??DataTable4_15
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD00D             BEQ.N    ??MainLoop_0
    224            {
    225              if (VIEWHoldFlg == 0)
   \   0000000A   0x....             LDR.N    R0,??DataTable4_16
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD105             BNE.N    ??MainLoop_1
    226              {
    227                RefreshFlg = 2;
   \   00000012   0x....             LDR.N    R0,??DataTable4_7
   \   00000014   0x2102             MOVS     R1,#+2
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    228                ViewKeyFlg = 0; //VIEWHoldFlg为0时，可能有其余键按下，需要清零
   \   00000018   0x....             LDR.N    R0,??DataTable4_17
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
    229              }
    230              
    231              SPIPowerFlg = 0; // 清除标志
   \                     ??MainLoop_1:
   \   0000001E   0x....             LDR.N    R0,??DataTable4_15
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
   \   00000024   0xE009             B.N      ??MainLoop_2
    232            }
    233            else if(ViewKeyFlg) //  ? ViewKeyFlg ?
   \                     ??MainLoop_0:
   \   00000026   0x....             LDR.N    R0,??DataTable4_17
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD005             BEQ.N    ??MainLoop_2
    234            {
    235              RefreshFlg = 2;
   \   0000002E   0x....             LDR.N    R0,??DataTable4_7
   \   00000030   0x2102             MOVS     R1,#+2
   \   00000032   0x7001             STRB     R1,[R0, #+0]
    236              ViewKeyFlg = 0;
   \   00000034   0x....             LDR.N    R0,??DataTable4_17
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7001             STRB     R1,[R0, #+0]
    237            }
    238            /* wk @130401 --> 基本电能质量数据保存 */
    239            if(SavePowerFlg)
   \                     ??MainLoop_2:
   \   0000003A   0x....             LDR.N    R0,??DataTable4_2
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD004             BEQ.N    ??MainLoop_3
    240            {
    241              PowerSave(); 
   \   00000042   0x.... 0x....      BL       PowerSave
    242              SavePowerFlg=0;
   \   00000046   0x....             LDR.N    R0,??DataTable4_2
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    243            }
    244            /* wk @130401 --> end */
    245          #if 1 // WK --> 数据存储  待完善
    246            if (SPIEventFlg || EventKeyFlg) //接收到事件数据或者事件记录相关页有键按下时需要刷新
   \                     ??MainLoop_3:
   \   0000004C   0x....             LDR.N    R0,??DataTable4_18
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD103             BNE.N    ??MainLoop_4
   \   00000054   0x....             LDR.N    R0,??DataTable4_19
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xD010             BEQ.N    ??MainLoop_5
    247            {
    248              RefreshFlg = 3;
   \                     ??MainLoop_4:
   \   0000005C   0x....             LDR.N    R0,??DataTable4_7
   \   0000005E   0x2103             MOVS     R1,#+3
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    249              if (SPIEventFlg)
   \   00000062   0x....             LDR.N    R0,??DataTable4_18
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD003             BEQ.N    ??MainLoop_6
    250              {
    251                EventSave(U_FLAG);
   \   0000006A   0x....             LDR.N    R0,??DataTable4_20
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       EventSave
    252              }
    253              SPIEventFlg = 0;
   \                     ??MainLoop_6:
   \   00000072   0x....             LDR.N    R0,??DataTable4_18
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x7001             STRB     R1,[R0, #+0]
    254              EventKeyFlg = 0;
   \   00000078   0x....             LDR.N    R0,??DataTable4_19
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0x7001             STRB     R1,[R0, #+0]
    255            }
    256          #endif
    257            
    258            if(SysSetKeyFlg) //系统设置页有键按下时需要刷新
   \                     ??MainLoop_5:
   \   0000007E   0x....             LDR.N    R0,??DataTable4_21
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD005             BEQ.N    ??MainLoop_7
    259            {
    260               SysSetKeyFlg = 0;
   \   00000086   0x....             LDR.N    R0,??DataTable4_21
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x7001             STRB     R1,[R0, #+0]
    261               RefreshFlg = 1; 
   \   0000008C   0x....             LDR.N    R0,??DataTable4_7
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x7001             STRB     R1,[R0, #+0]
    262            }
    263            
    264            if (MenuSwFlg == 1) //不能放在switch中，功能键按下时会整体刷新一次;页面切换必须放判断刷新之后，否则出现频繁操作后，页面没有数据的现象
   \                     ??MainLoop_7:
   \   00000092   0x....             LDR.N    R0,??DataTable4_22
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x2801             CMP      R0,#+1
   \   00000098   0xD10C             BNE.N    ??MainLoop_8
    265            {
    266              MenuSwFlg = 0 ;
   \   0000009A   0x....             LDR.N    R0,??DataTable4_22
   \   0000009C   0x2100             MOVS     R1,#+0
   \   0000009E   0x7001             STRB     R1,[R0, #+0]
    267              YADA_70(Dis_PicID);
   \   000000A0   0x....             LDR.N    R0,??DataTable4_23
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0x.... 0x....      BL       YADA_70
    268              
    269              YADA_70(Dis_PicID); //有时会出现切屏不及时，冗余思想
   \   000000AA   0x....             LDR.N    R0,??DataTable4_23
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000B0   0x.... 0x....      BL       YADA_70
    270            }
    271            
    272            if (Dis_PicID != MenuTop)//时间显示需放在界面切换之后，放数据刷新之后的话延时更长才显示
   \                     ??MainLoop_8:
   \   000000B4   0x....             LDR.N    R0,??DataTable4_23
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x2800             CMP      R0,#+0
   \   000000BA   0xD029             BEQ.N    ??MainLoop_9
    273              {
    274          //        /*
    275          //        if( DisTimeOnce==1 )
    276          //        {
    277          //          DisTimeOnce=0;
    278          //          DISTIME(1);   //显示完整时间。
    279          //        }
    280          //          DISTIME(0);//只刷新秒  */
    281                  if(Time_Ref==1)//设置8025固定中断，一分钟才刷新，但秒比较闪
   \   000000BC   0x....             LDR.N    R0,??DataTable4_24
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x2801             CMP      R0,#+1
   \   000000C2   0xD102             BNE.N    ??MainLoop_10
    282                  {
    283          //            //U8 Config =0x20;
    284          //            Write8025(&Config,15,1);//使/INTA="L"设置为ＯＦＦ
    285                    Time_Ref=0;
   \   000000C4   0x....             LDR.N    R0,??DataTable4_24
   \   000000C6   0x2100             MOVS     R1,#+0
   \   000000C8   0x7001             STRB     R1,[R0, #+0]
    286          //          DISTIME(1);
    287                  }
    288                  
    289                  if(USB_Flg) //U盘图标显示
   \                     ??MainLoop_10:
   \   000000CA   0x....             LDR.N    R0,??DataTable4_25
   \   000000CC   0x7800             LDRB     R0,[R0, #+0]
   \   000000CE   0x2800             CMP      R0,#+0
   \   000000D0   0xD00F             BEQ.N    ??MainLoop_11
    290                  {
    291                      YADA_71(PageIcon,55,450,102,475,55,450);
   \   000000D2   0xF44F 0x70E1      MOV      R0,#+450
   \   000000D6   0x9002             STR      R0,[SP, #+8]
   \   000000D8   0x2037             MOVS     R0,#+55
   \   000000DA   0x9001             STR      R0,[SP, #+4]
   \   000000DC   0xF240 0x10DB      MOVW     R0,#+475
   \   000000E0   0x9000             STR      R0,[SP, #+0]
   \   000000E2   0x2366             MOVS     R3,#+102
   \   000000E4   0xF44F 0x72E1      MOV      R2,#+450
   \   000000E8   0x2137             MOVS     R1,#+55
   \   000000EA   0x2002             MOVS     R0,#+2
   \   000000EC   0x.... 0x....      BL       YADA_71
   \   000000F0   0xE00E             B.N      ??MainLoop_9
    292                  }
    293                  else
    294                  {
    295                      YADA_71(PageIcon,55,400,102,425,55,450);
   \                     ??MainLoop_11:
   \   000000F2   0xF44F 0x70E1      MOV      R0,#+450
   \   000000F6   0x9002             STR      R0,[SP, #+8]
   \   000000F8   0x2037             MOVS     R0,#+55
   \   000000FA   0x9001             STR      R0,[SP, #+4]
   \   000000FC   0xF240 0x10A9      MOVW     R0,#+425
   \   00000100   0x9000             STR      R0,[SP, #+0]
   \   00000102   0x2366             MOVS     R3,#+102
   \   00000104   0xF44F 0x72C8      MOV      R2,#+400
   \   00000108   0x2137             MOVS     R1,#+55
   \   0000010A   0x2002             MOVS     R0,#+2
   \   0000010C   0x.... 0x....      BL       YADA_71
    296                  }
    297              }
    298            /* ……*/
    299            switch(RefreshFlg)
   \                     ??MainLoop_9:
   \   00000110   0x....             LDR.N    R0,??DataTable4_7
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x2801             CMP      R0,#+1
   \   00000116   0xD004             BEQ.N    ??MainLoop_12
   \   00000118   0xD371             BCC.N    ??MainLoop_13
   \   0000011A   0x2803             CMP      R0,#+3
   \   0000011C   0xD056             BEQ.N    ??MainLoop_14
   \   0000011E   0xD316             BCC.N    ??MainLoop_15
   \   00000120   0xE06D             B.N      ??MainLoop_13
    300            {
    301            case 1:
    302              RefreshFlg = 0;
   \                     ??MainLoop_12:
   \   00000122   0x....             LDR.N    R0,??DataTable4_7
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x7001             STRB     R1,[R0, #+0]
    303              switch (Dis_PicID)
   \   00000128   0x....             LDR.N    R0,??DataTable4_23
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x280A             CMP      R0,#+10
   \   0000012E   0xD004             BEQ.N    ??MainLoop_16
   \   00000130   0x280B             CMP      R0,#+11
   \   00000132   0xD005             BEQ.N    ??MainLoop_17
   \   00000134   0x2812             CMP      R0,#+18
   \   00000136   0xD006             BEQ.N    ??MainLoop_18
   \   00000138   0xE008             B.N      ??MainLoop_19
    304              {
    305                case MenuParaSET:
    306                  GUI_SYS_PARASET();
   \                     ??MainLoop_16:
   \   0000013A   0x.... 0x....      BL       GUI_SYS_PARASET
    307                  break;
   \   0000013E   0xE005             B.N      ??MainLoop_20
    308                case MenuEventSET:
    309                  GUI_SYS_EVENTSET();  // 涉及 U盘数据  --> wk 
   \                     ??MainLoop_17:
   \   00000140   0x.... 0x....      BL       GUI_SYS_EVENTSET
    310                  break;
   \   00000144   0xE002             B.N      ??MainLoop_20
    311                case MenuInitSET:
    312                  GUI_INIT_SET();
   \                     ??MainLoop_18:
   \   00000146   0x.... 0x....      BL       GUI_INIT_SET
    313                  break;
   \   0000014A   0xE7FF             B.N      ??MainLoop_20
    314                default:
    315                  break;
    316              }
    317              break;
   \                     ??MainLoop_19:
   \                     ??MainLoop_20:
   \   0000014C   0xE057             B.N      ??MainLoop_21
    318              
    319            case 2:
    320              RefreshFlg = 0;
   \                     ??MainLoop_15:
   \   0000014E   0x....             LDR.N    R0,??DataTable4_7
   \   00000150   0x2100             MOVS     R1,#+0
   \   00000152   0x7001             STRB     R1,[R0, #+0]
    321              switch (Dis_PicID)
   \   00000154   0x....             LDR.N    R0,??DataTable4_23
   \   00000156   0x7800             LDRB     R0,[R0, #+0]
   \   00000158   0x2809             CMP      R0,#+9
   \   0000015A   0xD031             BEQ.N    ??MainLoop_22
   \   0000015C   0x2814             CMP      R0,#+20
   \   0000015E   0xD012             BEQ.N    ??MainLoop_23
   \   00000160   0x2815             CMP      R0,#+21
   \   00000162   0xD013             BEQ.N    ??MainLoop_24
   \   00000164   0x2816             CMP      R0,#+22
   \   00000166   0xD014             BEQ.N    ??MainLoop_25
   \   00000168   0x2817             CMP      R0,#+23
   \   0000016A   0xD015             BEQ.N    ??MainLoop_26
   \   0000016C   0x2818             CMP      R0,#+24
   \   0000016E   0xD016             BEQ.N    ??MainLoop_27
   \   00000170   0x2819             CMP      R0,#+25
   \   00000172   0xD017             BEQ.N    ??MainLoop_28
   \   00000174   0x281A             CMP      R0,#+26
   \   00000176   0xD01E             BEQ.N    ??MainLoop_29
   \   00000178   0x281B             CMP      R0,#+27
   \   0000017A   0xD016             BEQ.N    ??MainLoop_30
   \   0000017C   0x281C             CMP      R0,#+28
   \   0000017E   0xD017             BEQ.N    ??MainLoop_31
   \   00000180   0x281D             CMP      R0,#+29
   \   00000182   0xD015             BEQ.N    ??MainLoop_31
   \   00000184   0xE021             B.N      ??MainLoop_32
    322              {
    323                case MenuViewWavVolCur:
    324                GUI_VIEW_UI();
   \                     ??MainLoop_23:
   \   00000186   0x.... 0x....      BL       GUI_VIEW_UI
    325                break;
   \   0000018A   0xE01E             B.N      ??MainLoop_33
    326              case MenuViewWavVol:
    327                GUI_VIEW_U();
   \                     ??MainLoop_24:
   \   0000018C   0x.... 0x....      BL       GUI_VIEW_U
    328                break;
   \   00000190   0xE01B             B.N      ??MainLoop_33
    329              case MenuViewWavCur:
    330                GUI_VIEW_I();
   \                     ??MainLoop_25:
   \   00000192   0x.... 0x....      BL       GUI_VIEW_I
    331                break;
   \   00000196   0xE018             B.N      ??MainLoop_33
    332              case MenuViewVector:
    333                GUI_VIEW_VECT();
   \                     ??MainLoop_26:
   \   00000198   0x.... 0x....      BL       GUI_VIEW_VECT
    334                break;
   \   0000019C   0xE015             B.N      ??MainLoop_33
    335              case MenuViewListMeasure:
    336                GUI_VIEW_ListMeasure();
   \                     ??MainLoop_27:
   \   0000019E   0x.... 0x....      BL       GUI_VIEW_ListMeasure
    337                break;
   \   000001A2   0xE012             B.N      ??MainLoop_33
    338              case MenuViewListQuality1:
    339                GUI_VIEW_ListQuality();
   \                     ??MainLoop_28:
   \   000001A4   0x.... 0x....      BL       GUI_VIEW_ListQuality
    340                break;
   \   000001A8   0xE00F             B.N      ??MainLoop_33
    341              case MenuViewHarmoGraph1:
    342                GUI_VIEW_HarmoGraph();
   \                     ??MainLoop_30:
   \   000001AA   0x.... 0x....      BL       GUI_VIEW_HarmoGraph
    343                break;
   \   000001AE   0xE00C             B.N      ??MainLoop_33
    344              case MenuViewHarmoList1:
    345              case MenuViewHarmoList2:
    346                GUI_VIEW_HarmoList();
   \                     ??MainLoop_31:
   \   000001B0   0x.... 0x....      BL       GUI_VIEW_HarmoList
    347                break;
   \   000001B4   0xE009             B.N      ??MainLoop_33
    348              case MenuViewListQuality2: // wk --> 
    349                GUI_VIEW_ListQuality2(U_FLAG);
   \                     ??MainLoop_29:
   \   000001B6   0x....             LDR.N    R0,??DataTable4_20
   \   000001B8   0x7800             LDRB     R0,[R0, #+0]
   \   000001BA   0x.... 0x....      BL       GUI_VIEW_ListQuality2
    350                break;
   \   000001BE   0xE004             B.N      ??MainLoop_33
    351                
    352              case MenuStatus:
    353                GUI_STATUS(U_FLAG);
   \                     ??MainLoop_22:
   \   000001C0   0x....             LDR.N    R0,??DataTable4_20
   \   000001C2   0x7800             LDRB     R0,[R0, #+0]
   \   000001C4   0x.... 0x....      BL       GUI_STATUS
    354                break;  
   \   000001C8   0xE7FF             B.N      ??MainLoop_33
    355                
    356              default:
    357                break; 
    358              }
    359              break;
   \                     ??MainLoop_32:
   \                     ??MainLoop_33:
   \   000001CA   0xE018             B.N      ??MainLoop_21
    360              
    361            case 3:
    362              RefreshFlg = 0;
   \                     ??MainLoop_14:
   \   000001CC   0x....             LDR.N    R0,??DataTable4_7
   \   000001CE   0x2100             MOVS     R1,#+0
   \   000001D0   0x7001             STRB     R1,[R0, #+0]
    363              switch (Dis_PicID)
   \   000001D2   0x....             LDR.N    R0,??DataTable4_23
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x2828             CMP      R0,#+40
   \   000001D8   0xD00B             BEQ.N    ??MainLoop_34
   \   000001DA   0xD30F             BCC.N    ??MainLoop_35
   \   000001DC   0x282A             CMP      R0,#+42
   \   000001DE   0xD003             BEQ.N    ??MainLoop_36
   \   000001E0   0xD20C             BCS.N    ??MainLoop_35
    364              {
    365              case MenuEventList:
    366                GUI_EventList();   // 涉及 U 盘数据  --> wk 
   \                     ??MainLoop_37:
   \   000001E2   0x.... 0x....      BL       GUI_EventList
    367                break;
   \   000001E6   0xE009             B.N      ??MainLoop_38
    368              case MenuEventWave:
    369                GUI_EventWave(U_FLAG);   // 涉及 U 盘数据  --> wk
   \                     ??MainLoop_36:
   \   000001E8   0x....             LDR.N    R0,??DataTable4_20
   \   000001EA   0x7800             LDRB     R0,[R0, #+0]
   \   000001EC   0x.... 0x....      BL       GUI_EventWave
    370                break;
   \   000001F0   0xE004             B.N      ??MainLoop_38
    371              case MenuEventMON:
    372                GUI_EventMonitor(U_FLAG);  // 涉及 U 盘数据  --> wk
   \                     ??MainLoop_34:
   \   000001F2   0x....             LDR.N    R0,??DataTable4_20
   \   000001F4   0x7800             LDRB     R0,[R0, #+0]
   \   000001F6   0x.... 0x....      BL       GUI_EventMonitor
    373                break;
   \   000001FA   0xE7FF             B.N      ??MainLoop_38
    374                
    375              default:
    376                break;  
    377              }
    378              break;
   \                     ??MainLoop_35:
   \                     ??MainLoop_38:
   \   000001FC   0xE7FF             B.N      ??MainLoop_21
    379              
    380            default:
    381              break;
    382            }
    383          }
   \                     ??MainLoop_13:
   \                     ??MainLoop_21:
   \   000001FE   0xBD07             POP      {R0-R2,PC}       ;; return
    384           

   \                                 In section .text, align 2, keep-with-next
    385          void flg_int()   // wk --> 一些标志的初始化 
    386          {
    387              Dis_PicID=0;
   \                     flg_int:
   \   00000000   0x....             LDR.N    R0,??DataTable4_23
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7001             STRB     R1,[R0, #+0]
    388          //    HarmoGraphShift=0;//
    389              HarmoGraphPhase=1;// 默认值1
   \   00000006   0x....             LDR.N    R0,??DataTable4_26
   \   00000008   0x2101             MOVS     R1,#+1
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
    390              HarmoGraphRange=1;// 用于选择显示谐波范围，默认值为1,对应1~26次，2对应25~50
   \   0000000C   0x....             LDR.N    R0,??DataTable4_27
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    391              HarmoGraphUorder=1;// 用于控制谐波电压具体次数的数值显示
   \   00000012   0x....             LDR.N    R0,??DataTable4_28
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    392              HarmoGraphIorder=1;// 用于控制谐波电流具体次数的数值显示
   \   00000018   0x....             LDR.N    R0,??DataTable4_29
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
    393              HarmoListShift=0;// 谐波列表显示中的功能右移键
   \   0000001E   0x....             LDR.N    R0,??DataTable4_30
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
    394              HarmoListPhase=1;
   \   00000024   0x....             LDR.N    R0,??DataTable4_31
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x7001             STRB     R1,[R0, #+0]
    395              HarmoListUorI=1;
   \   0000002A   0x....             LDR.N    R0,??DataTable4_32
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    396              HarmoListRange=1;
   \   00000030   0x....             LDR.N    R0,??DataTable4_33
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x7001             STRB     R1,[R0, #+0]
    397              HarmoListAmporRatio=1;
   \   00000036   0x....             LDR.N    R0,??DataTable4_34
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0x7001             STRB     R1,[R0, #+0]
    398              VIEWHoldFlg=0; //保 持键默认为0，键按下时值变为1，再次按下时值变为0；
   \   0000003C   0x....             LDR.N    R0,??DataTable4_16
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x7001             STRB     R1,[R0, #+0]
    399              ViewKeyFlg=0;
   \   00000042   0x....             LDR.N    R0,??DataTable4_17
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x7001             STRB     R1,[R0, #+0]
    400              SysSetKeyFlg=0;
   \   00000048   0x....             LDR.N    R0,??DataTable4_21
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x7001             STRB     R1,[R0, #+0]
    401              EventKeyFlg=0;
   \   0000004E   0x....             LDR.N    R0,??DataTable4_19
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x7001             STRB     R1,[R0, #+0]
    402              MenuSwFlg=0;
   \   00000054   0x....             LDR.N    R0,??DataTable4_22
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x7001             STRB     R1,[R0, #+0]
    403              EVEpage=0;
   \   0000005A   0x....             LDR.N    R0,??DataTable4_35
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    404              EVEline=0;
   \   00000060   0x....             LDR.N    R0,??DataTable4_36
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x7001             STRB     R1,[R0, #+0]
    405              EVEfunflg=0;
   \   00000066   0x....             LDR.N    R0,??DataTable4_37
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x7001             STRB     R1,[R0, #+0]
    406              
    407              SavePowerFlg =0;
   \   0000006C   0x....             LDR.N    R0,??DataTable4_2
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    408          }
   \   00000072   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     `?<Constant "pin2_event">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     `?<Constant "Switch2 is pressed(in...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     SavePowerFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x002DC6C0         DC32     0x2dc6c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     `?<Constant "\\n----------MAIN&GUI_T...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     `?<Constant "\\n----------          ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     `?<Constant "\\n----------      END ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     RefreshFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     `?<Constant "SYSSET">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     `?<Constant {2181038099L, 0L}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant "gpio:read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     int_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     timer_isr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     SysFlashData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     SysFlashDataT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     SPIPowerFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     VIEWHoldFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     ViewKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     SPIEventFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     EventKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     U_FLAG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     SysSetKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     MenuSwFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     Dis_PicID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     Time_Ref

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     USB_Flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     HarmoGraphPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x........         DC32     HarmoGraphRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x........         DC32     HarmoGraphUorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x........         DC32     HarmoGraphIorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x........         DC32     HarmoListShift

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x........         DC32     HarmoListPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x........         DC32     HarmoListUorI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_33:
   \   00000000   0x........         DC32     HarmoListRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_34:
   \   00000000   0x........         DC32     HarmoListAmporRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_35:
   \   00000000   0x........         DC32     EVEpage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_36:
   \   00000000   0x........         DC32     EVEline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_37:
   \   00000000   0x........         DC32     EVEfunflg

   \                                 In section .rodata, align 4
   \                     `?<Constant "MAIN&GUI_Task">`:
   \   00000000   0x4D 0x41          DC8 "MAIN&GUI_Task"
   \              0x49 0x4E    
   \              0x26 0x47    
   \              0x55 0x49    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Shell_Task">`:
   \   00000000   0x53 0x68          DC8 "Shell_Task"
   \              0x65 0x6C    
   \              0x6C 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "FTP_Task">`:
   \   00000000   0x46 0x54          DC8 "FTP_Task"
   \              0x50 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "tcp_socket_task">`:
   \   00000000   0x74 0x63          DC8 "tcp_socket_task"
   \              0x70 0x5F    
   \              0x73 0x6F    
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x5F 0x74    
   \              0x61 0x73    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "USB_Task">`:
   \   00000000   0x55 0x53          DC8 "USB_Task"
   \              0x42 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash_Task">`:
   \   00000000   0x46 0x6C          DC8 "Flash_Task"
   \              0x61 0x73    
   \              0x68 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "UartTouch_Task">`:
   \   00000000   0x55 0x61          DC8 "UartTouch_Task"
   \              0x72 0x74    
   \              0x54 0x6F    
   \              0x75 0x63    
   \              0x68 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SPIDMA_Task">`:
   \   00000000   0x53 0x50          DC8 "SPIDMA_Task"
   \              0x49 0x44    
   \              0x4D 0x41    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "PIN2_Task">`:
   \   00000000   0x50 0x49          DC8 "PIN2_Task"
   \              0x4E 0x32    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "pin2_event">`:
   \   00000000   0x70 0x69          DC8 "pin2_event"
   \              0x6E 0x32    
   \              0x5F 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Switch2 is pressed(in...">`:
   \   00000000   0x53 0x77          DC8 "Switch2 is pressed(int mode)!\012"
   \              0x69 0x74    
   \              0x63 0x68    
   \              0x32 0x20    
   \              0x69 0x73    
   \              0x20 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x65 0x64    
   \              0x28 0x69    
   \              0x6E 0x74    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x29    
   \              0x21 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------MAIN&GUI_T...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------MAIN&GUI_Task----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x4D    
   \              0x41 0x49    
   \              0x4E 0x26    
   \              0x47 0x55    
   \              0x49 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------          ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------             ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------      END ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------      END    ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x45    
   \              0x4E 0x44    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x64          DC8 "cd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x66 0x3A          DC8 "f:\\"
   \              0x5C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "SYSSET">`:
   \   00000000   0x53 0x59          DC8 "SYSSET"
   \              0x53 0x53    
   \              0x45 0x54    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {2181038099L, 0L}>`:
   \   00000000   0x82000013         DC32 2181038099, 0
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     `?<Constant "gpio:read">`:
   \   00000000   0x67 0x70          DC8 "gpio:read"
   \              0x69 0x6F    
   \              0x3A 0x72    
   \              0x65 0x61    
   \              0x64 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       16  MainLoop
             16 -> EventSave
             16 -> GUI_EventList
             16 -> GUI_EventMonitor
             16 -> GUI_EventWave
             16 -> GUI_INIT_SET
             16 -> GUI_STATUS
             16 -> GUI_SYS_EVENTSET
             16 -> GUI_SYS_PARASET
             16 -> GUI_VIEW_HarmoGraph
             16 -> GUI_VIEW_HarmoList
             16 -> GUI_VIEW_I
             16 -> GUI_VIEW_ListMeasure
             16 -> GUI_VIEW_ListQuality
             16 -> GUI_VIEW_ListQuality2
             16 -> GUI_VIEW_U
             16 -> GUI_VIEW_UI
             16 -> GUI_VIEW_VECT
             16 -> PowerSave
             16 -> YADA_70
             16 -> YADA_71
       32  YaDa
             32 -> MainLoop
             32 -> Shell_cd
             32 -> Shell_mkdir
             32 -> Shell_search_file_r1
             32 -> UartLCD_init
             32 -> UartTouch_init
             32 -> YADA_5F
             32 -> YADA_70
             32 -> _io_fopen
             32 -> _io_ioctl
             32 -> _io_printf
             32 -> _lpt_install
             32 -> _lwmem_alloc_zero
             32 -> _lwmem_free
             32 -> _lwmem_set_type
             32 -> delay_ms
             32 -> flg_int
             32 -> spi2_dma_int
        0  flg_int
        8  int_callback
              8 -> _event_open
              8 -> _event_set
              8 -> _io_printf
        8  timer_isr
              8 -> _lpt_clear_int
              8 -> _lpt_init
              8 -> _lpt_run


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "FTP_Task">
      12  ?<Constant "Flash_Task">
      16  ?<Constant "MAIN&GUI_Task">
      12  ?<Constant "PIN2_Task">
      12  ?<Constant "SPIDMA_Task">
       8  ?<Constant "SYSSET">
      12  ?<Constant "Shell_Task">
      32  ?<Constant "Switch2 is pressed(in...">
      12  ?<Constant "USB_Task">
      16  ?<Constant "UartTouch_Task">
      36  ?<Constant "\n----------          ...">
      36  ?<Constant "\n----------      END ...">
      36  ?<Constant "\n----------MAIN&GUI_T...">
       4  ?<Constant "cd">
       4  ?<Constant "f:\\">
      12  ?<Constant "gpio:read">
      12  ?<Constant "pin2_event">
      16  ?<Constant "tcp_socket_task">
       8  ?<Constant {2181038099L, 0L}>
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_33
       4  ??DataTable4_34
       4  ??DataTable4_35
       4  ??DataTable4_36
       4  ??DataTable4_37
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
     320  MQX_template_list
     512  MainLoop
       1  RefreshFlg
       1  SavePowerFlg
       1  Time_Ref
       1  U_FLAG
     262  YaDa
     116  flg_int
      30  int_callback
       8  read_buffer
      42  timer_isr

 
     4 bytes in section .bss
     8 bytes in section .data
   628 bytes in section .rodata
 1 122 bytes in section .text
 
 1 122 bytes of CODE  memory
   628 bytes of CONST memory
    12 bytes of DATA  memory

Errors: none
Warnings: 8
