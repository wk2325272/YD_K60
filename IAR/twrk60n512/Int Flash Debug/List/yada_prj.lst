###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     26/Mar/2013  15:34:46 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_pr #
#                    j.c                                                      #
#    Command line =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_pr #
#                    j.c -D _DEBUG=1 -lC "L:\git_workspace\YD_PRJ_NEW_2013032 #
#                    3_git_\IAR\twrk60n512\Int Flash Debug\List\" -lA         #
#                    "L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n51 #
#                    2\Int Flash Debug\List\" --diag_suppress                 #
#                    Pa039,Pa082,Pe186 -o "L:\git_workspace\YD_PRJ_NEW_201303 #
#                    23_git_\IAR\twrk60n512\Int Flash Debug\Obj\" --no_cse    #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\ -I L:\git_workspace\YD_PRJ_NEW_20130323_git #
#                    _\IAR\..\lib\twrk60n512.iar\bsp\ -I                      #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\psp\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_Code\ -I   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\rtcs\ -I L:\git_workspace\YD_PRJ_NEW_2013032 #
#                    3_git_\IAR\..\lib\twrk60n512.iar\mfs\ -I                 #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\host\ -I L:\git_workspace\YD_PRJ_NEW_201 #
#                    30323_git_\IAR\..\lib\twrk60n512.iar\shell\ -I           #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\ -I L:\git_workspace\YD_PRJ_NEW_20130323_gi #
#                    t_\IAR\..\Source\Source_MQX\ -I "E:\Freescale\Freescale  #
#                    MQX 3.8\shell\source\include\" -Ol --use_c++_inline      #
#    List file    =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\List\yada_prj.lst                       #
#    Object file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\Obj\yada_prj.o                          #
#                                                                             #
#                                                                             #
###############################################################################

L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_prj.c
      1          
      2          #include <mqx.h>
      3          #include <bsp.h> 
      4          #include <fio.h>
      5          #include <string.h>
      6          #include "shell.h" // shell function
      7          #include "sh_prv.h"// shell function
      8          
      9          #include "System.h"
     10          /* application *.h */
     11          #include "MenuView.h"
     12          #include "LCDDriver.h"
     13          #include "LCDUart.h"
     14          #include "DSPSPI.h" 
     15          
     16          #if ! BSPCFG_ENABLE_IO_SUBSYSTEM
     17          #error This application requires BSPCFG_ENABLE_IO_SUBSYSTEM defined non-zero in user_config.h. Please recompile BSP with this option.
     18          #endif
     19          
     20          #define _GUI_DBUG_
     21          /* Task IDs */
     22          #define RS232_TASK 5
     23          

   \                                 In section .bss, align 1
     24          volatile U8 RefreshFlg; // 页面刷新标志
   \                     RefreshFlg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     25          U8 U_FLAG = 0;
   \                     U_FLAG:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     26          uchar read_buffer[8]={0x12,0x23};
   \                     read_buffer:
   \   00000000   0x12 0x23          DC8 18, 35, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .bss, align 1
     27          static U8 File_flg; // 第一次启动时建立文件夹标志
   \                     File_flg:
   \   00000000                      DS8 1
     28          
     29          extern void YaDa(uint_32);
     30          extern void MainLoop();
     31          
     32          extern void USB_task(uint_32 param);
     33          //extern void sdcard_task(uint_32 param);
     34          extern void FTP_task(uint_32 param);
     35          extern void Shell_Task(uint_32 param);
     36          extern void LCDTouchSel_Task(uint_32 param);
     37          extern void SPIDMA_Task( uint_32 param);
     38          extern void sdcard_task(uint_32 temp);
     39          extern void PIN2(uint_32 temp);
     40          extern void mem_flash_app(uint_32 temp);
     41          //void LCDTouchSel(uint_32 param);
     42          void flg_int();
     43          
     44          /*  pin2 int callback function */

   \                                 In section .text, align 2, keep-with-next
     45          void int_callback(void) 
     46          {
   \                     int_callback:
   \   00000000   0xB580             PUSH     {R7,LR}
     47            pointer ppin2_event;
     48            _event_open("pin2_event",&ppin2_event);
   \   00000002   0xA900             ADD      R1,SP,#+0
   \   00000004   0x....             LDR.N    R0,??DataTable3
   \   00000006   0x.... 0x....      BL       _event_open
     49            _event_set(ppin2_event,0x04);
   \   0000000A   0x2104             MOVS     R1,#+4
   \   0000000C   0x9800             LDR      R0,[SP, #+0]
   \   0000000E   0x.... 0x....      BL       _event_set
     50            
     51            printf("Switch2 is pressed(int mode)!\n");
   \   00000012   0x....             LDR.N    R0,??DataTable3_1
   \   00000014   0x.... 0x....      BL       _io_printf
     52          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
     53          
     54          /*
     55          ** 作者：
     56          ** 时间：2013-02-27
     57          ** 说明： Task ：YADA 与 Shell_Task 的优先级问题
     58          **　      在目前调试阶段，需要运行谁，将优先级提高
     59          **    --> 最后完善阶段，需要通过在 YADA 任务中选择调用 Shell_Task <--   ,--> 已解决，通过PIN2任务
     60          */

   \                                 In section .rodata, align 4
     61          const TASK_TEMPLATE_STRUCT  MQX_template_list[] =    //  | MQX_TIME_SLICE_TASK
   \                     MQX_template_list:
   \   00000000   0x00000001         DC32 1, YaDa, 1500, 11, `?<Constant "MAIN&GUI_Task">`, 1, 0, 1000, 2
   \              0x........   
   \              0x000005DC   
   \              0x0000000B   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x000003E8   
   \              0x00000002   
   \   00000024   0x........         DC32 Shell_Task, 4000, 12, `?<Constant "Shell_Task">`, 1, 0, 1000, 3
   \              0x00000FA0   
   \              0x0000000C   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x000003E8   
   \              0x00000003   
   \   00000044   0x........         DC32 FTP_task, 2000, 9, `?<Constant "FTP_Task">`, 1, 0, 0, 5, USB_task
   \              0x000007D0   
   \              0x00000009   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000005   
   \              0x........   
   \   00000068   0x00001450         DC32 5200, 8, `?<Constant "USB_Task">`, 1, 0, 0, 6, mem_flash_app, 4000
   \              0x00000008   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000006   
   \              0x........   
   \              0x00000FA0   
   \   0000008C   0x00000008         DC32 8, `?<Constant "Flash_Task">`, 1, 0, 0, 7, LCDTouchSel_Task, 1000
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000007   
   \              0x........   
   \              0x000003E8   
   \   000000AC   0x00000007         DC32 7, `?<Constant "UartTouch_Task">`, 1, 0, 0, 8, SPIDMA_Task, 5000
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000008   
   \              0x........   
   \              0x00001388   
   \   000000CC   0x00000006         DC32 6, `?<Constant "SPIDMA_Task">`, 1, 0, 0, 11, PIN2, 500, 9
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x0000000B   
   \              0x........   
   \              0x000001F4   
   \              0x00000009   
   \   000000F0   0x........         DC32 `?<Constant "PIN2_Task">`, 1, 0, 0, 0
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000104   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000114   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     62          { 
     63             /* Task Index,   Function,         Stack,  Priority, Name,     Attributes,          Param, Time Slice */
     64             {1,  YaDa,       1500,   11,         "MAIN&GUI_Task", MQX_AUTO_START_TASK , 0,    1000 },  // | MQX_TIME_SLICE_TASK
     65             {2,  Shell_Task, 4000L,  12, "Shell_Task",   MQX_AUTO_START_TASK, 0,     1000 },  //  | MQX_TIME_SLICE_TASK
     66             
     67             {3,  FTP_task,   2000,   9L,   "FTP_Task",     MQX_AUTO_START_TASK, 0,     0 },
     68             {5,  USB_task,   5200L,  8L,   "USB_Task",     MQX_AUTO_START_TASK, 0,     0 },
     69             {6,  mem_flash_app, 4000L,  8L,   "Flash_Task",     MQX_AUTO_START_TASK, 0,     0 },
     70             
     71             {7,  LCDTouchSel_Task ,1000,7 , "UartTouch_Task", MQX_AUTO_START_TASK, 0 , 0},
     72             {8,  SPIDMA_Task , 5000, 6 , "SPIDMA_Task",MQX_AUTO_START_TASK,0 ,0 },
     73             //   {10,  sdcard_task,2000L,  8L, "SDcard",  MQX_AUTO_START_TASK, 0,     0 },
     74             {11, PIN2,       500,   9L,  "PIN2_Task", MQX_AUTO_START_TASK,0 ,0 }, // 按键的处理任务
     75             { 0 }
     76          };
     77          
     78          /*TASK*-----------------------------------------------------
     79          * 
     80          * Task Name    : YaDa
     81          * Comments     :
     82          *    
     83          *
     84          *END*-----------------------------------------------------*/
     85          

   \                                 In section .text, align 2, keep-with-next
     86          void YaDa
     87             (
     88                uint_32 initial_data
     89             )
     90          {
   \                     YaDa:
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
     91          #ifdef _GUI_DBUG_
     92             printf("\n----------MAIN&GUI_Task----------\n");
   \   00000002   0x....             LDR.N    R0,??DataTable3_2
   \   00000004   0x.... 0x....      BL       _io_printf
     93             printf("\n----------             ----------\n");
   \   00000008   0x....             LDR.N    R0,??DataTable3_3
   \   0000000A   0x.... 0x....      BL       _io_printf
     94             printf("\n----------             ----------\n");
   \   0000000E   0x....             LDR.N    R0,??DataTable3_3
   \   00000010   0x.... 0x....      BL       _io_printf
     95             printf("\n----------      END    ----------\n");
   \   00000014   0x....             LDR.N    R0,??DataTable3_4
   \   00000016   0x.... 0x....      BL       _io_printf
     96          #endif 
     97            
     98            UartLCD_init();  // uart initialization
   \   0000001A   0x.... 0x....      BL       UartLCD_init
     99            UartTouch_init();
   \   0000001E   0x.... 0x....      BL       UartTouch_init
    100            flg_int(); // wk --> 初始化一些标志 !  
   \   00000022   0x.... 0x....      BL       flg_int
    101            spi2_dma_int(); // dsp2k60 spi2 初始化
   \   00000026   0x.... 0x....      BL       spi2_dma_int
    102            
    103            YADA_70(PageStart); //必要的初始化后进入首页
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       YADA_70
    104            delay_ms(1000); // wk -->test  延时1s
   \   00000030   0xF44F 0x707A      MOV      R0,#+1000
   \   00000034   0x.... 0x....      BL       delay_ms
    105          //  YADA_E4();  // wk --> 屏幕校正
    106            YADA_70(MenuTop);  // 进入菜单首页
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       YADA_70
    107            
    108            RefreshFlg = 0; //页面无刷新
   \   0000003E   0x....             LDR.N    R0,??DataTable3_5
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x7001             STRB     R1,[R0, #+0]
    109            
    110            /* test function of USB */  // wk --> for test  2013-02-28
    111          //  char_ptr create[]={"test","kkM2.txt"},write[]={"write","kkM2.txt","6"};  // wk --> test array of USB
    112          //  char_ptr buf[]={"test","kkM1.txt","6","begin","5","123456"};
    113          //  char_ptr buf_1[]={"test","kkM4.txt","begin","5"};
    114          //  uchar data[]={1,2,3,4,5,6};
    115          ////  Shell_create(2,create); 
    116          ////  Shell_write(3,write); 
    117          ////  Shell_write_buf(6,buf);
    118          //  Shell_write_binary(4,buf_1,6,data);
    119          //  /* read test */
    120          //    uchar data_r[10]={0};
    121          //    char_ptr read_buf[]={"read","kkM4.txt","5","begin","0"};
    122          //    Shell_read_wk(5,read_buf,data_r);
    123          //    printf("\n-------------------------read_test--------------------\n");
    124          //    for(int i=0;i<10;i++)
    125          //    {
    126          //      printf("data_r[%d]=%x\n",i,data_r[i]);
    127          //    }
    128          //    printf("end\n\n");
    129          //    
    130              if(File_flg==0)
   \   00000044   0x....             LDR.N    R0,??DataTable3_6
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD120             BNE.N    ??YaDa_0
    131              {
    132               SHELL_CONTEXT_PTR    shell_ptr;
    133               shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   0000004C   0xF44F 0x70F2      MOV      R0,#+484
   \   00000050   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000054   0x0004             MOVS     R4,R0
    134               _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   00000056   0xF245 0x0101      MOVW     R1,#+20481
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0x.... 0x....      BL       _lwmem_set_type
    135               
    136                shell_ptr->ARGC = 2;
   \   00000060   0x2002             MOVS     R0,#+2
   \   00000062   0x6220             STR      R0,[R4, #+32]
    137                shell_ptr->ARGV[0]="cd";
   \   00000064   0x....             ADR.N    R0,??DataTable2  ;; 0x63, 0x64, 0x00, 0x00
   \   00000066   0x6020             STR      R0,[R4, #+0]
    138                shell_ptr->ARGV[1]="f:\\"; 
   \   00000068   0x....             ADR.N    R0,??DataTable2_1  ;; "f:\\"
   \   0000006A   0x6060             STR      R0,[R4, #+4]
    139                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                       ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   0000006C   0x0021             MOVS     R1,R4
   \   0000006E   0x6A20             LDR      R0,[R4, #+32]
   \   00000070   0x.... 0x....      BL       Shell_cd
    140                
    141                shell_ptr->ARGC = 2;
   \   00000074   0x2002             MOVS     R0,#+2
   \   00000076   0x6220             STR      R0,[R4, #+32]
    142                shell_ptr->ARGV[0]="mkdir";
   \   00000078   0x....             LDR.N    R0,??DataTable3_7
   \   0000007A   0x6020             STR      R0,[R4, #+0]
    143                shell_ptr->ARGV[1]="sysset"; 
   \   0000007C   0x....             LDR.N    R0,??DataTable3_8
   \   0000007E   0x6060             STR      R0,[R4, #+4]
    144                Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
                       ^
Warning[Pe223]: function "Shell_mkdir" declared implicitly
   \   00000080   0x0021             MOVS     R1,R4
   \   00000082   0x6A20             LDR      R0,[R4, #+32]
   \   00000084   0x.... 0x....      BL       Shell_mkdir
    145          //      char_ptr buf_mkdir[]={"mkdir","sysset"};
    146          //      Shell_mkdir(2,buf_mkdir);
    147                File_flg=1;
   \   00000088   0x....             LDR.N    R0,??DataTable3_6
   \   0000008A   0x2101             MOVS     R1,#+1
   \   0000008C   0x7001             STRB     R1,[R0, #+0]
    148              }
    149          ////    Shell_cd(2,buf_mkdir);
    150            /* Test end */
    151            
    152            /* button1 into interrupt for shell or maingui task change */
    153             GPIO_PIN_STRUCT pins_int[] = {
    154                      BSP_BUTTON1 | GPIO_PIN_IRQ_RISING ,
    155                      GPIO_LIST_END
    156                  };
   \                     ??YaDa_0:
   \   0000008E   0xA800             ADD      R0,SP,#+0
   \   00000090   0x....             LDR.N    R1,??DataTable3_9
   \   00000092   0xC90C             LDM      R1!,{R2,R3}
   \   00000094   0xC00C             STM      R0!,{R2,R3}
   \   00000096   0x3908             SUBS     R1,R1,#+8
   \   00000098   0x3808             SUBS     R0,R0,#+8
    157              MQX_FILE_PTR port_file4;        
    158                   /* 这是按键1 上升沿中断*/
    159                   port_file4 = fopen("gpio:read", (char_ptr) &pins_int );
   \   0000009A   0xA900             ADD      R1,SP,#+0
   \   0000009C   0x....             LDR.N    R0,??DataTable3_10
   \   0000009E   0x.... 0x....      BL       _io_fopen
    160                   ioctl(port_file4, GPIO_IOCTL_SET_IRQ_FUNCTION, (pointer)int_callback);        
   \   000000A2   0x....             LDR.N    R2,??DataTable3_11
   \   000000A4   0xF240 0x3106      MOVW     R1,#+774
   \   000000A8   0x.... 0x....      BL       _io_ioctl
    161            /* end */
    162           
    163            while(1)
    164            {
    165              MainLoop(); //循环主程序
   \                     ??YaDa_1:
   \   000000AC   0x.... 0x....      BL       MainLoop
   \   000000B0   0xE7FC             B.N      ??YaDa_1
    166            }
    167          }
    168          
    169          /*******************************************************************************
    170          * 函  数  名      : MainLoop
    171          * 描      述      : main函数中的菜单主函数
    172          * 输      入      : 无
    173          * 返      回      : 无
    174          *******************************************************************************/
    175          

   \                                 In section .text, align 2, keep-with-next
    176          void MainLoop()
    177          {
   \                     MainLoop:
   \   00000000   0xB580             PUSH     {R7,LR}
    178          //  printf("Dis_PicID=%d\n",Dis_PicID);  // wk --> test
    179            if (SPIPowerFlg) //接收到电能数据
   \   00000002   0x....             LDR.N    R0,??DataTable3_12
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD00D             BEQ.N    ??MainLoop_0
    180            {
    181              if (VIEWHoldFlg == 0)
   \   0000000A   0x....             LDR.N    R0,??DataTable3_13
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD105             BNE.N    ??MainLoop_1
    182              {
    183                RefreshFlg = 2;
   \   00000012   0x....             LDR.N    R0,??DataTable3_5
   \   00000014   0x2102             MOVS     R1,#+2
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    184                ViewKeyFlg = 0; //VIEWHoldFlg为0时，可能有其余键按下，需要清零
   \   00000018   0x....             LDR.N    R0,??DataTable3_14
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
    185              }
    186              
    187              SPIPowerFlg = 0; // 清除标志
   \                     ??MainLoop_1:
   \   0000001E   0x....             LDR.N    R0,??DataTable3_12
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
   \   00000024   0xE009             B.N      ??MainLoop_2
    188            }
    189            else if(ViewKeyFlg) //  ? ViewKeyFlg ?
   \                     ??MainLoop_0:
   \   00000026   0x....             LDR.N    R0,??DataTable3_14
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD005             BEQ.N    ??MainLoop_2
    190            {
    191              RefreshFlg = 2;
   \   0000002E   0x....             LDR.N    R0,??DataTable3_5
   \   00000030   0x2102             MOVS     R1,#+2
   \   00000032   0x7001             STRB     R1,[R0, #+0]
    192              ViewKeyFlg = 0;
   \   00000034   0x....             LDR.N    R0,??DataTable3_14
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7001             STRB     R1,[R0, #+0]
    193            }
    194            
    195          #if 0 // WK --> 数据存储  待完善
    196            if (SPIEventFlg || EventKeyFlg) //接收到事件数据或者事件记录相关页有键按下时需要刷新
    197            {
    198              ReflashFlg = 3;
    199              if (SPIEventFlg)
    200              {
    201                EVEnum++;
    202                EventSave(U_FLAG);
    203              }
    204              SPIEventFlg = 0;
    205              EventKeyFlg = 0;
    206            }
    207          #endif
    208            
    209            if(SysSetKeyFlg) //系统设置页有键按下时需要刷新
   \                     ??MainLoop_2:
   \   0000003A   0x....             LDR.N    R0,??DataTable3_15
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD005             BEQ.N    ??MainLoop_3
    210            {
    211               SysSetKeyFlg = 0;
   \   00000042   0x....             LDR.N    R0,??DataTable3_15
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x7001             STRB     R1,[R0, #+0]
    212               RefreshFlg = 1; 
   \   00000048   0x....             LDR.N    R0,??DataTable3_5
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x7001             STRB     R1,[R0, #+0]
    213            }
    214            
    215            if (MenuSwFlg == 1) //不能放在switch中，功能键按下时会整体刷新一次;页面切换必须放判断刷新之后，否则出现频繁操作后，页面没有数据的现象
   \                     ??MainLoop_3:
   \   0000004E   0x....             LDR.N    R0,??DataTable3_16
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x2801             CMP      R0,#+1
   \   00000054   0xD10C             BNE.N    ??MainLoop_4
    216            {
    217              MenuSwFlg = 0 ;
   \   00000056   0x....             LDR.N    R0,??DataTable3_16
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x7001             STRB     R1,[R0, #+0]
    218              YADA_70(Dis_PicID);
   \   0000005C   0x....             LDR.N    R0,??DataTable3_17
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000062   0x.... 0x....      BL       YADA_70
    219              
    220              YADA_70(Dis_PicID); //有时会出现切屏不及时，冗余思想
   \   00000066   0x....             LDR.N    R0,??DataTable3_17
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006C   0x.... 0x....      BL       YADA_70
    221            }
    222            
    223            /* ……*/
    224            switch(RefreshFlg)
   \                     ??MainLoop_4:
   \   00000070   0x....             LDR.N    R0,??DataTable3_5
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x2801             CMP      R0,#+1
   \   00000076   0xD004             BEQ.N    ??MainLoop_5
   \   00000078   0xD358             BCC.N    ??MainLoop_6
   \   0000007A   0x2803             CMP      R0,#+3
   \   0000007C   0xD047             BEQ.N    ??MainLoop_7
   \   0000007E   0xD311             BCC.N    ??MainLoop_8
   \   00000080   0xE054             B.N      ??MainLoop_6
    225            {
    226            case 1:
    227              RefreshFlg = 0;
   \                     ??MainLoop_5:
   \   00000082   0x....             LDR.N    R0,??DataTable3_5
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x7001             STRB     R1,[R0, #+0]
    228              switch (Dis_PicID)
   \   00000088   0x....             LDR.N    R0,??DataTable3_17
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x280A             CMP      R0,#+10
   \   0000008E   0xD002             BEQ.N    ??MainLoop_9
   \   00000090   0x280B             CMP      R0,#+11
   \   00000092   0xD003             BEQ.N    ??MainLoop_10
   \   00000094   0xE005             B.N      ??MainLoop_11
    229              {
    230                case MenuParaSET:
    231                  GUI_SYS_PARASET();
   \                     ??MainLoop_9:
   \   00000096   0x.... 0x....      BL       GUI_SYS_PARASET
    232                  break;
   \   0000009A   0xE002             B.N      ??MainLoop_12
    233                case MenuEventSET:
    234                GUI_SYS_EVENTSET();  // 涉及 U盘数据  --> wk 
   \                     ??MainLoop_10:
   \   0000009C   0x.... 0x....      BL       GUI_SYS_EVENTSET
    235                  break;
   \   000000A0   0xE7FF             B.N      ??MainLoop_12
    236                default:
    237                  break;
    238              }
    239              break;
   \                     ??MainLoop_11:
   \                     ??MainLoop_12:
   \   000000A2   0xE043             B.N      ??MainLoop_13
    240              
    241            case 2:
    242              RefreshFlg = 0;
   \                     ??MainLoop_8:
   \   000000A4   0x....             LDR.N    R0,??DataTable3_5
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x7001             STRB     R1,[R0, #+0]
    243              switch (Dis_PicID)
   \   000000AA   0x....             LDR.N    R0,??DataTable3_17
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0x2814             CMP      R0,#+20
   \   000000B0   0xD00F             BEQ.N    ??MainLoop_14
   \   000000B2   0xD32B             BCC.N    ??MainLoop_15
   \   000000B4   0x2816             CMP      R0,#+22
   \   000000B6   0xD012             BEQ.N    ??MainLoop_16
   \   000000B8   0xD30E             BCC.N    ??MainLoop_17
   \   000000BA   0x2818             CMP      R0,#+24
   \   000000BC   0xD015             BEQ.N    ??MainLoop_18
   \   000000BE   0xD311             BCC.N    ??MainLoop_19
   \   000000C0   0x281A             CMP      R0,#+26
   \   000000C2   0xD01E             BEQ.N    ??MainLoop_20
   \   000000C4   0xD314             BCC.N    ??MainLoop_21
   \   000000C6   0x281C             CMP      R0,#+28
   \   000000C8   0xD018             BEQ.N    ??MainLoop_22
   \   000000CA   0xD314             BCC.N    ??MainLoop_23
   \   000000CC   0x281D             CMP      R0,#+29
   \   000000CE   0xD015             BEQ.N    ??MainLoop_22
   \   000000D0   0xE01C             B.N      ??MainLoop_15
    244              {
    245                case MenuViewWavVolCur:
    246                 
    247                GUI_VIEW_UI();
   \                     ??MainLoop_14:
   \   000000D2   0x.... 0x....      BL       GUI_VIEW_UI
    248                break;
   \   000000D6   0xE019             B.N      ??MainLoop_24
    249              case MenuViewWavVol:
    250                GUI_VIEW_U();
   \                     ??MainLoop_17:
   \   000000D8   0x.... 0x....      BL       GUI_VIEW_U
    251                break;
   \   000000DC   0xE016             B.N      ??MainLoop_24
    252              case MenuViewWavCur:
    253                GUI_VIEW_I();
   \                     ??MainLoop_16:
   \   000000DE   0x.... 0x....      BL       GUI_VIEW_I
    254                break;
   \   000000E2   0xE013             B.N      ??MainLoop_24
    255              case MenuViewVector:
    256                GUI_VIEW_VECT();
   \                     ??MainLoop_19:
   \   000000E4   0x.... 0x....      BL       GUI_VIEW_VECT
    257                break;
   \   000000E8   0xE010             B.N      ??MainLoop_24
    258              case MenuViewListMeasure:
    259                GUI_VIEW_ListMeasure();
   \                     ??MainLoop_18:
   \   000000EA   0x.... 0x....      BL       GUI_VIEW_ListMeasure
    260                break;
   \   000000EE   0xE00D             B.N      ??MainLoop_24
    261              case MenuViewListQuality1:
    262                GUI_VIEW_ListQuality();
   \                     ??MainLoop_21:
   \   000000F0   0x.... 0x....      BL       GUI_VIEW_ListQuality
    263                break;
   \   000000F4   0xE00A             B.N      ??MainLoop_24
    264              case MenuViewHarmoGraph1:
    265                GUI_VIEW_HarmoGraph();
   \                     ??MainLoop_23:
   \   000000F6   0x.... 0x....      BL       GUI_VIEW_HarmoGraph
    266                break;
   \   000000FA   0xE007             B.N      ??MainLoop_24
    267              case MenuViewHarmoList1:
    268              case MenuViewHarmoList2:
    269                GUI_VIEW_HarmoList();
   \                     ??MainLoop_22:
   \   000000FC   0x.... 0x....      BL       GUI_VIEW_HarmoList
    270                break;
   \   00000100   0xE004             B.N      ??MainLoop_24
    271              case MenuViewListQuality2: // wk --> 
    272                GUI_VIEW_ListQuality2(U_FLAG);
   \                     ??MainLoop_20:
   \   00000102   0x....             LDR.N    R0,??DataTable3_18
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x.... 0x....      BL       GUI_VIEW_ListQuality2
    273                break;
   \   0000010A   0xE7FF             B.N      ??MainLoop_24
    274                
    275              default:
    276                break; 
    277              }
    278              break;
   \                     ??MainLoop_15:
   \                     ??MainLoop_24:
   \   0000010C   0xE00E             B.N      ??MainLoop_13
    279              
    280            case 3:
    281              RefreshFlg = 0;
   \                     ??MainLoop_7:
   \   0000010E   0x....             LDR.N    R0,??DataTable3_5
   \   00000110   0x2100             MOVS     R1,#+0
   \   00000112   0x7001             STRB     R1,[R0, #+0]
    282              switch (Dis_PicID)
   \   00000114   0x....             LDR.N    R0,??DataTable3_17
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x2828             CMP      R0,#+40
   \   0000011A   0xD005             BEQ.N    ??MainLoop_25
   \   0000011C   0xD305             BCC.N    ??MainLoop_26
   \   0000011E   0x282A             CMP      R0,#+42
   \   00000120   0xD001             BEQ.N    ??MainLoop_27
   \   00000122   0xD202             BCS.N    ??MainLoop_26
    283              {
    284              case MenuEventList:
    285          //      GUI_EVENTList();   // 涉及 U 盘数据  --> wk 
    286                break;
   \                     ??MainLoop_28:
   \   00000124   0xE001             B.N      ??MainLoop_29
    287              case MenuEventWave:
    288          //      GUI_EventWave(U_FLAG);   // 涉及 U 盘数据  --> wk
    289                break;
   \                     ??MainLoop_27:
   \   00000126   0xE000             B.N      ??MainLoop_29
    290              case MenuEventMON:
    291          //      GUI_EventMonitor(U_FLAG);  // 涉及 U 盘数据  --> wk
    292                break;
   \                     ??MainLoop_25:
   \   00000128   0xE7FF             B.N      ??MainLoop_29
    293                
    294              default:
    295                break;  
    296              }
    297              break;
   \                     ??MainLoop_26:
   \                     ??MainLoop_29:
   \   0000012A   0xE7FF             B.N      ??MainLoop_13
    298              
    299            default:
    300              break;
    301            }
    302          }
   \                     ??MainLoop_6:
   \                     ??MainLoop_13:
   \   0000012C   0xBD01             POP      {R0,PC}          ;; return
    303           

   \                                 In section .text, align 2, keep-with-next
    304          void flg_int()   // wk --> 一些标志的初始化 
    305          {
    306              Dis_PicID=0;
   \                     flg_int:
   \   00000000   0x....             LDR.N    R0,??DataTable3_17
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7001             STRB     R1,[R0, #+0]
    307          //    HarmoGraphShift=0;//
    308              HarmoGraphPhase=1;// 默认值1
   \   00000006   0x....             LDR.N    R0,??DataTable3_19
   \   00000008   0x2101             MOVS     R1,#+1
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
    309              HarmoGraphRange=1;// 用于选择显示谐波范围，默认值为1,对应1~26次，2对应25~50
   \   0000000C   0x....             LDR.N    R0,??DataTable3_20
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    310              HarmoGraphUorder=1;// 用于控制谐波电压具体次数的数值显示
   \   00000012   0x....             LDR.N    R0,??DataTable3_21
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    311              HarmoGraphIorder=1;// 用于控制谐波电流具体次数的数值显示
   \   00000018   0x....             LDR.N    R0,??DataTable3_22
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
    312              HarmoListShift=0;// 谐波列表显示中的功能右移键
   \   0000001E   0x....             LDR.N    R0,??DataTable3_23
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
    313              HarmoListPhase=1;
   \   00000024   0x....             LDR.N    R0,??DataTable3_24
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x7001             STRB     R1,[R0, #+0]
    314              HarmoListUorI=1;
   \   0000002A   0x....             LDR.N    R0,??DataTable3_25
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    315              HarmoListRange=1;
   \   00000030   0x....             LDR.N    R0,??DataTable3_26
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x7001             STRB     R1,[R0, #+0]
    316              HarmoListAmporRatio=1;
   \   00000036   0x....             LDR.N    R0,??DataTable3_27
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0x7001             STRB     R1,[R0, #+0]
    317              VIEWHoldFlg=0; //保 持键默认为0，键按下时值变为1，再次按下时值变为0；
   \   0000003C   0x....             LDR.N    R0,??DataTable3_13
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x7001             STRB     R1,[R0, #+0]
    318              ViewKeyFlg=0;
   \   00000042   0x....             LDR.N    R0,??DataTable3_14
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x7001             STRB     R1,[R0, #+0]
    319              SysSetKeyFlg=0;
   \   00000048   0x....             LDR.N    R0,??DataTable3_15
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x7001             STRB     R1,[R0, #+0]
    320              EventKeyFlg=0;
   \   0000004E   0x....             LDR.N    R0,??DataTable3_28
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x7001             STRB     R1,[R0, #+0]
    321              MenuSwFlg=0;
   \   00000054   0x....             LDR.N    R0,??DataTable3_16
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x7001             STRB     R1,[R0, #+0]
    322              EVEpage=0;
   \   0000005A   0x....             LDR.N    R0,??DataTable3_29
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    323              EVEline=0;
   \   00000060   0x....             LDR.N    R0,??DataTable3_30
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x7001             STRB     R1,[R0, #+0]
    324              EVEfunflg=0;
   \   00000066   0x....             LDR.N    R0,??DataTable3_31
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x7001             STRB     R1,[R0, #+0]
    325              
    326              File_flg=0;// wk -->
   \   0000006C   0x....             LDR.N    R0,??DataTable3_6
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    327          }
   \   00000072   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     `?<Constant "pin2_event">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     `?<Constant "Switch2 is pressed(in...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     `?<Constant "\\n----------MAIN&GUI_T...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     `?<Constant "\\n----------          ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     `?<Constant "\\n----------      END ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     RefreshFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     File_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     `?<Constant "mkdir">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     `?<Constant "sysset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     `?<Constant {2181038099L, 0L}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     `?<Constant "gpio:read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     int_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     SPIPowerFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     VIEWHoldFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     ViewKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     SysSetKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     MenuSwFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     Dis_PicID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     U_FLAG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     HarmoGraphPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x........         DC32     HarmoGraphRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     HarmoGraphUorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     HarmoGraphIorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     HarmoListShift

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     HarmoListPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     HarmoListUorI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     HarmoListRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     HarmoListAmporRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x........         DC32     EventKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x........         DC32     EVEpage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x........         DC32     EVEline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     EVEfunflg

   \                                 In section .rodata, align 4
   \                     `?<Constant "MAIN&GUI_Task">`:
   \   00000000   0x4D 0x41          DC8 "MAIN&GUI_Task"
   \              0x49 0x4E    
   \              0x26 0x47    
   \              0x55 0x49    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Shell_Task">`:
   \   00000000   0x53 0x68          DC8 "Shell_Task"
   \              0x65 0x6C    
   \              0x6C 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "FTP_Task">`:
   \   00000000   0x46 0x54          DC8 "FTP_Task"
   \              0x50 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "USB_Task">`:
   \   00000000   0x55 0x53          DC8 "USB_Task"
   \              0x42 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash_Task">`:
   \   00000000   0x46 0x6C          DC8 "Flash_Task"
   \              0x61 0x73    
   \              0x68 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "UartTouch_Task">`:
   \   00000000   0x55 0x61          DC8 "UartTouch_Task"
   \              0x72 0x74    
   \              0x54 0x6F    
   \              0x75 0x63    
   \              0x68 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SPIDMA_Task">`:
   \   00000000   0x53 0x50          DC8 "SPIDMA_Task"
   \              0x49 0x44    
   \              0x4D 0x41    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "PIN2_Task">`:
   \   00000000   0x50 0x49          DC8 "PIN2_Task"
   \              0x4E 0x32    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "pin2_event">`:
   \   00000000   0x70 0x69          DC8 "pin2_event"
   \              0x6E 0x32    
   \              0x5F 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Switch2 is pressed(in...">`:
   \   00000000   0x53 0x77          DC8 "Switch2 is pressed(int mode)!\012"
   \              0x69 0x74    
   \              0x63 0x68    
   \              0x32 0x20    
   \              0x69 0x73    
   \              0x20 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x65 0x64    
   \              0x28 0x69    
   \              0x6E 0x74    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x29    
   \              0x21 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------MAIN&GUI_T...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------MAIN&GUI_Task----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x4D    
   \              0x41 0x49    
   \              0x4E 0x26    
   \              0x47 0x55    
   \              0x49 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------          ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------             ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------      END ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------      END    ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x45    
   \              0x4E 0x44    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x64          DC8 "cd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x66 0x3A          DC8 "f:\\"
   \              0x5C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mkdir">`:
   \   00000000   0x6D 0x6B          DC8 "mkdir"
   \              0x64 0x69    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysset">`:
   \   00000000   0x73 0x79          DC8 "sysset"
   \              0x73 0x73    
   \              0x65 0x74    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {2181038099L, 0L}>`:
   \   00000000   0x82000013         DC32 2181038099, 0
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     `?<Constant "gpio:read">`:
   \   00000000   0x67 0x70          DC8 "gpio:read"
   \              0x69 0x6F    
   \              0x3A 0x72    
   \              0x65 0x61    
   \              0x64 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  MainLoop
              8 -> GUI_SYS_EVENTSET
              8 -> GUI_SYS_PARASET
              8 -> GUI_VIEW_HarmoGraph
              8 -> GUI_VIEW_HarmoList
              8 -> GUI_VIEW_I
              8 -> GUI_VIEW_ListMeasure
              8 -> GUI_VIEW_ListQuality
              8 -> GUI_VIEW_ListQuality2
              8 -> GUI_VIEW_U
              8 -> GUI_VIEW_UI
              8 -> GUI_VIEW_VECT
              8 -> YADA_70
       16  YaDa
             16 -> MainLoop
             16 -> Shell_cd
             16 -> Shell_mkdir
             16 -> UartLCD_init
             16 -> UartTouch_init
             16 -> YADA_70
             16 -> _io_fopen
             16 -> _io_ioctl
             16 -> _io_printf
             16 -> _lwmem_alloc_zero
             16 -> _lwmem_set_type
             16 -> delay_ms
             16 -> flg_int
             16 -> spi2_dma_int
        0  flg_int
        8  int_callback
              8 -> _event_open
              8 -> _event_set
              8 -> _io_printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "FTP_Task">
      12  ?<Constant "Flash_Task">
      16  ?<Constant "MAIN&GUI_Task">
      12  ?<Constant "PIN2_Task">
      12  ?<Constant "SPIDMA_Task">
      12  ?<Constant "Shell_Task">
      32  ?<Constant "Switch2 is pressed(in...">
      12  ?<Constant "USB_Task">
      16  ?<Constant "UartTouch_Task">
      36  ?<Constant "\n----------          ...">
      36  ?<Constant "\n----------      END ...">
      36  ?<Constant "\n----------MAIN&GUI_T...">
       4  ?<Constant "cd">
       4  ?<Constant "f:\\">
      12  ?<Constant "gpio:read">
       8  ?<Constant "mkdir">
      12  ?<Constant "pin2_event">
       8  ?<Constant "sysset">
       8  ?<Constant {2181038099L, 0L}>
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       1  File_flg
     288  MQX_template_list
     302  MainLoop
       1  RefreshFlg
       1  U_FLAG
     178  YaDa
     116  flg_int
      26  int_callback
       8  read_buffer

 
   3 bytes in section .bss
   8 bytes in section .data
 588 bytes in section .rodata
 758 bytes in section .text
 
 758 bytes of CODE  memory
 588 bytes of CONST memory
  11 bytes of DATA  memory

Errors: none
Warnings: 2
