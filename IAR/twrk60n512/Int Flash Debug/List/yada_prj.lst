###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     03/Apr/2013  20:43:00 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_pr #
#                    j.c                                                      #
#    Command line =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_pr #
#                    j.c -D _DEBUG=1 -lC "L:\git_workspace\YD_PRJ_NEW_2013032 #
#                    3_git_\IAR\twrk60n512\Int Flash Debug\List\" -lA         #
#                    "L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n51 #
#                    2\Int Flash Debug\List\" --diag_suppress                 #
#                    Pa039,Pa082,Pe186 -o "L:\git_workspace\YD_PRJ_NEW_201303 #
#                    23_git_\IAR\twrk60n512\Int Flash Debug\Obj\" --no_cse    #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\ -I L:\git_workspace\YD_PRJ_NEW_20130323_git #
#                    _\IAR\..\lib\twrk60n512.iar\bsp\ -I                      #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\psp\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_Code\ -I   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\rtcs\ -I L:\git_workspace\YD_PRJ_NEW_2013032 #
#                    3_git_\IAR\..\lib\twrk60n512.iar\mfs\ -I                 #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\host\ -I L:\git_workspace\YD_PRJ_NEW_201 #
#                    30323_git_\IAR\..\lib\twrk60n512.iar\shell\ -I           #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\ -I L:\git_workspace\YD_PRJ_NEW_20130323_gi #
#                    t_\IAR\..\Source\Source_MQX\ -I "E:\Freescale\Freescale  #
#                    MQX 3.8\shell\source\include\" -Ol --use_c++_inline      #
#    List file    =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\List\yada_prj.lst                       #
#    Object file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\Obj\yada_prj.o                          #
#                                                                             #
#                                                                             #
###############################################################################

L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_prj.c
      1          
      2          #include <mqx.h>
      3          #include <bsp.h> 
      4          #include <fio.h>
      5          #include <string.h>
      6          #include "shell.h" // shell function
      7          #include "sh_prv.h"// shell function
      8          #include <mfs.h>  // wk @130330 --> test mfs func
      9          
     10          #include "System.h"
     11          /* application *.h */
     12          #include "MenuView.h"
     13          #include "LCDDriver.h"
     14          #include "LCDUart.h"
     15          #include "DSPSPI.h" 
     16          
     17          #if ! BSPCFG_ENABLE_IO_SUBSYSTEM
     18          #error This application requires BSPCFG_ENABLE_IO_SUBSYSTEM defined non-zero in user_config.h. Please recompile BSP with this option.
     19          #endif
     20          
     21          #define _GUI_DBUG_
     22          /* Task IDs */
     23          #define RS232_TASK 5
     24          #define LPT_FLAG_CLOCK_SOURCE_LPO           (0x00000002) // wk @130330 --> test timer
     25          

   \                                 In section .bss, align 1
     26          volatile U8 RefreshFlg; // 页面刷新标志
   \                     RefreshFlg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     27          U8 U_FLAG = 0;
   \                     U_FLAG:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     28          uchar read_buffer[8]={0x12,0x23};  // wk @130403 --> uncomment
   \                     read_buffer:
   \   00000000   0x12 0x23          DC8 18, 35, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     29          //static U8 File_flg; // 第一次启动时建立文件夹标志

   \                                 In section .bss, align 1
     30          U8 SavePowerFlg; // WK @130401 --> 电能质量数据存储标志 1时存储
   \                     SavePowerFlg:
   \   00000000                      DS8 1
     31          
     32          extern void YaDa(uint_32);
     33          extern void MainLoop();
     34          
     35          extern void USB_task(uint_32 param);
     36          //extern void sdcard_task(uint_32 param);
     37          extern void FTP_task(uint_32 param);
     38          extern void Shell_Task(uint_32 param);
     39          extern void LCDTouchSel_Task(uint_32 param);
     40          extern void SPIDMA_Task( uint_32 param);
     41          extern void sdcard_task(uint_32 temp);
     42          extern void PIN2(uint_32 temp);
     43          extern void mem_flash_app(uint_32 temp);
     44          extern void tcp_socket_task( uint_32 val);
     45          //void LCDTouchSel(uint_32 param);
     46          
     47          void flg_int();
     48          
     49          /*  pin2 int callback function */

   \                                 In section .text, align 2, keep-with-next
     50          void int_callback(void) 
     51          {
   \                     int_callback:
   \   00000000   0xB580             PUSH     {R7,LR}
     52            pointer ppin2_event;
     53            _event_open("pin2_event",&ppin2_event);
   \   00000002   0xA900             ADD      R1,SP,#+0
   \   00000004   0x....             LDR.N    R0,??DataTable4
   \   00000006   0x.... 0x....      BL       _event_open
     54            _event_set(ppin2_event,0x04);
   \   0000000A   0x2104             MOVS     R1,#+4
   \   0000000C   0x9800             LDR      R0,[SP, #+0]
   \   0000000E   0x.... 0x....      BL       _event_set
     55            
     56            printf("Switch2 is pressed(int mode)!\n");
   \   00000012   0x....             LDR.N    R0,??DataTable4_1
   \   00000014   0x.... 0x....      BL       _io_printf
     57          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
     58          /*******************************************************************************
     59          ** Function Name	：timser_isr
     60          ** Input		：device num of timer
     61          ** Return		：void
     62          ** Author		：wk
     63          ** Version	：v1.0
     64          ** Date		：130330
     65          ** Dessription	：LPT 定时器中断函数入口
     66          ** Reverse	：
     67          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     68          static void timer_isr
     69              (
     70                  pointer parameter
     71              )
     72          {
   \                     timer_isr:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     73              uint_32 timer = (uint_32)parameter;
     74              
     75              /* Stop the timer */
     76              _lpt_run (timer, FALSE);
                     ^
Warning[Pe223]: function "_lpt_run" declared implicitly
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _lpt_run
     77              _lpt_clear_int (timer);
                     ^
Warning[Pe223]: function "_lpt_clear_int" declared implicitly
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       _lpt_clear_int
     78          
     79          //    printf("\nhellow\n");
     80              SavePowerFlg =1;
   \   00000012   0x....             LDR.N    R0,??DataTable4_2
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7001             STRB     R1,[R0, #+0]
     81          //    EventKeyFlg=1; // wk @130401 --> test event data save
     82              _lpt_init(0,3 * 1000000 , LPT_FLAG_CLOCK_SOURCE_LPO,TRUE);
                     ^
Warning[Pe223]: function "_lpt_init" declared implicitly
   \   00000018   0x2301             MOVS     R3,#+1
   \   0000001A   0x2202             MOVS     R2,#+2
   \   0000001C   0x....             LDR.N    R1,??DataTable4_3  ;; 0x2dc6c0
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       _lpt_init
     83          }
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
     84          
     85          /*
     86          ** 作者：
     87          ** 时间：2013-02-27
     88          ** 说明： Task ：YADA 与 Shell_Task 的优先级问题
     89          **　      在目前调试阶段，需要运行谁，将优先级提高
     90          **    --> 最后完善阶段，需要通过在 YADA 任务中选择调用 Shell_Task <--   ,--> 已解决，通过PIN2任务
     91          */

   \                                 In section .rodata, align 4
     92          const TASK_TEMPLATE_STRUCT  MQX_template_list[] =    //  | MQX_TIME_SLICE_TASK
   \                     MQX_template_list:
   \   00000000   0x00000001         DC32 1, YaDa, 1500, 11, `?<Constant "MAIN&GUI_Task">`, 1, 0, 1000, 2
   \              0x........   
   \              0x000005DC   
   \              0x0000000B   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x000003E8   
   \              0x00000002   
   \   00000024   0x........         DC32 Shell_Task, 4000, 12, `?<Constant "Shell_Task">`, 1, 0, 1000, 3
   \              0x00000FA0   
   \              0x0000000C   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x000003E8   
   \              0x00000003   
   \   00000044   0x........         DC32 FTP_task, 2000, 9, `?<Constant "FTP_Task">`, 1, 0, 0, 4
   \              0x000007D0   
   \              0x00000009   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000004   
   \   00000064   0x........         DC32 tcp_socket_task, 3000, 9, `?<Constant "tcp_socket_task">`, 0, 0, 0
   \              0x00000BB8   
   \              0x00000009   
   \              0x........   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000080   0x00000005         DC32 5, USB_task, 5200, 8, `?<Constant "USB_Task">`, 1, 0, 0, 6
   \              0x........   
   \              0x00001450   
   \              0x00000008   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000006   
   \   000000A4   0x........         DC32 mem_flash_app, 4000, 8, `?<Constant "Flash_Task">`, 1, 0, 0, 7
   \              0x00000FA0   
   \              0x00000008   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000007   
   \   000000C4   0x........         DC32 LCDTouchSel_Task, 1000, 7, `?<Constant "UartTouch_Task">`, 1, 0, 0
   \              0x000003E8   
   \              0x00000007   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \   000000E0   0x00000008         DC32 8, SPIDMA_Task, 5000, 6, `?<Constant "SPIDMA_Task">`, 1, 0, 0, 11
   \              0x........   
   \              0x00001388   
   \              0x00000006   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x0000000B   
   \   00000104   0x........         DC32 PIN2, 500, 9, `?<Constant "PIN2_Task">`, 1, 0, 0, 0
   \              0x000001F4   
   \              0x00000009   
   \              0x........   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     93          { 
     94             /* Task Index,   Function,         Stack,  Priority, Name,     Attributes,          Param, Time Slice */
     95             {1,  YaDa,       1500,   11,         "MAIN&GUI_Task", MQX_AUTO_START_TASK , 0,    1000 },  // | MQX_TIME_SLICE_TASK
     96             {2,  Shell_Task, 4000L,  12, "Shell_Task",   MQX_AUTO_START_TASK, 0,     1000 },  //  | MQX_TIME_SLICE_TASK
     97             
     98             {3,  FTP_task,   2000,   9L,   "FTP_Task",     MQX_AUTO_START_TASK, 0,     0 },
     99             {4,  tcp_socket_task,   3000,   9L,   "tcp_socket_task",     0, 0,     0 },
    100             {5,  USB_task,   5200L,  8L,   "USB_Task",     MQX_AUTO_START_TASK, 0,     0 },
    101             {6,  mem_flash_app, 4000L,  8L,   "Flash_Task",     MQX_AUTO_START_TASK, 0,     0 },
    102             
    103             {7,  LCDTouchSel_Task ,1000,7 , "UartTouch_Task", MQX_AUTO_START_TASK, 0 , 0},
    104             {8,  SPIDMA_Task , 5000, 6 , "SPIDMA_Task",MQX_AUTO_START_TASK,0 ,0 },
    105             //   {10,  sdcard_task,2000L,  8L, "SDcard",  MQX_AUTO_START_TASK, 0,     0 },
    106             {11, PIN2,       500,   9L,  "PIN2_Task", MQX_AUTO_START_TASK,0 ,0 }, // 按键的处理任务
    107             { 0 }
    108          };
    109          
    110          /*TASK*-----------------------------------------------------
    111          * 
    112          * Task Name    : YaDa
    113          * Comments     :
    114          *    
    115          *
    116          *END*-----------------------------------------------------*/
    117          

   \                                 In section .text, align 2, keep-with-next
    118          void YaDa
    119             (
    120                uint_32 initial_data
    121             )
    122          {
   \                     YaDa:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    123          #ifdef _GUI_DBUG_
    124             printf("\n----------MAIN&GUI_Task----------\n");
   \   00000002   0x....             LDR.N    R0,??DataTable4_4
   \   00000004   0x.... 0x....      BL       _io_printf
    125             printf("\n----------             ----------\n");
   \   00000008   0x....             LDR.N    R0,??DataTable4_5
   \   0000000A   0x.... 0x....      BL       _io_printf
    126             printf("\n----------             ----------\n");
   \   0000000E   0x....             LDR.N    R0,??DataTable4_5
   \   00000010   0x.... 0x....      BL       _io_printf
    127             printf("\n----------      END    ----------\n");
   \   00000014   0x....             LDR.N    R0,??DataTable4_6
   \   00000016   0x.... 0x....      BL       _io_printf
    128          #endif 
    129            U8 status;
    130             
    131            UartLCD_init();  // uart initialization
   \   0000001A   0x.... 0x....      BL       UartLCD_init
    132            UartTouch_init();
   \   0000001E   0x.... 0x....      BL       UartTouch_init
    133            flg_int(); // wk --> 初始化一些标志 !  
   \   00000022   0x.... 0x....      BL       flg_int
    134            spi2_dma_int(); // dsp2k60 spi2 初始化
   \   00000026   0x.... 0x....      BL       spi2_dma_int
    135            
    136            YADA_70(PageStart); //必要的初始化后进入首页
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       YADA_70
    137            delay_ms(1000); // wk -->test  延时1s
   \   00000030   0xF44F 0x707A      MOV      R0,#+1000
   \   00000034   0x.... 0x....      BL       delay_ms
    138          //  YADA_E4();  // wk --> 屏幕校正
    139            YADA_70(MenuTop);  // 进入菜单首页
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       YADA_70
    140            
    141            RefreshFlg = 0; //页面无刷新
   \   0000003E   0x....             LDR.N    R0,??DataTable4_7
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x7001             STRB     R1,[R0, #+0]
    142            
    143            /* test function of USB */  // wk --> for test  2013-02-28
    144          //  char_ptr create[]={"test","kkM2.txt"},write[]={"write","kkM2.txt","6"};  // wk --> test array of USB
    145          //  char_ptr buf[]={"test","kkM1.txt","6","begin","5","123456"};
    146          //  char_ptr buf_1[]={"test","kkM4.txt","begin","5"};
    147          //  uchar data[]={1,2,3,4,5,6};
    148          //  Shell_create(2,create); 
    149          //  Shell_write(3,write);   
    150          ////  Shell_write_buf(6,buf);
    151          //  Shell_write_binary(4,buf_1,6,data);
    152          //  /* read test */
    153          //    uchar data_r[10]={0};
    154          //    char_ptr read_buf[]={"read","kkM4.txt","5","begin","0"};
    155          //    Shell_read_wk(5,read_buf,data_r);
    156          //    printf("\n-------------------------read_test--------------------\n");
    157          //    for(int i=0;i<10;i++)
    158          //    {
    159          //      printf("data_r[%d]=%x\n",i,data_r[i]);
    160          //    }
    161          //    printf("end\n\n");
    162          //    
    163            /* wk @130403 --> 这段代码可以考虑放在U盘启动里面 ，或者考虑一下如何让 U 盘启动早于主任务启动 */
    164            {
    165          #if 0  // wk @130403
    166               SHELL_CONTEXT_PTR    shell_ptr;
    167               shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
    168               _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
    169               /* wk @130401 --> 新建 sysset 用于系统变量保存 */
    170                shell_ptr->ARGC = 2;
    171                shell_ptr->ARGV[0]="cd";
    172                shell_ptr->ARGV[1]="f:\\"; 
    173                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    174                
    175                shell_ptr->ARGC = 2;
    176                shell_ptr->ARGV[0]="df_s";
    177                shell_ptr->ARGV[1]="SYSSET";   //wk --> 注意：查找的文件名暂时必须要是大写
    178                status=Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,NULL);
    179                if(status=0)
    180                {
    181                  shell_ptr->ARGC = 2;
    182                  shell_ptr->ARGV[0]="mkdir";
    183                  shell_ptr->ARGV[1]="SYSSET"; 
    184                  Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
    185                }
    186                /* wk @130401 --> 新建 power/event用于基本电能质量/事件数据保存 */
    187                /* ??????????? 这里后期加上 U 盘插入标志监测 */
    188                shell_ptr->ARGC = 2;
    189                shell_ptr->ARGV[0]="cd";
    190                shell_ptr->ARGV[1]="u:\\"; 
    191                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    192          //      
    193                shell_ptr->ARGC = 2;
    194                shell_ptr->ARGV[0]="df_s";
    195                shell_ptr->ARGV[1]="POWER";   //wk --> 注意：查找的文件名暂时必须要是大写
    196                status=Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,NULL);
    197                if(status==0)
    198                {
    199                  shell_ptr->ARGC = 2;
    200                  shell_ptr->ARGV[0]="mkdir";
    201                  shell_ptr->ARGV[1]="POWER"; 
    202                  Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
    203                }
    204                shell_ptr->ARGC = 2;
    205                shell_ptr->ARGV[0]="df_s";
    206                shell_ptr->ARGV[1]="EVENT";   //wk --> 注意：查找的文件名暂时必须要是大写
    207                status=Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,NULL);
    208                shell_ptr->ARGC = 2;
    209                if(status==0)
    210                {
    211                  shell_ptr->ARGV[0]="mkdir";
    212                  shell_ptr->ARGV[1]="EVENT"; 
    213                  Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
    214                }
    215                
    216                _mem_free(shell_ptr);
    217          #endif  //wk @130403 --> end
    218                 SHELL_CONTEXT_PTR    shell_ptr;
    219               shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000044   0xF44F 0x70F2      MOV      R0,#+484
   \   00000048   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000004C   0x0004             MOVS     R4,R0
    220               _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000004E   0xF245 0x0101      MOVW     R1,#+20481
   \   00000052   0x0020             MOVS     R0,R4
   \   00000054   0x.... 0x....      BL       _lwmem_set_type
    221               /* wk @130401 --> 新建 sysset 用于系统变量保存 */
    222                shell_ptr->ARGC = 2;
   \   00000058   0x2002             MOVS     R0,#+2
   \   0000005A   0x6220             STR      R0,[R4, #+32]
    223                shell_ptr->ARGV[0]="cd";
   \   0000005C   0x....             ADR.N    R0,??DataTable3  ;; 0x63, 0x64, 0x00, 0x00
   \   0000005E   0x6020             STR      R0,[R4, #+0]
    224                shell_ptr->ARGV[1]="f:\\"; 
   \   00000060   0x....             ADR.N    R0,??DataTable3_1  ;; "f:\\"
   \   00000062   0x6060             STR      R0,[R4, #+4]
    225                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                       ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   00000064   0x0021             MOVS     R1,R4
   \   00000066   0x6A20             LDR      R0,[R4, #+32]
   \   00000068   0x.... 0x....      BL       Shell_cd
    226               
    227                shell_ptr->ARGC = 2;
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x6220             STR      R0,[R4, #+32]
    228                shell_ptr->ARGV[0]="mkdir";
   \   00000070   0x....             LDR.N    R0,??DataTable4_8
   \   00000072   0x6020             STR      R0,[R4, #+0]
    229                shell_ptr->ARGV[1]="SYSSET"; 
   \   00000074   0x....             LDR.N    R0,??DataTable4_9
   \   00000076   0x6060             STR      R0,[R4, #+4]
    230                Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
                       ^
Warning[Pe223]: function "Shell_mkdir" declared implicitly
   \   00000078   0x0021             MOVS     R1,R4
   \   0000007A   0x6A20             LDR      R0,[R4, #+32]
   \   0000007C   0x.... 0x....      BL       Shell_mkdir
    231                
    232                /* wk @130401 --> 新建 power/event用于基本电能质量/事件数据保存 */
    233                /* ??????????? 这里后期加上 U 盘插入标志监测 */
    234                shell_ptr->ARGC = 2;
   \   00000080   0x2002             MOVS     R0,#+2
   \   00000082   0x6220             STR      R0,[R4, #+32]
    235                shell_ptr->ARGV[0]="cd";
   \   00000084   0x....             ADR.N    R0,??DataTable3  ;; 0x63, 0x64, 0x00, 0x00
   \   00000086   0x6020             STR      R0,[R4, #+0]
    236                shell_ptr->ARGV[1]="u:\\"; 
   \   00000088   0x....             ADR.N    R0,??DataTable3_2  ;; "u:\\"
   \   0000008A   0x6060             STR      R0,[R4, #+4]
    237                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000008C   0x0021             MOVS     R1,R4
   \   0000008E   0x6A20             LDR      R0,[R4, #+32]
   \   00000090   0x.... 0x....      BL       Shell_cd
    238                
    239                shell_ptr->ARGC = 2;
   \   00000094   0x2002             MOVS     R0,#+2
   \   00000096   0x6220             STR      R0,[R4, #+32]
    240                shell_ptr->ARGV[0]="mkdir";
   \   00000098   0x....             LDR.N    R0,??DataTable4_8
   \   0000009A   0x6020             STR      R0,[R4, #+0]
    241                shell_ptr->ARGV[1]="POWER"; 
   \   0000009C   0x....             LDR.N    R0,??DataTable4_10
   \   0000009E   0x6060             STR      R0,[R4, #+4]
    242                Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000000A0   0x0021             MOVS     R1,R4
   \   000000A2   0x6A20             LDR      R0,[R4, #+32]
   \   000000A4   0x.... 0x....      BL       Shell_mkdir
    243                
    244                shell_ptr->ARGC = 2;
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0x6220             STR      R0,[R4, #+32]
    245                shell_ptr->ARGV[0]="mkdir";
   \   000000AC   0x....             LDR.N    R0,??DataTable4_8
   \   000000AE   0x6020             STR      R0,[R4, #+0]
    246                shell_ptr->ARGV[1]="EVENT"; 
   \   000000B0   0x....             LDR.N    R0,??DataTable4_11
   \   000000B2   0x6060             STR      R0,[R4, #+4]
    247                Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000000B4   0x0021             MOVS     R1,R4
   \   000000B6   0x6A20             LDR      R0,[R4, #+32]
   \   000000B8   0x.... 0x....      BL       Shell_mkdir
    248                
    249                
    250                _mem_free(shell_ptr);
   \   000000BC   0x0020             MOVS     R0,R4
   \   000000BE   0x.... 0x....      BL       _lwmem_free
    251              }
    252              
    253            /* Test end */
    254            /* button1 into interrupt for shell or maingui task change */
    255             GPIO_PIN_STRUCT pins_int[] = {
    256                      BSP_BUTTON1 | GPIO_PIN_IRQ_RISING ,
    257                      GPIO_LIST_END
    258                  };
   \   000000C2   0xA802             ADD      R0,SP,#+8
   \   000000C4   0x....             LDR.N    R1,??DataTable4_12
   \   000000C6   0xC90C             LDM      R1!,{R2,R3}
   \   000000C8   0xC00C             STM      R0!,{R2,R3}
   \   000000CA   0x3908             SUBS     R1,R1,#+8
   \   000000CC   0x3808             SUBS     R0,R0,#+8
    259              MQX_FILE_PTR port_file4;        
    260                   /* 这是按键1 上升沿中断*/
    261                   port_file4 = fopen("gpio:read", (char_ptr) &pins_int );
   \   000000CE   0xA902             ADD      R1,SP,#+8
   \   000000D0   0x....             LDR.N    R0,??DataTable4_13
   \   000000D2   0x.... 0x....      BL       _io_fopen
    262                   ioctl(port_file4, GPIO_IOCTL_SET_IRQ_FUNCTION, (pointer)int_callback);        
   \   000000D6   0x....             LDR.N    R2,??DataTable4_14
   \   000000D8   0xF240 0x3106      MOVW     R1,#+774
   \   000000DC   0x.... 0x....      BL       _io_ioctl
    263            /* end */
    264            /* wk @130330 -->timer of lpt */
    265             _lpt_install (0,3 * 1000000 , LPT_FLAG_CLOCK_SOURCE_LPO, 11, timer_isr, TRUE);//2 * 1000000  --> 2秒     
                    ^
Warning[Pe223]: function "_lpt_install" declared implicitly

    U8 status;
       ^
"L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\yada_prj.c",129  Warning[Pe177]: 
          variable "status" was declared but never referenced
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x9001             STR      R0,[SP, #+4]
   \   000000E4   0x....             LDR.N    R0,??DataTable4_15
   \   000000E6   0x9000             STR      R0,[SP, #+0]
   \   000000E8   0x230B             MOVS     R3,#+11
   \   000000EA   0x2202             MOVS     R2,#+2
   \   000000EC   0x....             LDR.N    R1,??DataTable4_3  ;; 0x2dc6c0
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x.... 0x....      BL       _lpt_install
    266            /* wk @130330 -->timer end */
    267             
    268            while(1)
    269            {
    270              MainLoop(); //循环主程序
   \                     ??YaDa_0:
   \   000000F4   0x.... 0x....      BL       MainLoop
   \   000000F8   0xE7FC             B.N      ??YaDa_0
    271            }
    272          }
    273          
    274          /*******************************************************************************
    275          * 函  数  名      : MainLoop
    276          * 描      述      : main函数中的菜单主函数
    277          * 输      入      : 无
    278          * 返      回      : 无
    279          *******************************************************************************/
    280          

   \                                 In section .text, align 2, keep-with-next
    281          void MainLoop()
    282          {
   \                     MainLoop:
   \   00000000   0xB580             PUSH     {R7,LR}
    283            if (SPIPowerFlg) //接收到电能数据
   \   00000002   0x....             LDR.N    R0,??DataTable4_16
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD00D             BEQ.N    ??MainLoop_0
    284            {
    285              if (VIEWHoldFlg == 0)
   \   0000000A   0x....             LDR.N    R0,??DataTable4_17
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD105             BNE.N    ??MainLoop_1
    286              {
    287                RefreshFlg = 2;
   \   00000012   0x....             LDR.N    R0,??DataTable4_7
   \   00000014   0x2102             MOVS     R1,#+2
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    288                ViewKeyFlg = 0; //VIEWHoldFlg为0时，可能有其余键按下，需要清零
   \   00000018   0x....             LDR.N    R0,??DataTable4_18
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
    289              }
    290              
    291              SPIPowerFlg = 0; // 清除标志
   \                     ??MainLoop_1:
   \   0000001E   0x....             LDR.N    R0,??DataTable4_16
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
   \   00000024   0xE009             B.N      ??MainLoop_2
    292            }
    293            else if(ViewKeyFlg) //  ? ViewKeyFlg ?
   \                     ??MainLoop_0:
   \   00000026   0x....             LDR.N    R0,??DataTable4_18
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD005             BEQ.N    ??MainLoop_2
    294            {
    295              RefreshFlg = 2;
   \   0000002E   0x....             LDR.N    R0,??DataTable4_7
   \   00000030   0x2102             MOVS     R1,#+2
   \   00000032   0x7001             STRB     R1,[R0, #+0]
    296              ViewKeyFlg = 0;
   \   00000034   0x....             LDR.N    R0,??DataTable4_18
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7001             STRB     R1,[R0, #+0]
    297            }
    298            /* wk @130401 --> 基本电能质量数据保存 */
    299            if(SavePowerFlg)
   \                     ??MainLoop_2:
   \   0000003A   0x....             LDR.N    R0,??DataTable4_2
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD004             BEQ.N    ??MainLoop_3
    300            {
    301              PowerSave(); 
   \   00000042   0x.... 0x....      BL       PowerSave
    302              SavePowerFlg=0;
   \   00000046   0x....             LDR.N    R0,??DataTable4_2
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    303            }
    304            /* wk @130401 --> end */
    305          #if 0 // WK --> 数据存储  待完善
    306            if (SPIEventFlg || EventKeyFlg) //接收到事件数据或者事件记录相关页有键按下时需要刷新
    307            {
    308              RefreshFlg = 3;
    309              if (SPIEventFlg)
    310              {
    311          //      EVEnum++;
    312                EventSave(U_FLAG);
    313              }
    314              SPIEventFlg = 0;
    315              EventKeyFlg = 0;
    316            }
    317          #endif
    318            
    319            if(SysSetKeyFlg) //系统设置页有键按下时需要刷新
   \                     ??MainLoop_3:
   \   0000004C   0x....             LDR.N    R0,??DataTable4_19
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD005             BEQ.N    ??MainLoop_4
    320            {
    321               SysSetKeyFlg = 0;
   \   00000054   0x....             LDR.N    R0,??DataTable4_19
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x7001             STRB     R1,[R0, #+0]
    322               RefreshFlg = 1; 
   \   0000005A   0x....             LDR.N    R0,??DataTable4_7
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    323            }
    324            
    325            if (MenuSwFlg == 1) //不能放在switch中，功能键按下时会整体刷新一次;页面切换必须放判断刷新之后，否则出现频繁操作后，页面没有数据的现象
   \                     ??MainLoop_4:
   \   00000060   0x....             LDR.N    R0,??DataTable4_20
   \   00000062   0x7800             LDRB     R0,[R0, #+0]
   \   00000064   0x2801             CMP      R0,#+1
   \   00000066   0xD10C             BNE.N    ??MainLoop_5
    326            {
    327              MenuSwFlg = 0 ;
   \   00000068   0x....             LDR.N    R0,??DataTable4_20
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x7001             STRB     R1,[R0, #+0]
    328              YADA_70(Dis_PicID);
   \   0000006E   0x....             LDR.N    R0,??DataTable4_21
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000074   0x.... 0x....      BL       YADA_70
    329              
    330              YADA_70(Dis_PicID); //有时会出现切屏不及时，冗余思想
   \   00000078   0x....             LDR.N    R0,??DataTable4_21
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007E   0x.... 0x....      BL       YADA_70
    331            }
    332            
    333            /* ……*/
    334            switch(RefreshFlg)
   \                     ??MainLoop_5:
   \   00000082   0x....             LDR.N    R0,??DataTable4_7
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2801             CMP      R0,#+1
   \   00000088   0xD004             BEQ.N    ??MainLoop_6
   \   0000008A   0xD358             BCC.N    ??MainLoop_7
   \   0000008C   0x2803             CMP      R0,#+3
   \   0000008E   0xD047             BEQ.N    ??MainLoop_8
   \   00000090   0xD311             BCC.N    ??MainLoop_9
   \   00000092   0xE054             B.N      ??MainLoop_7
    335            {
    336            case 1:
    337              RefreshFlg = 0;
   \                     ??MainLoop_6:
   \   00000094   0x....             LDR.N    R0,??DataTable4_7
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x7001             STRB     R1,[R0, #+0]
    338              switch (Dis_PicID)
   \   0000009A   0x....             LDR.N    R0,??DataTable4_21
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x280A             CMP      R0,#+10
   \   000000A0   0xD002             BEQ.N    ??MainLoop_10
   \   000000A2   0x280B             CMP      R0,#+11
   \   000000A4   0xD003             BEQ.N    ??MainLoop_11
   \   000000A6   0xE005             B.N      ??MainLoop_12
    339              {
    340                case MenuParaSET:
    341                  GUI_SYS_PARASET();
   \                     ??MainLoop_10:
   \   000000A8   0x.... 0x....      BL       GUI_SYS_PARASET
    342                  break;
   \   000000AC   0xE002             B.N      ??MainLoop_13
    343                case MenuEventSET:
    344                GUI_SYS_EVENTSET();  // 涉及 U盘数据  --> wk 
   \                     ??MainLoop_11:
   \   000000AE   0x.... 0x....      BL       GUI_SYS_EVENTSET
    345                  break;
   \   000000B2   0xE7FF             B.N      ??MainLoop_13
    346                default:
    347                  break;
    348              }
    349              break;
   \                     ??MainLoop_12:
   \                     ??MainLoop_13:
   \   000000B4   0xE043             B.N      ??MainLoop_14
    350              
    351            case 2:
    352              RefreshFlg = 0;
   \                     ??MainLoop_9:
   \   000000B6   0x....             LDR.N    R0,??DataTable4_7
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x7001             STRB     R1,[R0, #+0]
    353              switch (Dis_PicID)
   \   000000BC   0x....             LDR.N    R0,??DataTable4_21
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x2814             CMP      R0,#+20
   \   000000C2   0xD00F             BEQ.N    ??MainLoop_15
   \   000000C4   0xD32B             BCC.N    ??MainLoop_16
   \   000000C6   0x2816             CMP      R0,#+22
   \   000000C8   0xD012             BEQ.N    ??MainLoop_17
   \   000000CA   0xD30E             BCC.N    ??MainLoop_18
   \   000000CC   0x2818             CMP      R0,#+24
   \   000000CE   0xD015             BEQ.N    ??MainLoop_19
   \   000000D0   0xD311             BCC.N    ??MainLoop_20
   \   000000D2   0x281A             CMP      R0,#+26
   \   000000D4   0xD01E             BEQ.N    ??MainLoop_21
   \   000000D6   0xD314             BCC.N    ??MainLoop_22
   \   000000D8   0x281C             CMP      R0,#+28
   \   000000DA   0xD018             BEQ.N    ??MainLoop_23
   \   000000DC   0xD314             BCC.N    ??MainLoop_24
   \   000000DE   0x281D             CMP      R0,#+29
   \   000000E0   0xD015             BEQ.N    ??MainLoop_23
   \   000000E2   0xE01C             B.N      ??MainLoop_16
    354              {
    355                case MenuViewWavVolCur:
    356                 
    357                GUI_VIEW_UI();
   \                     ??MainLoop_15:
   \   000000E4   0x.... 0x....      BL       GUI_VIEW_UI
    358                break;
   \   000000E8   0xE019             B.N      ??MainLoop_25
    359              case MenuViewWavVol:
    360                GUI_VIEW_U();
   \                     ??MainLoop_18:
   \   000000EA   0x.... 0x....      BL       GUI_VIEW_U
    361                break;
   \   000000EE   0xE016             B.N      ??MainLoop_25
    362              case MenuViewWavCur:
    363                GUI_VIEW_I();
   \                     ??MainLoop_17:
   \   000000F0   0x.... 0x....      BL       GUI_VIEW_I
    364                break;
   \   000000F4   0xE013             B.N      ??MainLoop_25
    365              case MenuViewVector:
    366                GUI_VIEW_VECT();
   \                     ??MainLoop_20:
   \   000000F6   0x.... 0x....      BL       GUI_VIEW_VECT
    367                break;
   \   000000FA   0xE010             B.N      ??MainLoop_25
    368              case MenuViewListMeasure:
    369                GUI_VIEW_ListMeasure();
   \                     ??MainLoop_19:
   \   000000FC   0x.... 0x....      BL       GUI_VIEW_ListMeasure
    370                break;
   \   00000100   0xE00D             B.N      ??MainLoop_25
    371              case MenuViewListQuality1:
    372                GUI_VIEW_ListQuality();
   \                     ??MainLoop_22:
   \   00000102   0x.... 0x....      BL       GUI_VIEW_ListQuality
    373                break;
   \   00000106   0xE00A             B.N      ??MainLoop_25
    374              case MenuViewHarmoGraph1:
    375                GUI_VIEW_HarmoGraph();
   \                     ??MainLoop_24:
   \   00000108   0x.... 0x....      BL       GUI_VIEW_HarmoGraph
    376                break;
   \   0000010C   0xE007             B.N      ??MainLoop_25
    377              case MenuViewHarmoList1:
    378              case MenuViewHarmoList2:
    379                GUI_VIEW_HarmoList();
   \                     ??MainLoop_23:
   \   0000010E   0x.... 0x....      BL       GUI_VIEW_HarmoList
    380                break;
   \   00000112   0xE004             B.N      ??MainLoop_25
    381              case MenuViewListQuality2: // wk --> 
    382                GUI_VIEW_ListQuality2(U_FLAG);
   \                     ??MainLoop_21:
   \   00000114   0x....             LDR.N    R0,??DataTable4_22
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x.... 0x....      BL       GUI_VIEW_ListQuality2
    383                break;
   \   0000011C   0xE7FF             B.N      ??MainLoop_25
    384                
    385              default:
    386                break; 
    387              }
    388              break;
   \                     ??MainLoop_16:
   \                     ??MainLoop_25:
   \   0000011E   0xE00E             B.N      ??MainLoop_14
    389              
    390            case 3:
    391              RefreshFlg = 0;
   \                     ??MainLoop_8:
   \   00000120   0x....             LDR.N    R0,??DataTable4_7
   \   00000122   0x2100             MOVS     R1,#+0
   \   00000124   0x7001             STRB     R1,[R0, #+0]
    392              switch (Dis_PicID)
   \   00000126   0x....             LDR.N    R0,??DataTable4_21
   \   00000128   0x7800             LDRB     R0,[R0, #+0]
   \   0000012A   0x2828             CMP      R0,#+40
   \   0000012C   0xD005             BEQ.N    ??MainLoop_26
   \   0000012E   0xD305             BCC.N    ??MainLoop_27
   \   00000130   0x282A             CMP      R0,#+42
   \   00000132   0xD001             BEQ.N    ??MainLoop_28
   \   00000134   0xD202             BCS.N    ??MainLoop_27
    393              {
    394              case MenuEventList:
    395          //      GUI_EVENTList();   // 涉及 U 盘数据  --> wk 
    396                break;
   \                     ??MainLoop_29:
   \   00000136   0xE001             B.N      ??MainLoop_30
    397              case MenuEventWave:
    398          //      GUI_EventWave(U_FLAG);   // 涉及 U 盘数据  --> wk
    399                break;
   \                     ??MainLoop_28:
   \   00000138   0xE000             B.N      ??MainLoop_30
    400              case MenuEventMON:
    401          //      GUI_EventMonitor(U_FLAG);  // 涉及 U 盘数据  --> wk
    402                break;
   \                     ??MainLoop_26:
   \   0000013A   0xE7FF             B.N      ??MainLoop_30
    403                
    404              default:
    405                break;  
    406              }
    407              break;
   \                     ??MainLoop_27:
   \                     ??MainLoop_30:
   \   0000013C   0xE7FF             B.N      ??MainLoop_14
    408              
    409            default:
    410              break;
    411            }
    412          }
   \                     ??MainLoop_7:
   \                     ??MainLoop_14:
   \   0000013E   0xBD01             POP      {R0,PC}          ;; return
    413           

   \                                 In section .text, align 2, keep-with-next
    414          void flg_int()   // wk --> 一些标志的初始化 
    415          {
    416              Dis_PicID=0;
   \                     flg_int:
   \   00000000   0x....             LDR.N    R0,??DataTable4_21
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7001             STRB     R1,[R0, #+0]
    417          //    HarmoGraphShift=0;//
    418              HarmoGraphPhase=1;// 默认值1
   \   00000006   0x....             LDR.N    R0,??DataTable4_23
   \   00000008   0x2101             MOVS     R1,#+1
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
    419              HarmoGraphRange=1;// 用于选择显示谐波范围，默认值为1,对应1~26次，2对应25~50
   \   0000000C   0x....             LDR.N    R0,??DataTable4_24
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    420              HarmoGraphUorder=1;// 用于控制谐波电压具体次数的数值显示
   \   00000012   0x....             LDR.N    R0,??DataTable4_25
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    421              HarmoGraphIorder=1;// 用于控制谐波电流具体次数的数值显示
   \   00000018   0x....             LDR.N    R0,??DataTable4_26
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
    422              HarmoListShift=0;// 谐波列表显示中的功能右移键
   \   0000001E   0x....             LDR.N    R0,??DataTable4_27
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
    423              HarmoListPhase=1;
   \   00000024   0x....             LDR.N    R0,??DataTable4_28
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x7001             STRB     R1,[R0, #+0]
    424              HarmoListUorI=1;
   \   0000002A   0x....             LDR.N    R0,??DataTable4_29
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    425              HarmoListRange=1;
   \   00000030   0x....             LDR.N    R0,??DataTable4_30
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x7001             STRB     R1,[R0, #+0]
    426              HarmoListAmporRatio=1;
   \   00000036   0x....             LDR.N    R0,??DataTable4_31
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0x7001             STRB     R1,[R0, #+0]
    427              VIEWHoldFlg=0; //保 持键默认为0，键按下时值变为1，再次按下时值变为0；
   \   0000003C   0x....             LDR.N    R0,??DataTable4_17
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x7001             STRB     R1,[R0, #+0]
    428              ViewKeyFlg=0;
   \   00000042   0x....             LDR.N    R0,??DataTable4_18
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x7001             STRB     R1,[R0, #+0]
    429              SysSetKeyFlg=0;
   \   00000048   0x....             LDR.N    R0,??DataTable4_19
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x7001             STRB     R1,[R0, #+0]
    430              EventKeyFlg=0;
   \   0000004E   0x....             LDR.N    R0,??DataTable4_32
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x7001             STRB     R1,[R0, #+0]
    431              MenuSwFlg=0;
   \   00000054   0x....             LDR.N    R0,??DataTable4_20
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x7001             STRB     R1,[R0, #+0]
    432              EVEpage=0;
   \   0000005A   0x....             LDR.N    R0,??DataTable4_33
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    433              EVEline=0;
   \   00000060   0x....             LDR.N    R0,??DataTable4_34
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x7001             STRB     R1,[R0, #+0]
    434              EVEfunflg=0;
   \   00000066   0x....             LDR.N    R0,??DataTable4_35
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x7001             STRB     R1,[R0, #+0]
    435              
    436          //    File_flg=0;// wk -->
    437              SavePowerFlg =0;
   \   0000006C   0x....             LDR.N    R0,??DataTable4_2
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    438          }
   \   00000072   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x75 0x3A          DC8      "u:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     `?<Constant "pin2_event">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     `?<Constant "Switch2 is pressed(in...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     SavePowerFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x002DC6C0         DC32     0x2dc6c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     `?<Constant "\\n----------MAIN&GUI_T...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     `?<Constant "\\n----------          ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     `?<Constant "\\n----------      END ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     RefreshFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     `?<Constant "mkdir">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     `?<Constant "SYSSET">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant "POWER">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     `?<Constant "EVENT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     `?<Constant {2181038099L, 0L}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     `?<Constant "gpio:read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     int_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     timer_isr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     SPIPowerFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     VIEWHoldFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     ViewKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     SysSetKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     MenuSwFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     Dis_PicID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     U_FLAG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     HarmoGraphPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     HarmoGraphRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     HarmoGraphUorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     HarmoGraphIorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x........         DC32     HarmoListShift

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x........         DC32     HarmoListPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x........         DC32     HarmoListUorI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x........         DC32     HarmoListRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x........         DC32     HarmoListAmporRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x........         DC32     EventKeyFlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_33:
   \   00000000   0x........         DC32     EVEpage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_34:
   \   00000000   0x........         DC32     EVEline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_35:
   \   00000000   0x........         DC32     EVEfunflg

   \                                 In section .rodata, align 4
   \                     `?<Constant "MAIN&GUI_Task">`:
   \   00000000   0x4D 0x41          DC8 "MAIN&GUI_Task"
   \              0x49 0x4E    
   \              0x26 0x47    
   \              0x55 0x49    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Shell_Task">`:
   \   00000000   0x53 0x68          DC8 "Shell_Task"
   \              0x65 0x6C    
   \              0x6C 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "FTP_Task">`:
   \   00000000   0x46 0x54          DC8 "FTP_Task"
   \              0x50 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "tcp_socket_task">`:
   \   00000000   0x74 0x63          DC8 "tcp_socket_task"
   \              0x70 0x5F    
   \              0x73 0x6F    
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x5F 0x74    
   \              0x61 0x73    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "USB_Task">`:
   \   00000000   0x55 0x53          DC8 "USB_Task"
   \              0x42 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash_Task">`:
   \   00000000   0x46 0x6C          DC8 "Flash_Task"
   \              0x61 0x73    
   \              0x68 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "UartTouch_Task">`:
   \   00000000   0x55 0x61          DC8 "UartTouch_Task"
   \              0x72 0x74    
   \              0x54 0x6F    
   \              0x75 0x63    
   \              0x68 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SPIDMA_Task">`:
   \   00000000   0x53 0x50          DC8 "SPIDMA_Task"
   \              0x49 0x44    
   \              0x4D 0x41    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "PIN2_Task">`:
   \   00000000   0x50 0x49          DC8 "PIN2_Task"
   \              0x4E 0x32    
   \              0x5F 0x54    
   \              0x61 0x73    
   \              0x6B 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "pin2_event">`:
   \   00000000   0x70 0x69          DC8 "pin2_event"
   \              0x6E 0x32    
   \              0x5F 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Switch2 is pressed(in...">`:
   \   00000000   0x53 0x77          DC8 "Switch2 is pressed(int mode)!\012"
   \              0x69 0x74    
   \              0x63 0x68    
   \              0x32 0x20    
   \              0x69 0x73    
   \              0x20 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x65 0x64    
   \              0x28 0x69    
   \              0x6E 0x74    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x29    
   \              0x21 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------MAIN&GUI_T...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------MAIN&GUI_Task----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x4D    
   \              0x41 0x49    
   \              0x4E 0x26    
   \              0x47 0x55    
   \              0x49 0x5F    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------          ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------             ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n----------      END ...">`:
   \   00000000   0x0A 0x2D          DC8 "\012----------      END    ----------\012"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x45    
   \              0x4E 0x44    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x64          DC8 "cd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x66 0x3A          DC8 "f:\\"
   \              0x5C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mkdir">`:
   \   00000000   0x6D 0x6B          DC8 "mkdir"
   \              0x64 0x69    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SYSSET">`:
   \   00000000   0x53 0x59          DC8 "SYSSET"
   \              0x53 0x53    
   \              0x45 0x54    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x75 0x3A          DC8 "u:\\"
   \              0x5C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "POWER">`:
   \   00000000   0x50 0x4F          DC8 "POWER"
   \              0x57 0x45    
   \              0x52 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "EVENT">`:
   \   00000000   0x45 0x56          DC8 "EVENT"
   \              0x45 0x4E    
   \              0x54 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {2181038099L, 0L}>`:
   \   00000000   0x82000013         DC32 2181038099, 0
   \              0x00000000   

   \                                 In section .rodata, align 4
   \                     `?<Constant "gpio:read">`:
   \   00000000   0x67 0x70          DC8 "gpio:read"
   \              0x69 0x6F    
   \              0x3A 0x72    
   \              0x65 0x61    
   \              0x64 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  MainLoop
              8 -> GUI_SYS_EVENTSET
              8 -> GUI_SYS_PARASET
              8 -> GUI_VIEW_HarmoGraph
              8 -> GUI_VIEW_HarmoList
              8 -> GUI_VIEW_I
              8 -> GUI_VIEW_ListMeasure
              8 -> GUI_VIEW_ListQuality
              8 -> GUI_VIEW_ListQuality2
              8 -> GUI_VIEW_U
              8 -> GUI_VIEW_UI
              8 -> GUI_VIEW_VECT
              8 -> PowerSave
              8 -> YADA_70
       24  YaDa
             24 -> MainLoop
             24 -> Shell_cd
             24 -> Shell_mkdir
             24 -> UartLCD_init
             24 -> UartTouch_init
             24 -> YADA_70
             24 -> _io_fopen
             24 -> _io_ioctl
             24 -> _io_printf
             24 -> _lpt_install
             24 -> _lwmem_alloc_zero
             24 -> _lwmem_free
             24 -> _lwmem_set_type
             24 -> delay_ms
             24 -> flg_int
             24 -> spi2_dma_int
        0  flg_int
        8  int_callback
              8 -> _event_open
              8 -> _event_set
              8 -> _io_printf
        8  timer_isr
              8 -> _lpt_clear_int
              8 -> _lpt_init
              8 -> _lpt_run


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "EVENT">
      12  ?<Constant "FTP_Task">
      12  ?<Constant "Flash_Task">
      16  ?<Constant "MAIN&GUI_Task">
      12  ?<Constant "PIN2_Task">
       8  ?<Constant "POWER">
      12  ?<Constant "SPIDMA_Task">
       8  ?<Constant "SYSSET">
      12  ?<Constant "Shell_Task">
      32  ?<Constant "Switch2 is pressed(in...">
      12  ?<Constant "USB_Task">
      16  ?<Constant "UartTouch_Task">
      36  ?<Constant "\n----------          ...">
      36  ?<Constant "\n----------      END ...">
      36  ?<Constant "\n----------MAIN&GUI_T...">
       4  ?<Constant "cd">
       4  ?<Constant "f:\\">
      12  ?<Constant "gpio:read">
       8  ?<Constant "mkdir">
      12  ?<Constant "pin2_event">
      16  ?<Constant "tcp_socket_task">
       4  ?<Constant "u:\\">
       8  ?<Constant {2181038099L, 0L}>
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_33
       4  ??DataTable4_34
       4  ??DataTable4_35
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
     320  MQX_template_list
     320  MainLoop
       1  RefreshFlg
       1  SavePowerFlg
       1  U_FLAG
     250  YaDa
     116  flg_int
      26  int_callback
       8  read_buffer
      38  timer_isr

 
   3 bytes in section .bss
   8 bytes in section .data
 656 bytes in section .rodata
 906 bytes in section .text
 
 906 bytes of CODE  memory
 656 bytes of CONST memory
  11 bytes of DATA  memory

Errors: none
Warnings: 7
