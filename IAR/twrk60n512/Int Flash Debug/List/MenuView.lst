###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     07/Apr/2013  20:39:19 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\Me #
#                    nuView.c                                                 #
#    Command line =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\Me #
#                    nuView.c -D _DEBUG=1 -lC "E:\Freescale\mqx_test\YD_PRJ_N #
#                    EW_20130323_git_\IAR\twrk60n512\Int Flash Debug\List\"   #
#                    -lA "E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\ #
#                    twrk60n512\Int Flash Debug\List\" --diag_suppress        #
#                    Pa039,Pa082,Pe186 -o "E:\Freescale\mqx_test\YD_PRJ_NEW_2 #
#                    0130323_git_\IAR\twrk60n512\Int Flash Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_20 #
#                    130323_git_\IAR\..\lib\twrk60n512.iar\bsp\ -I            #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\psp\ -I E:\Freescale\mqx_test\YD_PRJ_NE #
#                    W_20130323_git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_ #
#                    Code\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\ #
#                    IAR\..\lib\twrk60n512.iar\rtcs\ -I                       #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\mfs\ -I E:\Freescale\mqx_test\YD_PRJ_NE #
#                    W_20130323_git_\IAR\..\lib\twrk60n512.iar\usb\host\ -I   #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\shell\ -I E:\Freescale\mqx_test\YD_PRJ_ #
#                    NEW_20130323_git_\IAR\..\lib\twrk60n512.iar\usb\ -I      #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\   #
#                    -I E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\.. #
#                    \Source\Source_MQX\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_ #
#                    20130323_git_\IAR\..\Source\ -I "E:\Freescale\Freescale  #
#                    MQX 3.8\shell\source\include\" -Ol --use_c++_inline      #
#    List file    =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\twrk6 #
#                    0n512\Int Flash Debug\List\MenuView.lst                  #
#    Object file  =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\twrk6 #
#                    0n512\Int Flash Debug\Obj\MenuView.o                     #
#                                                                             #
#                                                                             #
###############################################################################

E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\MenuView.c
      1          /*******************************************************************************
      2          * File Name        : MenuView.c
      3          * Author             : LB&TX
      4          * Version            : V1.0.0
      5          * Date                :
      6          * Description        :LCD显示界面的数据显示页面
      7          *******************************************************************************/
      8          /***************************************************
      9          **
     10          ** Reverse by wk
     11          ** Date: 
     12          ** Description:  430  --> k60 
     13          ** 
     14          **************************************************/
     15          #define   MenuV_GLOBALS
     16          
     17          #include "MenuView.h"
     18          #include "math.h"
     19          #include "DataConvert.h"

   \                                 In section .bss, align 4
   \   __absolute char *NFPAddr
   \                     NFPAddr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute int *NFBAddr
   \                     NFBAddr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute char *SysSetAddr
   \                     SysSetAddr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute unsigned char SysFlashDataT[84]
   \                     SysFlashDataT:
   \   00000000                      DS8 84

   \                                 In section .bss, align 4
   \   __absolute unsigned char SysFlashData[84]
   \                     SysFlashData:
   \   00000000                      DS8 84

   \                                 In section .bss, align 4
   \   __absolute unsigned char EventNum[18]
   \                     EventNum:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \   __absolute unsigned char EventAddr[400]
   \                     EventAddr:
   \   00000000                      DS8 400

   \                                 In section .bss, align 2
   \   __absolute unsigned short DotWave
   \                     DotWave:
   \   00000000                      DS8 2
     20          #include "LCDDriver.h"
     21          #include "LCDUart.h"
     22          /* test shell function */
     23          //#include <ctype.h>
     24          //#include <string.h>
     25          //#include <mqx.h>
     26          //#include <fio.h>
     27          #include "shell.h"
     28          #include "sh_prv.h"
     29          #include <timer.h>
     30          #include <math.h>
     31          
     32          /* end */
     33          
     34          /* REVERSE BY WK TO TEST SysEventSet*/
     35          //extern U8 PowRxchar[],EvntRxchar[],TEST[20];
     36          extern U8 PowRxchar[],EvntRxchar[];

   \                                 In section .bss, align 1
     37          U8 USB_Flg=0;
   \                     USB_Flg:
   \   00000000                      DS8 1
     38          //       U8 TEST[20];
     39          /* END */
     40          
     41          //extern volatile U8 EVEnum,send_ok;  // wk @130403 --> uncomment
     42          //U8 text[][3]= {"Ua","Ub","Uc","Ia","Ib","Ic"}; //0使ASCII字符间的间距缩小

   \                                 In section .rodata, align 4
     43          const U16 COLOR[] = {0xffe0,0x07E0,0xf800,0x0000};
   \                     COLOR:
   \   00000000   0xFFE0 0x07E0      DC16 65504, 2016, 63488, 0
   \              0xF800 0x0000

   \                                 In section .data, align 4
     44          U8 HarmoInfo[][8]= {"A","B","C","幅 值","含有率"
   \                     HarmoInfo:
   \   00000000   0x41 0x00          DC8 "A"
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000008   0x42 0x00          DC8 "B"
   \   0000000A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x43 0x00          DC8 "C"
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000018   0xB7 0xF9          DC8 "\267\371 \326\265"
   \              0x20 0xD6    
   \              0xB5 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0
   \   00000020   0xBA 0xAC          DC8 "\272\254\323\320\302\312"
   \              0xD3 0xD0    
   \              0xC2 0xCA    
   \              0x00         
   \   00000027   0x00               DC8 0
     45          //                    "1 - 26","25 - 50","1","2","3","4","5","6","7","8",
     46          //                    "9","10","11","12","13","14","15","16","17","18","19","20","21",
     47          //                    "22","23","24","25","26","27","28","29","30","31","32","33","34",
     48          //                    "35","36","37","38","39","40","41","42","43","44","45","46","47",
     49          //                    "48","49","50","幅值","含有率"
     50                             };

   \                                 In section .bss, align 1
     51          U8 SysParaOldIndex=0,SysEventOldIndex=0,EventOldIndex=0,EVEnum_old;
   \                     SysParaOldIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     SysEventOldIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     EventOldIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     EVEnum_old:
   \   00000000                      DS8 1
     52          //volatile U8 npage=0; // wk @130403 --> uncomment
     53          //volatile U16 nBlock=0,nBlock_old=1024; // wk @130403 --> uncomment
     54          /* function 申明 */
     55          char_ptr num2string(int_32 num,uchar len,uchar type);
     56          /*******************************************************************************
     57          * 函  数  名      : GUI_VIEW_UI
     58          * 描      述      : 电流电压波形及有效值显示，颜色为黄绿红，采用C104指令可自动擦除。
     59          * 输      入      : 无
     60          * 返      回      : 无
     61          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     62          void GUI_VIEW_UI(void)
     63          {
   \                     GUI_VIEW_UI:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF5AD 0x6D9A      SUB      SP,SP,#+1232
     64              U16 Coord_UI[]= {14,68,614,225,273,429};   //剪切及原点坐标
   \   00000006   0xA804             ADD      R0,SP,#+16
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000000C   0xC91C             LDM      R1!,{R2-R4}
   \   0000000E   0xC01C             STM      R0!,{R2-R4}
   \   00000010   0x390C             SUBS     R1,R1,#+12
   \   00000012   0x380C             SUBS     R0,R0,#+12
     65              U16 WAVE_UI[6*size_UI]= {0};  // wk -->  size_UI = 100
   \   00000014   0xA807             ADD      R0,SP,#+28
   \   00000016   0xF44F 0x6196      MOV      R1,#+1200
   \   0000001A   0x.... 0x....      BL       __aeabi_memclr4
     66              CharToInt(&PowRxchar[WAVEUI_INDEX],WAVE_UI,6,75);   //将波形采样值扩充并赋给WAVE_UI数组
   \   0000001E   0x234B             MOVS     R3,#+75
   \   00000020   0x2206             MOVS     R2,#+6
   \   00000022   0xA907             ADD      R1,SP,#+28
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000028   0x.... 0x....      BL       CharToInt
     67              linemark(48,0); //电压电流图标注上面的电压有效值及单位
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x2030             MOVS     R0,#+48
   \   00000030   0x.... 0x....      BL       linemark
     68              delay_ms(5);
   \   00000034   0x2005             MOVS     R0,#+5
   \   00000036   0x.... 0x....      BL       delay_ms
     69              linemark(254,1);  //电压电流图标注下面的电流有效值及单位
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x20FE             MOVS     R0,#+254
   \   0000003E   0x.... 0x....      BL       linemark
     70              delay_ms(5);
   \   00000042   0x2005             MOVS     R0,#+5
   \   00000044   0x.... 0x....      BL       delay_ms
     71              WR_WAVE_UI(WAVE_UI,1,0);                      //将所有采样数据写入液晶屏的缓冲区
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0xA807             ADD      R0,SP,#+28
   \   0000004E   0x.... 0x....      BL       WR_WAVE_UI
     72              // wk -->                                  85          7              
     73              YADA_C104 (UA_addr,Coord_UI[0],Coord_UI[3],UI_LINE_NUM,UI_DX,COLOR[0],UA_addr + size_UI,COLOR[3]); 
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000056   0x88C0             LDRH     R0,[R0, #+6]
   \   00000058   0x9003             STR      R0,[SP, #+12]
   \   0000005A   0x2064             MOVS     R0,#+100
   \   0000005C   0x9002             STR      R0,[SP, #+8]
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000062   0x8800             LDRH     R0,[R0, #+0]
   \   00000064   0x9001             STR      R0,[SP, #+4]
   \   00000066   0x2007             MOVS     R0,#+7
   \   00000068   0x9000             STR      R0,[SP, #+0]
   \   0000006A   0x2355             MOVS     R3,#+85
   \   0000006C   0xF8BD 0x2016      LDRH     R2,[SP, #+22]
   \   00000070   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       YADA_C104
     74              YADA_C104 (UB_addr,Coord_UI[0],Coord_UI[3],UI_LINE_NUM,UI_DX,COLOR[1],UB_addr + size_UI,COLOR[3]);
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000007E   0x88C0             LDRH     R0,[R0, #+6]
   \   00000080   0x9003             STR      R0,[SP, #+12]
   \   00000082   0xF44F 0x7096      MOV      R0,#+300
   \   00000086   0x9002             STR      R0,[SP, #+8]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000008C   0x8840             LDRH     R0,[R0, #+2]
   \   0000008E   0x9001             STR      R0,[SP, #+4]
   \   00000090   0x2007             MOVS     R0,#+7
   \   00000092   0x9000             STR      R0,[SP, #+0]
   \   00000094   0x2355             MOVS     R3,#+85
   \   00000096   0xF8BD 0x2016      LDRH     R2,[SP, #+22]
   \   0000009A   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   0000009E   0x20C8             MOVS     R0,#+200
   \   000000A0   0x.... 0x....      BL       YADA_C104
     75              YADA_C104 (UC_addr,Coord_UI[0],Coord_UI[3],UI_LINE_NUM,UI_DX,COLOR[2],UC_addr + size_UI,COLOR[3]);
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000A8   0x88C0             LDRH     R0,[R0, #+6]
   \   000000AA   0x9003             STR      R0,[SP, #+12]
   \   000000AC   0xF44F 0x70FA      MOV      R0,#+500
   \   000000B0   0x9002             STR      R0,[SP, #+8]
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000B6   0x8880             LDRH     R0,[R0, #+4]
   \   000000B8   0x9001             STR      R0,[SP, #+4]
   \   000000BA   0x2007             MOVS     R0,#+7
   \   000000BC   0x9000             STR      R0,[SP, #+0]
   \   000000BE   0x2355             MOVS     R3,#+85
   \   000000C0   0xF8BD 0x2016      LDRH     R2,[SP, #+22]
   \   000000C4   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000C8   0xF44F 0x70C8      MOV      R0,#+400
   \   000000CC   0x.... 0x....      BL       YADA_C104
     76              YADA_C104 (IA_addr,Coord_UI[0],Coord_UI[5],UI_LINE_NUM,UI_DX,COLOR[0],IA_addr + size_UI,COLOR[3]);
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000D4   0x88C0             LDRH     R0,[R0, #+6]
   \   000000D6   0x9003             STR      R0,[SP, #+12]
   \   000000D8   0xF44F 0x702F      MOV      R0,#+700
   \   000000DC   0x9002             STR      R0,[SP, #+8]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000E2   0x8800             LDRH     R0,[R0, #+0]
   \   000000E4   0x9001             STR      R0,[SP, #+4]
   \   000000E6   0x2007             MOVS     R0,#+7
   \   000000E8   0x9000             STR      R0,[SP, #+0]
   \   000000EA   0x2355             MOVS     R3,#+85
   \   000000EC   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   000000F0   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000F4   0xF44F 0x7016      MOV      R0,#+600
   \   000000F8   0x.... 0x....      BL       YADA_C104
     77              YADA_C104 (IB_addr,Coord_UI[0],Coord_UI[5],UI_LINE_NUM,UI_DX,COLOR[1],IB_addr + size_UI,COLOR[3]);
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000100   0x88C0             LDRH     R0,[R0, #+6]
   \   00000102   0x9003             STR      R0,[SP, #+12]
   \   00000104   0xF44F 0x7061      MOV      R0,#+900
   \   00000108   0x9002             STR      R0,[SP, #+8]
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000010E   0x8840             LDRH     R0,[R0, #+2]
   \   00000110   0x9001             STR      R0,[SP, #+4]
   \   00000112   0x2007             MOVS     R0,#+7
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x2355             MOVS     R3,#+85
   \   00000118   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   0000011C   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000120   0xF44F 0x7048      MOV      R0,#+800
   \   00000124   0x.... 0x....      BL       YADA_C104
     78              YADA_C104 (IC_addr,Coord_UI[0],Coord_UI[5],UI_LINE_NUM,UI_DX,COLOR[2],IC_addr + size_UI,COLOR[3]);
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000012C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000012E   0x9003             STR      R0,[SP, #+12]
   \   00000130   0xF240 0x404C      MOVW     R0,#+1100
   \   00000134   0x9002             STR      R0,[SP, #+8]
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000013A   0x8880             LDRH     R0,[R0, #+4]
   \   0000013C   0x9001             STR      R0,[SP, #+4]
   \   0000013E   0x2007             MOVS     R0,#+7
   \   00000140   0x9000             STR      R0,[SP, #+0]
   \   00000142   0x2355             MOVS     R3,#+85
   \   00000144   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   00000148   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   0000014C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000150   0x.... 0x....      BL       YADA_C104
     79              delay_ms(5);
   \   00000154   0x2005             MOVS     R0,#+5
   \   00000156   0x.... 0x....      BL       delay_ms
     80              WR_WAVE_UI(WAVE_UI,1,1);                       //将所有原采样数据写入触摸屏的另一地址
   \   0000015A   0x2201             MOVS     R2,#+1
   \   0000015C   0x2101             MOVS     R1,#+1
   \   0000015E   0xA807             ADD      R0,SP,#+28
   \   00000160   0x.... 0x....      BL       WR_WAVE_UI
     81          }
   \   00000164   0xF50D 0x6D9A      ADD      SP,SP,#+1232
   \   00000168   0xBD10             POP      {R4,PC}          ;; return
     82          /*******************************************************************************
     83          * 函  数  名      : GUI_VIEW_U
     84          * 描      述      : 电压波形及有效值显示，颜色为黄绿红，采用C104指令可自动擦除。
     85          * 输      入      : 无
     86          * 返      回      : 无
     87          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     88          void GUI_VIEW_U(void)
     89          {
   \                     GUI_VIEW_U:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D1F      SUB      SP,SP,#+636
     90              U16 WAVE_U[3*size_UI]= {0};
   \   00000006   0xA808             ADD      R0,SP,#+32
   \   00000008   0xF44F 0x7116      MOV      R1,#+600
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
     91              U16 Coord_U[]= {14,86,614,174,212,295,330,415};    //剪切及原点坐标a
   \   00000010   0xA804             ADD      R0,SP,#+16
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000016   0x2210             MOVS     R2,#+16
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy4
     92              linemark(48,0);                                    //电压图标注上面的电压,及有效值
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x2030             MOVS     R0,#+48
   \   00000020   0x.... 0x....      BL       linemark
     93              delay_ms(5);
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x.... 0x....      BL       delay_ms
     94              CharToInt(&PowRxchar[WAVEUI_INDEX],WAVE_U,3,55);   //将波形采样值扩充并赋给WAVE_UI数组
   \   0000002A   0x2337             MOVS     R3,#+55
   \   0000002C   0x2203             MOVS     R2,#+3
   \   0000002E   0xA908             ADD      R1,SP,#+32
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000034   0x.... 0x....      BL       CharToInt
     95              WR_WAVE_UI(WAVE_U,2,0);                     //将所有采样数据写入触摸屏
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2102             MOVS     R1,#+2
   \   0000003C   0xA808             ADD      R0,SP,#+32
   \   0000003E   0x.... 0x....      BL       WR_WAVE_UI
     96              YADA_C104 (UA_addr,Coord_U[0],185,U_I_LINE_NUM,U_I_DX,COLOR[0],UA_addr + size_UI,COLOR[3]);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000046   0x88C0             LDRH     R0,[R0, #+6]
   \   00000048   0x9003             STR      R0,[SP, #+12]
   \   0000004A   0x2064             MOVS     R0,#+100
   \   0000004C   0x9002             STR      R0,[SP, #+8]
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000052   0x8800             LDRH     R0,[R0, #+0]
   \   00000054   0x9001             STR      R0,[SP, #+4]
   \   00000056   0x2006             MOVS     R0,#+6
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0x2363             MOVS     R3,#+99
   \   0000005C   0x22B9             MOVS     R2,#+185
   \   0000005E   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      BL       YADA_C104
     97              YADA_C104 (UB_addr,Coord_U[0],306,U_I_LINE_NUM,U_I_DX,COLOR[1],UB_addr + size_UI,COLOR[3]);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000006C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000006E   0x9003             STR      R0,[SP, #+12]
   \   00000070   0xF44F 0x7096      MOV      R0,#+300
   \   00000074   0x9002             STR      R0,[SP, #+8]
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000007A   0x8840             LDRH     R0,[R0, #+2]
   \   0000007C   0x9001             STR      R0,[SP, #+4]
   \   0000007E   0x2006             MOVS     R0,#+6
   \   00000080   0x9000             STR      R0,[SP, #+0]
   \   00000082   0x2363             MOVS     R3,#+99
   \   00000084   0xF44F 0x7299      MOV      R2,#+306
   \   00000088   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   0000008C   0x20C8             MOVS     R0,#+200
   \   0000008E   0x.... 0x....      BL       YADA_C104
     98              YADA_C104 (UC_addr,Coord_U[0],428,U_I_LINE_NUM,U_I_DX,COLOR[2],UC_addr + size_UI,COLOR[3]);
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000096   0x88C0             LDRH     R0,[R0, #+6]
   \   00000098   0x9003             STR      R0,[SP, #+12]
   \   0000009A   0xF44F 0x70FA      MOV      R0,#+500
   \   0000009E   0x9002             STR      R0,[SP, #+8]
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000000A4   0x8880             LDRH     R0,[R0, #+4]
   \   000000A6   0x9001             STR      R0,[SP, #+4]
   \   000000A8   0x2006             MOVS     R0,#+6
   \   000000AA   0x9000             STR      R0,[SP, #+0]
   \   000000AC   0x2363             MOVS     R3,#+99
   \   000000AE   0xF44F 0x72D6      MOV      R2,#+428
   \   000000B2   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000B6   0xF44F 0x70C8      MOV      R0,#+400
   \   000000BA   0x.... 0x....      BL       YADA_C104
     99              delay_ms(5);
   \   000000BE   0x2005             MOVS     R0,#+5
   \   000000C0   0x.... 0x....      BL       delay_ms
    100              WR_WAVE_UI(WAVE_U,2,1);                      //将所有原采样数据写入触摸屏的另一地址
   \   000000C4   0x2201             MOVS     R2,#+1
   \   000000C6   0x2102             MOVS     R1,#+2
   \   000000C8   0xA808             ADD      R0,SP,#+32
   \   000000CA   0x.... 0x....      BL       WR_WAVE_UI
    101              // delay_ms(50);
    102          }
   \   000000CE   0xF50D 0x7D1F      ADD      SP,SP,#+636
   \   000000D2   0xBD00             POP      {PC}             ;; return
    103          /*******************************************************************************
    104          * 函  数  名      : GUI_VIEW_I
    105          * 描      述      : 电流波形及有效值显示，颜色为黄绿红，采用C104指令可自动擦除。
    106          * 输      入      : 无
    107          * 返      回      : 无
    108          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    109          void GUI_VIEW_I(void)
    110          {
   \                     GUI_VIEW_I:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D1F      SUB      SP,SP,#+636
    111              U16 WAVE_I[3*size_UI]= {0};
   \   00000006   0xA808             ADD      R0,SP,#+32
   \   00000008   0xF44F 0x7116      MOV      R1,#+600
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    112              U16 Coord_I[]= {14,86,614,174,212,295,330,415};      //剪切及原点坐标
   \   00000010   0xA804             ADD      R0,SP,#+16
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000016   0x2210             MOVS     R2,#+16
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy4
    113              linemark(48,1);                                      //电流图标注上面的电流,及有效值
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2030             MOVS     R0,#+48
   \   00000020   0x.... 0x....      BL       linemark
    114              delay_ms(5);
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x.... 0x....      BL       delay_ms
    115              CharToInt(&PowRxchar[WAVEUI_INDEX+240],WAVE_I,3,55);   //将波形采样值扩充并赋给WAVE_UI数组
   \   0000002A   0x2337             MOVS     R3,#+55
   \   0000002C   0x2203             MOVS     R2,#+3
   \   0000002E   0xA908             ADD      R1,SP,#+32
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000034   0x.... 0x....      BL       CharToInt
    116              WR_WAVE_UI(WAVE_I,3,0);                   //将所有采样数据写入触摸屏
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2103             MOVS     R1,#+3
   \   0000003C   0xA808             ADD      R0,SP,#+32
   \   0000003E   0x.... 0x....      BL       WR_WAVE_UI
    117              YADA_C104 (IA_addr,Coord_I[0],185,U_I_LINE_NUM,U_I_DX,COLOR[0],IA_addr + size_UI,COLOR[3]);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000046   0x88C0             LDRH     R0,[R0, #+6]
   \   00000048   0x9003             STR      R0,[SP, #+12]
   \   0000004A   0xF44F 0x702F      MOV      R0,#+700
   \   0000004E   0x9002             STR      R0,[SP, #+8]
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000054   0x8800             LDRH     R0,[R0, #+0]
   \   00000056   0x9001             STR      R0,[SP, #+4]
   \   00000058   0x2006             MOVS     R0,#+6
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2363             MOVS     R3,#+99
   \   0000005E   0x22B9             MOVS     R2,#+185
   \   00000060   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000064   0xF44F 0x7016      MOV      R0,#+600
   \   00000068   0x.... 0x....      BL       YADA_C104
    118              YADA_C104 (IB_addr,Coord_I[0],306,U_I_LINE_NUM,U_I_DX,COLOR[1],IB_addr + size_UI,COLOR[3]);
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000070   0x88C0             LDRH     R0,[R0, #+6]
   \   00000072   0x9003             STR      R0,[SP, #+12]
   \   00000074   0xF44F 0x7061      MOV      R0,#+900
   \   00000078   0x9002             STR      R0,[SP, #+8]
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000007E   0x8840             LDRH     R0,[R0, #+2]
   \   00000080   0x9001             STR      R0,[SP, #+4]
   \   00000082   0x2006             MOVS     R0,#+6
   \   00000084   0x9000             STR      R0,[SP, #+0]
   \   00000086   0x2363             MOVS     R3,#+99
   \   00000088   0xF44F 0x7299      MOV      R2,#+306
   \   0000008C   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000090   0xF44F 0x7048      MOV      R0,#+800
   \   00000094   0x.... 0x....      BL       YADA_C104
    119              YADA_C104 (IC_addr,Coord_I[0],428,U_I_LINE_NUM,U_I_DX,COLOR[2],IC_addr + size_UI,COLOR[3]);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000009C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000009E   0x9003             STR      R0,[SP, #+12]
   \   000000A0   0xF240 0x404C      MOVW     R0,#+1100
   \   000000A4   0x9002             STR      R0,[SP, #+8]
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000000AA   0x8880             LDRH     R0,[R0, #+4]
   \   000000AC   0x9001             STR      R0,[SP, #+4]
   \   000000AE   0x2006             MOVS     R0,#+6
   \   000000B0   0x9000             STR      R0,[SP, #+0]
   \   000000B2   0x2363             MOVS     R3,#+99
   \   000000B4   0xF44F 0x72D6      MOV      R2,#+428
   \   000000B8   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000BC   0xF44F 0x707A      MOV      R0,#+1000
   \   000000C0   0x.... 0x....      BL       YADA_C104
    120              WR_WAVE_UI(WAVE_I,3,1);                      //将所有原采样数据写入触摸屏的另一地址
   \   000000C4   0x2201             MOVS     R2,#+1
   \   000000C6   0x2103             MOVS     R1,#+3
   \   000000C8   0xA808             ADD      R0,SP,#+32
   \   000000CA   0x.... 0x....      BL       WR_WAVE_UI
    121              //delay_ms(50);
    122          }
   \   000000CE   0xF50D 0x7D1F      ADD      SP,SP,#+636
   \   000000D2   0xBD00             POP      {PC}             ;; return
    123          /*******************************************************************************
    124          * 函  数  名      : GUI_VIEW_VECT
    125          * 描      述      : 电流电压向量及相角显示，颜色为黄绿红，采用56指令画向量，C108
    126                              指令显示相角值。
    127          * 输      入      : 无
    128          * 返      回      : 无
    129          *
    130          * 修       改     : WK
    131          * 时       间     : 2013-03-13
    132          * 描       述     : 基于2013-03-08界面
    133          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    134          void GUI_VIEW_VECT(void)
    135          {
   \                     GUI_VIEW_VECT:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0B1             SUB      SP,SP,#+196
    136              U8 text[][3]= {"Ua","Ub","Uc","Ia","Ib","Ic"}; //0使ASCII字符间的间距缩小  // wk @130403 --> global 2 local
   \   00000006   0xA817             ADD      R0,SP,#+92
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000000C   0x2214             MOVS     R2,#+20
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy4
    137              U16 VI_line[4];                                 //一条向量的数组
    138              U16 C108Dat[42] = {0};                          //剪切及原点坐标
   \   00000012   0xA81C             ADD      R0,SP,#+112
   \   00000014   0x2154             MOVS     R1,#+84
   \   00000016   0x.... 0x....      BL       __aeabi_memclr4
    139              U16 VEC_ORIG_YCOORD=95;       //wk @20130325 --> old:96        //相位的初始Y 坐标
   \   0000001A   0x205F             MOVS     R0,#+95
   \   0000001C   0xF8AD 0x0014      STRH     R0,[SP, #+20]
    140              U16 Vec_Angle1[6]= {0};
   \   00000020   0xA808             ADD      R0,SP,#+32
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0xC00E             STM      R0!,{R1-R3}
   \   0000002A   0x380C             SUBS     R0,R0,#+12
    141              U32 Vec_Angle[6];
    142              float Vec_Anglefloat[6]= {0.0};                   //向量的浮点型，调用方便
   \   0000002C   0xA80B             ADD      R0,SP,#+44
   \   0000002E   0x2118             MOVS     R1,#+24
   \   00000030   0x.... 0x....      BL       __aeabi_memclr4
    143              YADA_71 (MenuViewVector,0,40,366,417,0,40);
   \   00000034   0x2028             MOVS     R0,#+40
   \   00000036   0x9002             STR      R0,[SP, #+8]
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x9001             STR      R0,[SP, #+4]
   \   0000003C   0xF240 0x10A1      MOVW     R0,#+417
   \   00000040   0x9000             STR      R0,[SP, #+0]
   \   00000042   0xF44F 0x73B7      MOV      R3,#+366
   \   00000046   0x2228             MOVS     R2,#+40
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x2017             MOVS     R0,#+23
   \   0000004C   0x.... 0x....      BL       YADA_71
    144              /**电压电流各向量及标识**/
    145              ChartoFloat(&PowRxchar[VEC_INDEX],Vec_Anglefloat,6,10000);
   \   00000050   0xF242 0x7310      MOVW     R3,#+10000
   \   00000054   0x2206             MOVS     R2,#+6
   \   00000056   0xA90B             ADD      R1,SP,#+44
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   0000005C   0x.... 0x....      BL       ChartoFloat
    146              PhaseShift(Vec_Anglefloat,Vec_Angle1,6,Vec_Angle);
   \   00000060   0xAB11             ADD      R3,SP,#+68
   \   00000062   0x2206             MOVS     R2,#+6
   \   00000064   0xA908             ADD      R1,SP,#+32
   \   00000066   0xA80B             ADD      R0,SP,#+44
   \   00000068   0x.... 0x....      BL       PhaseShift
    147              for(U8 j=0; j<3; j++)
   \   0000006C   0x2600             MOVS     R6,#+0
   \   0000006E   0xE0EA             B.N      ??GUI_VIEW_VECT_0
    148              {
    149                  for(U8 i=0; i<2; i++)
    150                  {
    151                      YADA_40(COLOR[j],0x0000);
   \                     ??GUI_VIEW_VECT_1:
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000078   0xF830 0x0016      LDRH     R0,[R0, R6, LSL #+1]
   \   0000007C   0x.... 0x....      BL       YADA_40
    152                      VI_line[0]=Vec_X0;
   \   00000080   0x20AA             MOVS     R0,#+170
   \   00000082   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    153                      VI_line[1]=Vec_Y0;
   \   00000086   0x20EC             MOVS     R0,#+236
   \   00000088   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    154                      VI_line[2]=(U16)(Vec_X0+Vec_R0*cos(Vec_Angle1[i+j*2]*PI/180));
   \   0000008C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008E   0x0070             LSLS     R0,R6,#+1
   \   00000090   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   00000094   0xA908             ADD      R1,SP,#+32
   \   00000096   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   0000009A   0x.... 0x....      BL       __aeabi_ui2d
   \   0000009E   0x.... 0x....      LDR.W    R2,??DataTable6_5  ;; 0x51eb851f
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable6_6  ;; 0x40091eb8
   \   000000A6   0x.... 0x....      BL       __aeabi_dmul
   \   000000AA   0x2200             MOVS     R2,#+0
   \   000000AC   0x.... 0x....      LDR.W    R3,??DataTable6_7  ;; 0x40668000
   \   000000B0   0x.... 0x....      BL       __aeabi_ddiv
   \   000000B4   0x.... 0x....      BL       cos
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x.... 0x....      LDR.W    R3,??DataTable6_8  ;; 0x4064a000
   \   000000BE   0x.... 0x....      BL       __aeabi_dmul
   \   000000C2   0x2200             MOVS     R2,#+0
   \   000000C4   0x.... 0x....      LDR.W    R3,??DataTable6_9  ;; 0x40654000
   \   000000C8   0x.... 0x....      BL       __aeabi_dadd
   \   000000CC   0x.... 0x....      BL       __aeabi_d2iz
   \   000000D0   0xF8AD 0x001C      STRH     R0,[SP, #+28]
    155                      VI_line[3]=(U16)(Vec_Y0-Vec_R0*sin(Vec_Angle1[i+j*2]*PI/180));
   \   000000D4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000D6   0x0070             LSLS     R0,R6,#+1
   \   000000D8   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   000000DC   0xA908             ADD      R1,SP,#+32
   \   000000DE   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   000000E2   0x.... 0x....      BL       __aeabi_ui2d
   \   000000E6   0x.... 0x....      LDR.W    R2,??DataTable6_5  ;; 0x51eb851f
   \   000000EA   0x.... 0x....      LDR.W    R3,??DataTable6_6  ;; 0x40091eb8
   \   000000EE   0x.... 0x....      BL       __aeabi_dmul
   \   000000F2   0x2200             MOVS     R2,#+0
   \   000000F4   0x.... 0x....      LDR.W    R3,??DataTable6_7  ;; 0x40668000
   \   000000F8   0x.... 0x....      BL       __aeabi_ddiv
   \   000000FC   0x.... 0x....      BL       sin
   \   00000100   0x2200             MOVS     R2,#+0
   \   00000102   0x.... 0x....      LDR.W    R3,??DataTable6_8  ;; 0x4064a000
   \   00000106   0x.... 0x....      BL       __aeabi_dmul
   \   0000010A   0x0002             MOVS     R2,R0
   \   0000010C   0x000B             MOVS     R3,R1
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable6_10  ;; 0x406d8000
   \   00000114   0x.... 0x....      BL       __aeabi_dsub
   \   00000118   0x.... 0x....      BL       __aeabi_d2iz
   \   0000011C   0xF8AD 0x001E      STRH     R0,[SP, #+30]
    156                      YADA_98((U16)(Vec_X0+(Vec_R0 - 30*i - 10)*cos(Vec_Angle1[i+j*2]*PI/180)),
    157                              (U16)(Vec_Y0-(Vec_R0 - 30*i - 10)*sin(Vec_Angle1[i+j*2]*PI/180)),
    158                              0x22,0x81,0x01,COLOR[j],0x0000,text[j+i*3],0);//16是根据显示文本的点阵大小确定的，使文本在背景范围内显示
   \   00000120   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000122   0x0070             LSLS     R0,R6,#+1
   \   00000124   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   00000128   0xA908             ADD      R1,SP,#+32
   \   0000012A   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   0000012E   0x.... 0x....      BL       __aeabi_ui2d
   \   00000132   0x.... 0x....      LDR.W    R2,??DataTable6_5  ;; 0x51eb851f
   \   00000136   0x.... 0x....      LDR.W    R3,??DataTable6_6  ;; 0x40091eb8
   \   0000013A   0x.... 0x....      BL       __aeabi_dmul
   \   0000013E   0x2200             MOVS     R2,#+0
   \   00000140   0x.... 0x....      LDR.W    R3,??DataTable6_7  ;; 0x40668000
   \   00000144   0x.... 0x....      BL       __aeabi_ddiv
   \   00000148   0x.... 0x....      BL       sin
   \   0000014C   0x4680             MOV      R8,R0
   \   0000014E   0x4689             MOV      R9,R1
   \   00000150   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000152   0x0070             LSLS     R0,R6,#+1
   \   00000154   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   00000158   0xA908             ADD      R1,SP,#+32
   \   0000015A   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   0000015E   0x.... 0x....      BL       __aeabi_ui2d
   \   00000162   0x0002             MOVS     R2,R0
   \   00000164   0x000B             MOVS     R3,R1
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable6_5  ;; 0x51eb851f
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable6_6  ;; 0x40091eb8
   \   0000016E   0x.... 0x....      BL       __aeabi_dmul
   \   00000172   0x2200             MOVS     R2,#+0
   \   00000174   0x.... 0x....      LDR.W    R3,??DataTable6_7  ;; 0x40668000
   \   00000178   0x.... 0x....      BL       __aeabi_ddiv
   \   0000017C   0x.... 0x....      BL       cos
   \   00000180   0x0004             MOVS     R4,R0
   \   00000182   0x000D             MOVS     R5,R1
   \   00000184   0x2000             MOVS     R0,#+0
   \   00000186   0x9004             STR      R0,[SP, #+16]
   \   00000188   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000018A   0x2003             MOVS     R0,#+3
   \   0000018C   0xFB00 0xF007      MUL      R0,R0,R7
   \   00000190   0xFA50 0xF086      UXTAB    R0,R0,R6
   \   00000194   0x2103             MOVS     R1,#+3
   \   00000196   0xAA17             ADD      R2,SP,#+92
   \   00000198   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000019C   0x9003             STR      R0,[SP, #+12]
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x9002             STR      R0,[SP, #+8]
   \   000001A2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000001A8   0xF830 0x0016      LDRH     R0,[R0, R6, LSL #+1]
   \   000001AC   0x9001             STR      R0,[SP, #+4]
   \   000001AE   0x2001             MOVS     R0,#+1
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x2381             MOVS     R3,#+129
   \   000001B4   0x2222             MOVS     R2,#+34
   \   000001B6   0x4693             MOV      R11,R2
   \   000001B8   0x469A             MOV      R10,R3
   \   000001BA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001BC   0x201E             MOVS     R0,#+30
   \   000001BE   0xFB00 0xF007      MUL      R0,R0,R7
   \   000001C2   0xF1D0 0x009B      RSBS     R0,R0,#+155
   \   000001C6   0x.... 0x....      BL       __aeabi_i2d
   \   000001CA   0x0002             MOVS     R2,R0
   \   000001CC   0x000B             MOVS     R3,R1
   \   000001CE   0x4640             MOV      R0,R8
   \   000001D0   0x4649             MOV      R1,R9
   \   000001D2   0x.... 0x....      BL       __aeabi_dmul
   \   000001D6   0x0002             MOVS     R2,R0
   \   000001D8   0x000B             MOVS     R3,R1
   \   000001DA   0x2000             MOVS     R0,#+0
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable6_10  ;; 0x406d8000
   \   000001E0   0x.... 0x....      BL       __aeabi_dsub
   \   000001E4   0x.... 0x....      BL       __aeabi_d2iz
   \   000001E8   0x0001             MOVS     R1,R0
   \   000001EA   0x4653             MOV      R3,R10
   \   000001EC   0x465A             MOV      R2,R11
   \   000001EE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001F0   0x468A             MOV      R10,R1
   \   000001F2   0x4691             MOV      R9,R2
   \   000001F4   0x4698             MOV      R8,R3
   \   000001F6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001F8   0x201E             MOVS     R0,#+30
   \   000001FA   0xFB00 0xF007      MUL      R0,R0,R7
   \   000001FE   0xF1D0 0x009B      RSBS     R0,R0,#+155
   \   00000202   0x.... 0x....      BL       __aeabi_i2d
   \   00000206   0x0022             MOVS     R2,R4
   \   00000208   0x002B             MOVS     R3,R5
   \   0000020A   0x.... 0x....      BL       __aeabi_dmul
   \   0000020E   0x0002             MOVS     R2,R0
   \   00000210   0x000B             MOVS     R3,R1
   \   00000212   0x2000             MOVS     R0,#+0
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable6_9  ;; 0x40654000
   \   00000218   0x.... 0x....      BL       __aeabi_dadd
   \   0000021C   0x.... 0x....      BL       __aeabi_d2iz
   \   00000220   0x4643             MOV      R3,R8
   \   00000222   0x464A             MOV      R2,R9
   \   00000224   0x4651             MOV      R1,R10
   \   00000226   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000228   0x.... 0x....      BL       YADA_98
    159                      YADA_56(VI_line,4);//前景色划直线
   \   0000022C   0x2104             MOVS     R1,#+4
   \   0000022E   0xA806             ADD      R0,SP,#+24
   \   00000230   0x.... 0x....      BL       YADA_56
    160                      delay_ms(2);
   \   00000234   0x2002             MOVS     R0,#+2
   \   00000236   0x.... 0x....      BL       delay_ms
    161                  }
   \   0000023A   0x1C7F             ADDS     R7,R7,#+1
   \                     ??GUI_VIEW_VECT_2:
   \   0000023C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000023E   0x2F02             CMP      R7,#+2
   \   00000240   0xF4FF 0xAF16      BCC.W    ??GUI_VIEW_VECT_1
   \   00000244   0x1C76             ADDS     R6,R6,#+1
   \                     ??GUI_VIEW_VECT_0:
   \   00000246   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000248   0x2E03             CMP      R6,#+3
   \   0000024A   0xD201             BCS.N    ??GUI_VIEW_VECT_3
   \   0000024C   0x2700             MOVS     R7,#+0
   \   0000024E   0xE7F5             B.N      ??GUI_VIEW_VECT_2
    162              }
    163              delay_ms(5);
   \                     ??GUI_VIEW_VECT_3:
   \   00000250   0x2005             MOVS     R0,#+5
   \   00000252   0x.... 0x....      BL       delay_ms
    164              /**电压电流各相角的实时数值显示**/
    165              for (U8 k = 0; k < 2; k++)
   \   00000256   0x2000             MOVS     R0,#+0
   \   00000258   0xE079             B.N      ??GUI_VIEW_VECT_4
    166              {
    167                  for(U8 i=0; i<3; i++)
    168                  {
    169                      C108Dat[21*k + 7*i + 0] = 0x3404;         //P  显示数据的模式
   \                     ??GUI_VIEW_VECT_5:
   \   0000025A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000025C   0x2215             MOVS     R2,#+21
   \   0000025E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000260   0x2307             MOVS     R3,#+7
   \   00000262   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000266   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000026A   0xAB1C             ADD      R3,SP,#+112
   \   0000026C   0xF243 0x4404      MOVW     R4,#+13316
   \   00000270   0xF823 0x4012      STRH     R4,[R3, R2, LSL #+1]
    170                      C108Dat[21*k + 7*i + 1] = 455;            //显示相位的X坐标
   \   00000274   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000276   0x2215             MOVS     R2,#+21
   \   00000278   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000027A   0x2307             MOVS     R3,#+7
   \   0000027C   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000280   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000284   0xAB1C             ADD      R3,SP,#+112
   \   00000286   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000028A   0xF240 0x13C7      MOVW     R3,#+455
   \   0000028E   0x8053             STRH     R3,[R2, #+2]
    171                      C108Dat[21*k + 7*i + 2] = VEC_ORIG_YCOORD + i*44 + k*158;     //Y坐标
   \   00000290   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000292   0x2215             MOVS     R2,#+21
   \   00000294   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000296   0x2307             MOVS     R3,#+7
   \   00000298   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000029C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002A0   0xAB1C             ADD      R3,SP,#+112
   \   000002A2   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000002A6   0xF8BD 0x3014      LDRH     R3,[SP, #+20]
   \   000002AA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002AC   0x242C             MOVS     R4,#+44
   \   000002AE   0xFB04 0xF401      MUL      R4,R4,R1
   \   000002B2   0xFA14 0xF383      UXTAH    R3,R4,R3
   \   000002B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002B8   0x249E             MOVS     R4,#+158
   \   000002BA   0xFB04 0x3300      MLA      R3,R4,R0,R3
   \   000002BE   0x8093             STRH     R3,[R2, #+4]
    172                      C108Dat[21*k + 7*i + 3] = 0xffff;         //白色，下为黑色
   \   000002C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C2   0x2215             MOVS     R2,#+21
   \   000002C4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002C6   0x2307             MOVS     R3,#+7
   \   000002C8   0xFB03 0xF301      MUL      R3,R3,R1
   \   000002CC   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002D0   0xAB1C             ADD      R3,SP,#+112
   \   000002D2   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000002D6   0xF64F 0x73FF      MOVW     R3,#+65535
   \   000002DA   0x80D3             STRH     R3,[R2, #+6]
    173                      C108Dat[21*k + 7*i + 4] = 0x0000;
   \   000002DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002DE   0x2215             MOVS     R2,#+21
   \   000002E0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002E2   0x2307             MOVS     R3,#+7
   \   000002E4   0xFB03 0xF301      MUL      R3,R3,R1
   \   000002E8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002EC   0xAB1C             ADD      R3,SP,#+112
   \   000002EE   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000002F2   0x2300             MOVS     R3,#+0
   \   000002F4   0x8113             STRH     R3,[R2, #+8]
    174                      C108Dat[21*k + 7*i + 5] = (U16)(Vec_Angle[2*i+k]>>16);//两个字节转为一个字
   \   000002F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F8   0x2215             MOVS     R2,#+21
   \   000002FA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002FC   0x2307             MOVS     R3,#+7
   \   000002FE   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000302   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000306   0xAB1C             ADD      R3,SP,#+112
   \   00000308   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000030C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000030E   0x004B             LSLS     R3,R1,#+1
   \   00000310   0xFA53 0xF380      UXTAB    R3,R3,R0
   \   00000314   0xAC11             ADD      R4,SP,#+68
   \   00000316   0xF854 0x3023      LDR      R3,[R4, R3, LSL #+2]
   \   0000031A   0x0C1B             LSRS     R3,R3,#+16
   \   0000031C   0x8153             STRH     R3,[R2, #+10]
    175                      C108Dat[21*k + 7*i + 6] = (U16)(Vec_Angle[2*i+k]);
   \   0000031E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000320   0x2215             MOVS     R2,#+21
   \   00000322   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000324   0x2307             MOVS     R3,#+7
   \   00000326   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000032A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000032E   0xAB1C             ADD      R3,SP,#+112
   \   00000330   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000334   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000336   0x004B             LSLS     R3,R1,#+1
   \   00000338   0xFA53 0xF380      UXTAB    R3,R3,R0
   \   0000033C   0xAC11             ADD      R4,SP,#+68
   \   0000033E   0xF854 0x3023      LDR      R3,[R4, R3, LSL #+2]
   \   00000342   0x8193             STRH     R3,[R2, #+12]
    176                  }
   \   00000344   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_VECT_6:
   \   00000346   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000348   0x2903             CMP      R1,#+3
   \   0000034A   0xD386             BCC.N    ??GUI_VIEW_VECT_5
   \   0000034C   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_VECT_4:
   \   0000034E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000350   0x2802             CMP      R0,#+2
   \   00000352   0xD201             BCS.N    ??GUI_VIEW_VECT_7
   \   00000354   0x2100             MOVS     R1,#+0
   \   00000356   0xE7F6             B.N      ??GUI_VIEW_VECT_6
    177              }
    178              YADA_C0(Vectoraddr,C108Dat,42);
   \                     ??GUI_VIEW_VECT_7:
   \   00000358   0x222A             MOVS     R2,#+42
   \   0000035A   0xA91C             ADD      R1,SP,#+112
   \   0000035C   0xF640 0x1038      MOVW     R0,#+2360
   \   00000360   0x.... 0x....      BL       YADA_C0
    179              YADA_C108(Vectoraddr,6);
   \   00000364   0x2106             MOVS     R1,#+6
   \   00000366   0xF640 0x1038      MOVW     R0,#+2360
   \   0000036A   0x.... 0x....      BL       YADA_C108
    180              delay_ms(5);
   \   0000036E   0x2005             MOVS     R0,#+5
   \   00000370   0x.... 0x....      BL       delay_ms
    181              //delay_ms(50);
    182          }
   \   00000374   0xB031             ADD      SP,SP,#+196
   \   00000376   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    183          /*******************************************************************************
    184          * 函  数  名      : GUI_VIEW_ListMeasure
    185          * 描      述      : C108数据显示页下的数值列表-电能计量数据显示，三相的U,I,P,S,Q,
    186                              PF,F。
    187          * 输      入      : 无
    188          * 返      回      : 无
    189          *
    190          * 修       改     : WK
    191          * 时       间     : 2013-03-14
    192          * 描       述     : 基于2013-03-08界面 : 修改了 C108Data 数组存放数据顺序以及 显示的算法
    193          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    194          void GUI_VIEW_ListMeasure()   // wk --> 电能计量参数
    195          {
   \                     GUI_VIEW_ListMeasure:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0CB             SUB      SP,SP,#+300
    196          #if 1
    197          //    U16 C108Data[147]= {0};//21个数据，存放顺序为U-P-Q-f-I-S-PF // wk -->
    198             /* WK --> */
    199                U16 C108Data[147]= {0};//21个数据，存放顺序为U-I-P-Q-S-PF-f
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0xF44F 0x7194      MOV      R1,#+296
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    200                
    201                for(int i=0;i<7;i++)
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xE000             B.N      ??GUI_VIEW_ListMeasure_0
   \                     ??GUI_VIEW_ListMeasure_1:
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_ListMeasure_0:
   \   00000014   0x2807             CMP      R0,#+7
   \   00000016   0xF280 0x80BA      BGE.W    ??GUI_VIEW_ListMeasure_2
    202                {
    203                  for(int abc=0;abc<3;abc++)// wk --> 切换ABC
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0xE03E             B.N      ??GUI_VIEW_ListMeasure_3
    204                  {
    205                    C108Data[21*i+7*abc+0]=C108Mode_64;//显示数据的模式
    206                    C108Data[21*i+7*abc+1]=164+abc*152;//左边列数据的X：79,右边X:434  148
    207                    C108Data[21*i+7*abc+2]=135+i*45;//Y坐标43
    208                    C108Data[21*i+7*abc+3]=C108FC_W;
    209                    C108Data[21*i+7*abc+4]=C108BC_Bk;
    210                    if(i<2)
    211                    {
    212                      C108Data[21*i+7*abc+5]=((U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX])<<8)+
    213                                             (U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX+1]);
    214                      C108Data[21*i+7*abc+6]=((U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX+2])<<8)+
    215                                             (U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX+3]);
    216                    }
    217                    else
    218                    {
    219                       C108Data[21*i+7*abc+6]=((U16)(PowRxchar[20*abc+i*4+PQSf_INDEX])<<8)+
    220                                                       (U16)(PowRxchar[20*abc+i*4+PQSf_INDEX+1]);
   \                     ??GUI_VIEW_ListMeasure_4:
   \   0000001E   0x2215             MOVS     R2,#+21
   \   00000020   0x2307             MOVS     R3,#+7
   \   00000022   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000026   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000002A   0xAB00             ADD      R3,SP,#+0
   \   0000002C   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000030   0x2314             MOVS     R3,#+20
   \   00000032   0x0084             LSLS     R4,R0,#+2
   \   00000034   0xFB03 0x4301      MLA      R3,R3,R1,R4
   \   00000038   0x.... 0x....      LDR.W    R4,??DataTable7_2
   \   0000003C   0x191B             ADDS     R3,R3,R4
   \   0000003E   0xF893 0x3758      LDRB     R3,[R3, #+1880]
   \   00000042   0x021B             LSLS     R3,R3,#+8
   \   00000044   0x2414             MOVS     R4,#+20
   \   00000046   0x0085             LSLS     R5,R0,#+2
   \   00000048   0xFB04 0x5401      MLA      R4,R4,R1,R5
   \   0000004C   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   00000050   0x1964             ADDS     R4,R4,R5
   \   00000052   0xF894 0x4759      LDRB     R4,[R4, #+1881]
   \   00000056   0xFA53 0xF384      UXTAB    R3,R3,R4
   \   0000005A   0x8193             STRH     R3,[R2, #+12]
    221                       C108Data[21*i+7*abc+7]=((U16)(PowRxchar[20*abc+i*4+PQSf_INDEX+2])<<8)+
    222                                                       (U16)(PowRxchar[20*abc+i*4+PQSf_INDEX+3]);
   \   0000005C   0x2215             MOVS     R2,#+21
   \   0000005E   0x2307             MOVS     R3,#+7
   \   00000060   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000064   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000068   0xAB00             ADD      R3,SP,#+0
   \   0000006A   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000006E   0x2314             MOVS     R3,#+20
   \   00000070   0x0084             LSLS     R4,R0,#+2
   \   00000072   0xFB03 0x4301      MLA      R3,R3,R1,R4
   \   00000076   0x.... 0x....      LDR.W    R4,??DataTable7_2
   \   0000007A   0x191B             ADDS     R3,R3,R4
   \   0000007C   0xF893 0x375A      LDRB     R3,[R3, #+1882]
   \   00000080   0x021B             LSLS     R3,R3,#+8
   \   00000082   0x2414             MOVS     R4,#+20
   \   00000084   0x0085             LSLS     R5,R0,#+2
   \   00000086   0xFB04 0x5401      MLA      R4,R4,R1,R5
   \   0000008A   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   0000008E   0x1964             ADDS     R4,R4,R5
   \   00000090   0xF894 0x475B      LDRB     R4,[R4, #+1883]
   \   00000094   0xFA53 0xF384      UXTAB    R3,R3,R4
   \   00000098   0x81D3             STRH     R3,[R2, #+14]
    223                    }
   \                     ??GUI_VIEW_ListMeasure_5:
   \   0000009A   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_ListMeasure_3:
   \   0000009C   0x2903             CMP      R1,#+3
   \   0000009E   0xDAB8             BGE.N    ??GUI_VIEW_ListMeasure_1
   \   000000A0   0x2215             MOVS     R2,#+21
   \   000000A2   0x2307             MOVS     R3,#+7
   \   000000A4   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000A8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000AC   0xAB00             ADD      R3,SP,#+0
   \   000000AE   0xF246 0x4404      MOVW     R4,#+25604
   \   000000B2   0xF823 0x4012      STRH     R4,[R3, R2, LSL #+1]
   \   000000B6   0x2215             MOVS     R2,#+21
   \   000000B8   0x2307             MOVS     R3,#+7
   \   000000BA   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000BE   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000C2   0xAB00             ADD      R3,SP,#+0
   \   000000C4   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000000C8   0x2398             MOVS     R3,#+152
   \   000000CA   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000CE   0x33A4             ADDS     R3,R3,#+164
   \   000000D0   0x8053             STRH     R3,[R2, #+2]
   \   000000D2   0x2215             MOVS     R2,#+21
   \   000000D4   0x2307             MOVS     R3,#+7
   \   000000D6   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000DA   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000DE   0xAB00             ADD      R3,SP,#+0
   \   000000E0   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000000E4   0x232D             MOVS     R3,#+45
   \   000000E6   0xFB03 0xF300      MUL      R3,R3,R0
   \   000000EA   0x3387             ADDS     R3,R3,#+135
   \   000000EC   0x8093             STRH     R3,[R2, #+4]
   \   000000EE   0x2215             MOVS     R2,#+21
   \   000000F0   0x2307             MOVS     R3,#+7
   \   000000F2   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000F6   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000FA   0xAB00             ADD      R3,SP,#+0
   \   000000FC   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000100   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000104   0x80D3             STRH     R3,[R2, #+6]
   \   00000106   0x2215             MOVS     R2,#+21
   \   00000108   0x2307             MOVS     R3,#+7
   \   0000010A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000010E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000112   0xAB00             ADD      R3,SP,#+0
   \   00000114   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000118   0x2300             MOVS     R3,#+0
   \   0000011A   0x8113             STRH     R3,[R2, #+8]
   \   0000011C   0x2802             CMP      R0,#+2
   \   0000011E   0xF6BF 0xAF7E      BGE.W    ??GUI_VIEW_ListMeasure_4
   \   00000122   0x2215             MOVS     R2,#+21
   \   00000124   0x2307             MOVS     R3,#+7
   \   00000126   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000012A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000012E   0xAB00             ADD      R3,SP,#+0
   \   00000130   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000134   0x010B             LSLS     R3,R1,#+4
   \   00000136   0xEB13 0x03C0      ADDS     R3,R3,R0, LSL #+3
   \   0000013A   0x.... 0x....      LDR.W    R4,??DataTable7_2
   \   0000013E   0x5D1B             LDRB     R3,[R3, R4]
   \   00000140   0x021B             LSLS     R3,R3,#+8
   \   00000142   0x010C             LSLS     R4,R1,#+4
   \   00000144   0xEB14 0x04C0      ADDS     R4,R4,R0, LSL #+3
   \   00000148   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   0000014C   0x1964             ADDS     R4,R4,R5
   \   0000014E   0x7864             LDRB     R4,[R4, #+1]
   \   00000150   0xFA53 0xF384      UXTAB    R3,R3,R4
   \   00000154   0x8153             STRH     R3,[R2, #+10]
   \   00000156   0x2215             MOVS     R2,#+21
   \   00000158   0x2307             MOVS     R3,#+7
   \   0000015A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000015E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000162   0xAB00             ADD      R3,SP,#+0
   \   00000164   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000168   0x010B             LSLS     R3,R1,#+4
   \   0000016A   0xEB13 0x03C0      ADDS     R3,R3,R0, LSL #+3
   \   0000016E   0x.... 0x....      LDR.W    R4,??DataTable7_2
   \   00000172   0x191B             ADDS     R3,R3,R4
   \   00000174   0x789B             LDRB     R3,[R3, #+2]
   \   00000176   0x021B             LSLS     R3,R3,#+8
   \   00000178   0x010C             LSLS     R4,R1,#+4
   \   0000017A   0xEB14 0x04C0      ADDS     R4,R4,R0, LSL #+3
   \   0000017E   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   00000182   0x1964             ADDS     R4,R4,R5
   \   00000184   0x78E4             LDRB     R4,[R4, #+3]
   \   00000186   0xFA53 0xF384      UXTAB    R3,R3,R4
   \   0000018A   0x8193             STRH     R3,[R2, #+12]
   \   0000018C   0xE785             B.N      ??GUI_VIEW_ListMeasure_5
    224                  }
    225                }
    226                /* WK --> END */
    227          //    for(U8 ui=0; ui<2; ui++) //切换UI
    228          //    {
    229          //        for(U8 lcv_u=0; lcv_u<3; lcv_u++)//切换ABC
    230          //        {
    231          //            C108Data[84*ui+7*lcv_u+0]=C108Mode_64;//显示数据的模式
    232          //            C108Data[84*ui+7*lcv_u+1]=164+lcv_u*152;//左边列数据的X：79,右边X:434  148
    233          //            C108Data[84*ui+7*lcv_u+2]=135+ui*45;//Y坐标43
    234          //            C108Data[84*ui+7*lcv_u+3]=C108FC_W;
    235          //            C108Data[84*ui+7*lcv_u+4]=C108BC_Bk;
    236          //            C108Data[84*ui+7*lcv_u+5]=((U16)(PowRxchar[8*ui+16*lcv_u+UI_VIRTUAL_INDEX])<<8)+(U16)(PowRxchar[8*ui+16*lcv_u+UI_VIRTUAL_INDEX+1]);
    237          //            C108Data[84*ui+7*lcv_u+6]=((U16)(PowRxchar[8*ui+16*lcv_u+UI_VIRTUAL_INDEX+2])<<8)+(U16)(PowRxchar[8*ui+16*lcv_u+UI_VIRTUAL_INDEX+3]);
    238          //        }
    239          //    }
    240          //    for(U8 PQf=0; PQf<3; PQf++)
    241          //    {
    242          //        for(U8 lr=0; lr<2; lr++) //控制左右
    243          //        {
    244          //            if((PQf==2)&&(lr==1))//f项右边无显示
    245          //            {
    246          //                break;
    247          //            }
    248          //            for(U8 cnt=0; cnt<3; cnt++) //控制每一块的3个值
    249          //            {
    250          //                C108Data[21*PQf+84*lr+7*cnt+21]=C108Mode_64;//显示数据的模式
    251          //                C108Data[21*PQf+84*lr+7*cnt+22]=164+lr*355;//左边数据X:79,右X:434
    252          //                C108Data[21*PQf+84*lr+7*cnt+23]=225+cnt*30+PQf*102;//PY坐标145,QY坐标246
    253          //                C108Data[21*PQf+84*lr+7*cnt+24]=C108FC_W;
    254          //                C108Data[21*PQf+84*lr+7*cnt+25]=C108BC_Bk;
    255          //                C108Data[21*PQf+84*lr+7*cnt+26]=((U16)(PowRxchar[4*lr+20*cnt+PQf*8+PQSf_INDEX])<<8)+(U16)(PowRxchar[4*lr+20*cnt+PQf*8+PQSf_INDEX+1]);
    256          //                C108Data[21*PQf+84*lr+7*cnt+27]=((U16)(PowRxchar[4*lr+20*cnt+PQf*8+PQSf_INDEX+2])<<8)+(U16)(PowRxchar[4*lr+20*cnt+PQf*8+PQSf_INDEX+3]);
    257          //            }
    258          //        }
    259          //    }
    260              YADA_C0(DMMPowerInfoAdr,C108Data,84);
   \                     ??GUI_VIEW_ListMeasure_2:
   \   0000018E   0x2254             MOVS     R2,#+84
   \   00000190   0xA900             ADD      R1,SP,#+0
   \   00000192   0xF44F 0x60A0      MOV      R0,#+1280
   \   00000196   0x.... 0x....      BL       YADA_C0
    261              YADA_C108(DMMPowerInfoAdr,12);
   \   0000019A   0x210C             MOVS     R1,#+12
   \   0000019C   0xF44F 0x60A0      MOV      R0,#+1280
   \   000001A0   0x.... 0x....      BL       YADA_C108
    262              delay_ms(5);
   \   000001A4   0x2005             MOVS     R0,#+5
   \   000001A6   0x.... 0x....      BL       delay_ms
    263              YADA_C0(DMMPowerInfoAdr+168,&C108Data[84],63);
   \   000001AA   0x223F             MOVS     R2,#+63
   \   000001AC   0xA92A             ADD      R1,SP,#+168
   \   000001AE   0xF44F 0x60B5      MOV      R0,#+1448
   \   000001B2   0x.... 0x....      BL       YADA_C0
    264              YADA_C108(DMMPowerInfoAdr+168,9);
   \   000001B6   0x2109             MOVS     R1,#+9
   \   000001B8   0xF44F 0x60B5      MOV      R0,#+1448
   \   000001BC   0x.... 0x....      BL       YADA_C108
    265              delay_ms(5);
   \   000001C0   0x2005             MOVS     R0,#+5
   \   000001C2   0x.... 0x....      BL       delay_ms
    266          #endif 
    267          }
   \   000001C6   0xB04B             ADD      SP,SP,#+300
   \   000001C8   0xBD30             POP      {R4,R5,PC}       ;; return
    268          /*******************************************************************************
    269          * 函  数  名      : GUI_VIEW_ListQuality
    270          * 描      述      : C108数据显示页下的数值列表-电能质量数据显示，三相的PST,PlT,
    271                              eu，ei,U_THD,I_THD。
    272          * 输      入      : 无
    273          * 返      回      : 无
    274          *
    275          * 修       改     : WK
    276          * 时       间     : 2013-03-14
    277          * 描       述     : 基于2013-03-08界面 : 修改了 ListQC108 数组存放数据顺序以及 显示的算法
    278                              &&&&&& 显示的电能质量数据还没有赋给数据 &&&&&&&&
    279          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    280          void GUI_VIEW_ListQuality() // wk --> 电能质量参数
    281          {
   \                     GUI_VIEW_ListQuality:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0BF             SUB      SP,SP,#+252
    282          #if 1 //wk -->
    283              U8 temp1;
    284              U16 ListQC108[6*3*7];//24个数据 显示顺序：
    285              for(int num=0;num<6;num++) //数据类型切换 
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0xE076             B.N      ??GUI_VIEW_ListQuality_0
    286                for(int abc=0;abc<3;abc++)//ABC切换
    287                {
    288                  temp1=8*num+16*abc;
   \                     ??GUI_VIEW_ListQuality_1:
   \   00000008   0x010A             LSLS     R2,R1,#+4
   \   0000000A   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
    289                  ListQC108[num*21+abc*7]=C108Mode_64;//显示数据的模式
   \   0000000E   0x2315             MOVS     R3,#+21
   \   00000010   0x2407             MOVS     R4,#+7
   \   00000012   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000016   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   0000001A   0xAC00             ADD      R4,SP,#+0
   \   0000001C   0xF246 0x4504      MOVW     R5,#+25604
   \   00000020   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
    290                  ListQC108[num*21+abc*7+1]=164+abc*152;//显示左边列数据的X坐标75
   \   00000024   0x2315             MOVS     R3,#+21
   \   00000026   0x2407             MOVS     R4,#+7
   \   00000028   0xFB04 0xF401      MUL      R4,R4,R1
   \   0000002C   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   00000030   0xAC00             ADD      R4,SP,#+0
   \   00000032   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   00000036   0x2498             MOVS     R4,#+152
   \   00000038   0xFB04 0xF401      MUL      R4,R4,R1
   \   0000003C   0x34A4             ADDS     R4,R4,#+164
   \   0000003E   0x805C             STRH     R4,[R3, #+2]
    291                  ListQC108[num*21+abc*7+2]=150+num*40;// Y轴坐标
   \   00000040   0x2315             MOVS     R3,#+21
   \   00000042   0x2407             MOVS     R4,#+7
   \   00000044   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000048   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   0000004C   0xAC00             ADD      R4,SP,#+0
   \   0000004E   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   00000052   0x2428             MOVS     R4,#+40
   \   00000054   0xFB04 0xF400      MUL      R4,R4,R0
   \   00000058   0x3496             ADDS     R4,R4,#+150
   \   0000005A   0x809C             STRH     R4,[R3, #+4]
    292                  ListQC108[num*21+abc*7+3]=C108FC_W;
   \   0000005C   0x2315             MOVS     R3,#+21
   \   0000005E   0x2407             MOVS     R4,#+7
   \   00000060   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000064   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   00000068   0xAC00             ADD      R4,SP,#+0
   \   0000006A   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   0000006E   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000072   0x80DC             STRH     R4,[R3, #+6]
    293                  ListQC108[num*21+abc*7+4]=C108BC_Bk;
   \   00000074   0x2315             MOVS     R3,#+21
   \   00000076   0x2407             MOVS     R4,#+7
   \   00000078   0xFB04 0xF401      MUL      R4,R4,R1
   \   0000007C   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   00000080   0xAC00             ADD      R4,SP,#+0
   \   00000082   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   00000086   0x2400             MOVS     R4,#+0
   \   00000088   0x811C             STRH     R4,[R3, #+8]
    294                  /* wk --> 显示的电能质量数据*/
    295                   
    296                  ListQC108[num*21+abc*7+5]=((U16)(PowRxchar[temp1+Pst_INDEX])<<8)+(U16)(PowRxchar[temp1+Pst_INDEX+1]);// -----------------待补充
   \   0000008A   0x2315             MOVS     R3,#+21
   \   0000008C   0x2407             MOVS     R4,#+7
   \   0000008E   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000092   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   00000096   0xAC00             ADD      R4,SP,#+0
   \   00000098   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   0000009C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000009E   0x.... 0x....      LDR.W    R4,??DataTable8
   \   000000A2   0x1914             ADDS     R4,R2,R4
   \   000000A4   0xF894 0x47AC      LDRB     R4,[R4, #+1964]
   \   000000A8   0x0224             LSLS     R4,R4,#+8
   \   000000AA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000AC   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000000B0   0x1955             ADDS     R5,R2,R5
   \   000000B2   0xF895 0x57AD      LDRB     R5,[R5, #+1965]
   \   000000B6   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   000000BA   0x815C             STRH     R4,[R3, #+10]
    297                  ListQC108[num*21+abc*7+6]=((U16)(PowRxchar[temp1+Pst_INDEX+2])<<8)+(U16)(PowRxchar[temp1+Pst_INDEX+3]);// -----------------待补充
   \   000000BC   0x2315             MOVS     R3,#+21
   \   000000BE   0x2407             MOVS     R4,#+7
   \   000000C0   0xFB04 0xF401      MUL      R4,R4,R1
   \   000000C4   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   000000C8   0xAC00             ADD      R4,SP,#+0
   \   000000CA   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   000000CE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D0   0x.... 0x....      LDR.W    R4,??DataTable8
   \   000000D4   0x1914             ADDS     R4,R2,R4
   \   000000D6   0xF894 0x47AE      LDRB     R4,[R4, #+1966]
   \   000000DA   0x0224             LSLS     R4,R4,#+8
   \   000000DC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000DE   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000000E2   0x1952             ADDS     R2,R2,R5
   \   000000E4   0xF892 0x27AF      LDRB     R2,[R2, #+1967]
   \   000000E8   0xFA54 0xF282      UXTAB    R2,R4,R2
   \   000000EC   0x819A             STRH     R2,[R3, #+12]
    298                }
   \   000000EE   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_ListQuality_2:
   \   000000F0   0x2903             CMP      R1,#+3
   \   000000F2   0xDB89             BLT.N    ??GUI_VIEW_ListQuality_1
   \   000000F4   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_ListQuality_0:
   \   000000F6   0x2806             CMP      R0,#+6
   \   000000F8   0xDA01             BGE.N    ??GUI_VIEW_ListQuality_3
   \   000000FA   0x2100             MOVS     R1,#+0
   \   000000FC   0xE7F8             B.N      ??GUI_VIEW_ListQuality_2
    299              
    300              YADA_C0(DMMPowerInfoAdr,ListQC108,9*7);
   \                     ??GUI_VIEW_ListQuality_3:
   \   000000FE   0x223F             MOVS     R2,#+63
   \   00000100   0xA900             ADD      R1,SP,#+0
   \   00000102   0xF44F 0x60A0      MOV      R0,#+1280
   \   00000106   0x.... 0x....      BL       YADA_C0
    301              YADA_C108(DMMPowerInfoAdr,9);
   \   0000010A   0x2109             MOVS     R1,#+9
   \   0000010C   0xF44F 0x60A0      MOV      R0,#+1280
   \   00000110   0x.... 0x....      BL       YADA_C108
    302              delay_ms(5);
   \   00000114   0x2005             MOVS     R0,#+5
   \   00000116   0x.... 0x....      BL       delay_ms
    303              YADA_C0(DMMPowerInfoAdr+168,&ListQC108[9*7],9*7);
   \   0000011A   0x223F             MOVS     R2,#+63
   \   0000011C   0xF10D 0x017E      ADD      R1,SP,#+126
   \   00000120   0xF44F 0x60B5      MOV      R0,#+1448
   \   00000124   0x.... 0x....      BL       YADA_C0
    304              YADA_C108(DMMPowerInfoAdr+168,9);
   \   00000128   0x2109             MOVS     R1,#+9
   \   0000012A   0xF44F 0x60B5      MOV      R0,#+1448
   \   0000012E   0x.... 0x....      BL       YADA_C108
    305              delay_ms(5);
   \   00000132   0x2005             MOVS     R0,#+5
   \   00000134   0x.... 0x....      BL       delay_ms
    306          #endif //wk -->
    307              
    308          #if 0 // OLD
    309              U16 ListQC108[98];//14个数据,按Pst-Plt-e-THDU-THDI的顺序存放
    310              for(U8 lcv_sl=0; lcv_sl<2; lcv_sl++)//先Pst后Plt
    311              {
    312                  for(U8 lcv_slABC=0; lcv_slABC<3; lcv_slABC++)
    313                  {
    314                      ListQC108[21*lcv_sl+7*lcv_slABC+0]=C108Mode_64;//显示数据的模式
    315                      ListQC108[21*lcv_sl+7*lcv_slABC+1]=75;//左边数据X:75
    316                      ListQC108[21*lcv_sl+7*lcv_slABC+2]=44+lcv_slABC*30+lcv_sl*101;//UY坐标43，IY坐标145
    317                      ListQC108[21*lcv_sl+7*lcv_slABC+3]=C108FC_W;
    318                      ListQC108[21*lcv_sl+7*lcv_slABC+4]=C108BC_Bk;
    319                      ListQC108[21*lcv_sl+7*lcv_slABC+5]=((U16)(PowRxchar[12*lcv_sl+4*lcv_slABC+Pst_INDEX])<<8)+(U16)(PowRxchar[12*lcv_sl+4*lcv_slABC+Pst_INDEX+1]);
    320                      ListQC108[21*lcv_sl+7*lcv_slABC+6]=((U16)(PowRxchar[12*lcv_sl+4*lcv_slABC+Pst_INDEX+2])<<8)+(U16)(PowRxchar[12*lcv_sl+4*lcv_slABC+Pst_INDEX+3]);
    321                  }
    322              }
    323              for(U8 lcv_ubla=0; lcv_ubla<2; lcv_ubla++) //三相不平衡因子
    324              {
    325                  ListQC108[7*lcv_ubla+42]=C108Mode_64;//显示数据的模式
    326                  ListQC108[7*lcv_ubla+43]=75;//显示左边列数据的X坐标75
    327                  ListQC108[7*lcv_ubla+44]=247+lcv_ubla*30;//247
    328                  ListQC108[7*lcv_ubla+45]=C108FC_W;
    329                  ListQC108[7*lcv_ubla+46]=C108BC_Bk;
    330                  ListQC108[7*lcv_ubla+47]=((U16)(PowRxchar[76*lcv_ubla+UNBALANCED_INDEX])<<8)+(U16)(PowRxchar[76*lcv_ubla+UNBALANCED_INDEX+1]);
    331                  ListQC108[7*lcv_ubla+48]=((U16)(PowRxchar[76*lcv_ubla+UNBALANCED_INDEX+2])<<8)+(U16)(PowRxchar[76*lcv_ubla+UNBALANCED_INDEX+3]);
    332              }
    333              for(U8 ui=0; ui<2; ui++)//先THD-U,后THD-I
    334              {
    335                  for(U8 lcv_THD=0; lcv_THD<3; lcv_THD++)
    336                  {
    337                      ListQC108[21*ui+7*lcv_THD+56]=C108Mode_64;//显示数据的模式
    338                      ListQC108[21*ui+7*lcv_THD+57]=430;//显示右边列数据的X坐标430
    339                      ListQC108[21*ui+7*lcv_THD+58]=46+lcv_THD*30+ui*100;//UY坐标44，IY坐标146
    340                      ListQC108[21*ui+7*lcv_THD+59]=C108FC_W;
    341                      ListQC108[21*ui+7*lcv_THD+60]=C108BC_Bk;
    342                      ListQC108[21*ui+7*lcv_THD+61]=((U16)(PowRxchar[16*lcv_THD+8*ui+UI_VIRTUAL_INDEX+4])<<8)+(U16)(PowRxchar[16*lcv_THD+8*ui+UI_VIRTUAL_INDEX+5]);
    343                      ListQC108[21*ui+7*lcv_THD+62]=((U16)(PowRxchar[16*lcv_THD+8*ui+UI_VIRTUAL_INDEX+6])<<8)+(U16)(PowRxchar[16*lcv_THD+8*ui+UI_VIRTUAL_INDEX+7]);
    344                  }
    345              }
    346              delay_ms(5);
    347              YADA_C0(ListQualityInfoAdr,ListQC108,98);
    348              YADA_C108(ListQualityInfoAdr,14);
    349              delay_ms(5);
    350          #endif  //OLD
    351          }
   \   00000138   0xB03F             ADD      SP,SP,#+252
   \   0000013A   0xBD30             POP      {R4,R5,PC}       ;; return
    352          
    353          
    354          /*******************************************************************************
    355          * 函  数  名      : GUI_VIEW_ListQuality2
    356          * 描      述      : 三相不平衡所有显示函数
    357          * 输      入      : 无
    358          * 返      回      : 无
    359          *
    360          * 修       改     : WK
    361          * 时       间     : 2013-03-14
    362          * 描       述     : 基于2013-03-08界面 : 修改了 C108Data 数组存放数据顺序以及 显示的算法
    363          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    364          void GUI_VIEW_ListQuality2(U8 U_DISK)
    365          {
   \                     GUI_VIEW_ListQuality2:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB0A4             SUB      SP,SP,#+144
    366          #if 1 // wk --> 
    367            U16 BlockC108[5*2*7]={0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x218C             MOVS     R1,#+140
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    368            for(int num=0;num<5;num++)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0xE058             B.N      ??GUI_VIEW_ListQuality2_0
    369              for(int ui=0;ui<2;ui++)
    370              {
    371                BlockC108[num*14+ui*7]=0x3404;
   \                     ??GUI_VIEW_ListQuality2_1:
   \   00000010   0x220E             MOVS     R2,#+14
   \   00000012   0x2307             MOVS     R3,#+7
   \   00000014   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000018   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000001C   0xAB00             ADD      R3,SP,#+0
   \   0000001E   0xF243 0x4404      MOVW     R4,#+13316
   \   00000022   0xF823 0x4012      STRH     R4,[R3, R2, LSL #+1]
    372                BlockC108[num*14+ui*7+1]= 270+ui*210;
   \   00000026   0x220E             MOVS     R2,#+14
   \   00000028   0x2307             MOVS     R3,#+7
   \   0000002A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000002E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000032   0xAB00             ADD      R3,SP,#+0
   \   00000034   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000038   0x23D2             MOVS     R3,#+210
   \   0000003A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000003E   0xF513 0x7387      ADDS     R3,R3,#+270
   \   00000042   0x8053             STRH     R3,[R2, #+2]
    373                BlockC108[num*14+ui*7+2]= 160+num*45;
   \   00000044   0x220E             MOVS     R2,#+14
   \   00000046   0x2307             MOVS     R3,#+7
   \   00000048   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000004C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000050   0xAB00             ADD      R3,SP,#+0
   \   00000052   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000056   0x232D             MOVS     R3,#+45
   \   00000058   0xFB03 0xF300      MUL      R3,R3,R0
   \   0000005C   0x33A0             ADDS     R3,R3,#+160
   \   0000005E   0x8093             STRH     R3,[R2, #+4]
    374                
    375                BlockC108[num*14+ui*7+3]=C108FC_W;
   \   00000060   0x220E             MOVS     R2,#+14
   \   00000062   0x2307             MOVS     R3,#+7
   \   00000064   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000068   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000006C   0xAB00             ADD      R3,SP,#+0
   \   0000006E   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000072   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000076   0x80D3             STRH     R3,[R2, #+6]
    376                BlockC108[num*14+ui*7+4]=C108BC_Bk;
   \   00000078   0x220E             MOVS     R2,#+14
   \   0000007A   0x2307             MOVS     R3,#+7
   \   0000007C   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000080   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000084   0xAB00             ADD      R3,SP,#+0
   \   00000086   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000008A   0x2300             MOVS     R3,#+0
   \   0000008C   0x8113             STRH     R3,[R2, #+8]
    377                /* wk --> 显示的电能质量数据 */
    378                BlockC108[num*14+ui*7+5]=0;  // ----------------待补充
   \   0000008E   0x220E             MOVS     R2,#+14
   \   00000090   0x2307             MOVS     R3,#+7
   \   00000092   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000096   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000009A   0xAB00             ADD      R3,SP,#+0
   \   0000009C   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000000A0   0x2300             MOVS     R3,#+0
   \   000000A2   0x8153             STRH     R3,[R2, #+10]
    379                BlockC108[num*14+ui*7+6]=0;  // ----------------待补充
   \   000000A4   0x220E             MOVS     R2,#+14
   \   000000A6   0x2307             MOVS     R3,#+7
   \   000000A8   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000AC   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000B0   0xAB00             ADD      R3,SP,#+0
   \   000000B2   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000000B6   0x2300             MOVS     R3,#+0
   \   000000B8   0x8193             STRH     R3,[R2, #+12]
    380              }
   \   000000BA   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_ListQuality2_2:
   \   000000BC   0x2902             CMP      R1,#+2
   \   000000BE   0xDBA7             BLT.N    ??GUI_VIEW_ListQuality2_1
   \   000000C0   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_ListQuality2_0:
   \   000000C2   0x2805             CMP      R0,#+5
   \   000000C4   0xDA01             BGE.N    ??GUI_VIEW_ListQuality2_3
   \   000000C6   0x2100             MOVS     R1,#+0
   \   000000C8   0xE7F8             B.N      ??GUI_VIEW_ListQuality2_2
    381            YADA_C0(ListUnblanceAdr, BlockC108,10*7);
   \                     ??GUI_VIEW_ListQuality2_3:
   \   000000CA   0x2246             MOVS     R2,#+70
   \   000000CC   0xA900             ADD      R1,SP,#+0
   \   000000CE   0xF44F 0x4000      MOV      R0,#+32768
   \   000000D2   0x.... 0x....      BL       YADA_C0
    382            YADA_C108(ListUnblanceAdr,10);
   \   000000D6   0x210A             MOVS     R1,#+10
   \   000000D8   0xF44F 0x4000      MOV      R0,#+32768
   \   000000DC   0x.... 0x....      BL       YADA_C108
    383          #endif // wk --> end
    384          #if 0 //old
    385            U8 pBuf1[64]={0},i,j,k,index=0;
    386            U16 BlockC108[126]={0},U_CAP=0,S_DAY=0,temp=0;
    387          #if 0  // wk --> U 盘操作相关 --> 待修改
    388            if(U_DISK==1)
    389            {
    390                CH376ReadBlock( pBuf1 );  /* 如果需要,可以读取数据块CH376_CMD_DATA.DiskMountInq,返回长度 */
    391               CH376DiskQuery((PU32)pBuf1);
    392               U_CAP=(U16)(*(PU32)pBuf1 / ( 1000000 / DEF_SECTOR_SIZE ) );
    393               S_DAY=(U16)(U_CAP/120);
    394            }
    395          #endif
    396            for(j=0;j<2;j++)
    397              for(i=0;i<3;i++)
    398                for(k=0;k<3;k++)
    399          	{
    400                    temp=UNBALANCED_INDEX+k+3*i+2*j;
    401                    index=7*k+21*i+63*j;
    402          	  BlockC108[index+1]=140+j*313;//X +80*j
    403          	  BlockC108[index+2]=46+30*k+i*125;//Y坐标
    404          	  BlockC108[index+3]=0xffff;
    405          	  BlockC108[index+4]=0x0000;
    406                    if(k==2&&i==2)
    407                    {
    408                     BlockC108[index]=0x6004;//显示数据的模式
    409                     BlockC108[index+5]=0;
    410                     if(j==0)
    411                       BlockC108[index+6]=U_CAP;
    412                     else
    413                       BlockC108[index+6]=S_DAY;
    414                    }
    415                    else
    416                    {
    417                      BlockC108[index]=0x3404;//显示数据的模式
    418                      BlockC108[index+5]=((U16)(PowRxchar[temp])<<8)+((U16)PowRxchar[temp+1]);
    419          	    BlockC108[index+6]=((U16)(PowRxchar[temp+2])<<8)+((U16)PowRxchar[temp+3]);
    420                    }
    421          	  
    422                  }
    423            YADA_C0(ListUnblanceAdr, BlockC108,63);
    424            YADA_C108(ListUnblanceAdr,9);
    425            YADA_C0(ListUnblanceAdr+63, &BlockC108[63], 63);
    426            YADA_C108(ListUnblanceAdr+63,9); 
    427          #endif // old
    428          }
   \   000000E0   0xB024             ADD      SP,SP,#+144
   \   000000E2   0xBD10             POP      {R4,PC}          ;; return
    429          
    430          /*******************************************************************************
    431          * 函  数  名      : GUI_VIEW_ListQuality
    432          * 描      述      : 谐波柱状图显示函数。可通过移位键选择三相或者谐波总次数，
    433                              上下键来选择各单一次数，并显示其电流电压值
    434          * 输      入      : 无
    435          * 返      回      : 无
    436          *
    437          * 修       改     : WK
    438          * 时       间     : 2013-03-14
    439          * 描       述     : 基于2013-03-08界面 
    440          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    441          void GUI_VIEW_HarmoGraph() 
    442          {
   \                     GUI_VIEW_HarmoGraph:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xF5AD 0x7D34      SUB      SP,SP,#+720
    443          #if 1
    444              float Graphfloat[52]= {0};
   \   00000006   0xA880             ADD      R0,SP,#+512
   \   00000008   0x21D0             MOVS     R1,#+208
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    445              U16 UHarmoBarXY[104]= {0};//26次谐波，共26*4个点
   \   0000000E   0xA84C             ADD      R0,SP,#+304
   \   00000010   0x21D0             MOVS     R1,#+208
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
    446              U16 IHarmoBarXY[104]= {0}; 
   \   00000016   0xA818             ADD      R0,SP,#+96
   \   00000018   0x21D0             MOVS     R1,#+208
   \   0000001A   0x.... 0x....      BL       __aeabi_memclr4
    447              U8 HarmoInfoZone[][10]= {"第01-26次","第25-50次"};//WK -->
   \   0000001E   0xA813             ADD      R0,SP,#+76
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
    448          //    U16 square[16]= {14,42,16,65,91,42,93,65,414,79,416,102,414,264,416,287}; //光标位置
    449              
    450              U16 HarmoUI[28]= {0x2004,310,78,0xffff,0x0000,0x0000,HarmoGraphUorder,  //0x03ae 表主体背景色
    451                                0x2004,310,265,0xffff,0x0000,0x0000,HarmoGraphIorder,
    452                                0x3304,0x01FC,0x004E,0xffff,0x0000,0x0000,0x0000,
    453                                0x3304,0x0200,0x0108,0xffff,0x0000
    454                               };//根据放大倍数控制格式
   \   0000002A   0xA805             ADD      R0,SP,#+20
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000030   0x2238             MOVS     R2,#+56
   \   00000032   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF8AD 0x0020      STRH     R0,[SP, #+32]
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0xF8AD 0x002E      STRH     R0,[SP, #+46]
    455              /* wk --> 影响返回主界面，原因待进一步分析中。。。--> 已解决 */
    456          #define wk_tst 1
    457          #if wk_tst
    458              HarmoUI[19]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-604+Harmo_INDEX])<<8)
    459                          +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-603+Harmo_INDEX]);
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF44F 0x7116      MOV      R1,#+600
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable8_3
   \   00000058   0x7812             LDRB     R2,[R2, #+0]
   \   0000005A   0x0092             LSLS     R2,R2,#+2
   \   0000005C   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000064   0x1840             ADDS     R0,R0,R1
   \   00000066   0xF5B0 0x7003      SUBS     R0,R0,#+524
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x0200             LSLS     R0,R0,#+8
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   00000072   0x7809             LDRB     R1,[R1, #+0]
   \   00000074   0xF44F 0x7216      MOV      R2,#+600
   \   00000078   0x.... 0x....      LDR.W    R3,??DataTable8_3
   \   0000007C   0x781B             LDRB     R3,[R3, #+0]
   \   0000007E   0x009B             LSLS     R3,R3,#+2
   \   00000080   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   00000088   0x1889             ADDS     R1,R1,R2
   \   0000008A   0xF2A1 0x210B      SUBW     R1,R1,#+523
   \   0000008E   0x7809             LDRB     R1,[R1, #+0]
   \   00000090   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000094   0xF8AD 0x003A      STRH     R0,[SP, #+58]
    460              HarmoUI[20]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-602+Harmo_INDEX])<<8)
    461                          +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-601+Harmo_INDEX]);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0xF44F 0x7116      MOV      R1,#+600
   \   000000A2   0x.... 0x....      LDR.W    R2,??DataTable8_3
   \   000000A6   0x7812             LDRB     R2,[R2, #+0]
   \   000000A8   0x0092             LSLS     R2,R2,#+2
   \   000000AA   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000B2   0x1840             ADDS     R0,R0,R1
   \   000000B4   0xF2A0 0x200A      SUBW     R0,R0,#+522
   \   000000B8   0x7800             LDRB     R0,[R0, #+0]
   \   000000BA   0x0200             LSLS     R0,R0,#+8
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   000000C0   0x7809             LDRB     R1,[R1, #+0]
   \   000000C2   0xF44F 0x7216      MOV      R2,#+600
   \   000000C6   0x.... 0x....      LDR.W    R3,??DataTable8_3
   \   000000CA   0x781B             LDRB     R3,[R3, #+0]
   \   000000CC   0x009B             LSLS     R3,R3,#+2
   \   000000CE   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   000000D2   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   000000D6   0x1889             ADDS     R1,R1,R2
   \   000000D8   0xF2A1 0x2109      SUBW     R1,R1,#+521
   \   000000DC   0x7809             LDRB     R1,[R1, #+0]
   \   000000DE   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000000E2   0xF8AD 0x003C      STRH     R0,[SP, #+60]
    462              HarmoUI[26]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-404+Harmo_INDEX])<<8)
    463                          +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-403+Harmo_INDEX]);
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0xF44F 0x7116      MOV      R1,#+600
   \   000000F0   0x.... 0x....      LDR.W    R2,??DataTable8_4
   \   000000F4   0x7812             LDRB     R2,[R2, #+0]
   \   000000F6   0x0092             LSLS     R2,R2,#+2
   \   000000F8   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000100   0x1840             ADDS     R0,R0,R1
   \   00000102   0xF5B0 0x70A2      SUBS     R0,R0,#+324
   \   00000106   0x7800             LDRB     R0,[R0, #+0]
   \   00000108   0x0200             LSLS     R0,R0,#+8
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000010E   0x7809             LDRB     R1,[R1, #+0]
   \   00000110   0xF44F 0x7216      MOV      R2,#+600
   \   00000114   0x.... 0x....      LDR.W    R3,??DataTable8_4
   \   00000118   0x781B             LDRB     R3,[R3, #+0]
   \   0000011A   0x009B             LSLS     R3,R3,#+2
   \   0000011C   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   00000120   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   00000124   0x1889             ADDS     R1,R1,R2
   \   00000126   0xF2A1 0x1143      SUBW     R1,R1,#+323
   \   0000012A   0x7809             LDRB     R1,[R1, #+0]
   \   0000012C   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000130   0xF8AD 0x0048      STRH     R0,[SP, #+72]
    464              HarmoUI[27]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-402+Harmo_INDEX])<<8)
    465                          +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-401+Harmo_INDEX]);
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000138   0x7800             LDRB     R0,[R0, #+0]
   \   0000013A   0xF44F 0x7116      MOV      R1,#+600
   \   0000013E   0x.... 0x....      LDR.W    R2,??DataTable8_4
   \   00000142   0x7812             LDRB     R2,[R2, #+0]
   \   00000144   0x0092             LSLS     R2,R2,#+2
   \   00000146   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000014E   0x1840             ADDS     R0,R0,R1
   \   00000150   0xF5B0 0x70A1      SUBS     R0,R0,#+322
   \   00000154   0x7800             LDRB     R0,[R0, #+0]
   \   00000156   0x0200             LSLS     R0,R0,#+8
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000015C   0x7809             LDRB     R1,[R1, #+0]
   \   0000015E   0xF44F 0x7216      MOV      R2,#+600
   \   00000162   0x.... 0x....      LDR.W    R3,??DataTable8_4
   \   00000166   0x781B             LDRB     R3,[R3, #+0]
   \   00000168   0x009B             LSLS     R3,R3,#+2
   \   0000016A   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   0000016E   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   00000172   0x1889             ADDS     R1,R1,R2
   \   00000174   0xF2A1 0x1141      SUBW     R1,R1,#+321
   \   00000178   0x7809             LDRB     R1,[R1, #+0]
   \   0000017A   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   0000017E   0xF8AD 0x004A      STRH     R0,[SP, #+74]
    466              
    467              ChartoFloat(&PowRxchar[600*(HarmoGraphPhase-1)+(HarmoGraphRange-1)*96+Harmo_INDEX], Graphfloat,26,1000);//转换电压数据，！放大倍数
   \   00000182   0xF44F 0x737A      MOV      R3,#+1000
   \   00000186   0x221A             MOVS     R2,#+26
   \   00000188   0xA980             ADD      R1,SP,#+512
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   0000018E   0x7800             LDRB     R0,[R0, #+0]
   \   00000190   0xF44F 0x7416      MOV      R4,#+600
   \   00000194   0x.... 0x....      LDR.W    R5,??DataTable8_6
   \   00000198   0x782D             LDRB     R5,[R5, #+0]
   \   0000019A   0x2660             MOVS     R6,#+96
   \   0000019C   0x4375             MULS     R5,R6,R5
   \   0000019E   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   000001A2   0x.... 0x....      LDR.W    R4,??DataTable7_2
   \   000001A6   0x1900             ADDS     R0,R0,R4
   \   000001A8   0xF5B0 0x701A      SUBS     R0,R0,#+616
   \   000001AC   0x.... 0x....      BL       ChartoFloat
    468              ChartoFloat(&PowRxchar[600*(HarmoGraphPhase-1)+(HarmoGraphRange-1)*96+Harmo_INDEX+200], &Graphfloat[26],26,1000);//转换电流数据
   \   000001B0   0xF44F 0x737A      MOV      R3,#+1000
   \   000001B4   0x221A             MOVS     R2,#+26
   \   000001B6   0xA99A             ADD      R1,SP,#+616
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   000001BC   0x7800             LDRB     R0,[R0, #+0]
   \   000001BE   0xF44F 0x7416      MOV      R4,#+600
   \   000001C2   0x.... 0x....      LDR.W    R5,??DataTable8_6
   \   000001C6   0x782D             LDRB     R5,[R5, #+0]
   \   000001C8   0x2660             MOVS     R6,#+96
   \   000001CA   0x4375             MULS     R5,R6,R5
   \   000001CC   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   000001D0   0x.... 0x....      LDR.W    R4,??DataTable7_2
   \   000001D4   0x1900             ADDS     R0,R0,R4
   \   000001D6   0xF5B0 0x70D0      SUBS     R0,R0,#+416
   \   000001DA   0x.... 0x....      BL       ChartoFloat
    469          #endif  // wk_tst
    470              /* wk --> end */
    471              //电压范围0~300,分三级显示0~3.0,3.0~300
    472              //循环构建柱状图的数组，每一个数据转换成矩形的（Xe，Ye）（Xs，Ys）
    473              for (U16 lcv_uho=0; lcv_uho < 26; lcv_uho++)
   \   000001DE   0x2400             MOVS     R4,#+0
   \   000001E0   0xE03A             B.N      ??GUI_VIEW_HarmoGraph_0
    474              {
    475                  UHarmoBarXY[4*lcv_uho]=91+20*lcv_uho;//Xe
    476                  if (Graphfloat[lcv_uho] <= 3 )//幅值小于2.4V
    477                  {
    478                      UHarmoBarXY[4*lcv_uho+1]=(U16)(248.0-Graphfloat[lcv_uho] *14.667);
    479                  }
    480                  else if(Graphfloat[lcv_uho]  > 3 && Graphfloat[lcv_uho] < 30)
    481                  {
    482                      UHarmoBarXY[4*lcv_uho+1]=(U16)(204.0-(Graphfloat[lcv_uho] -3.0)*1.63);
    483                  }
    484                  else if (Graphfloat[lcv_uho] >= 30)
   \                     ??GUI_VIEW_HarmoGraph_1:
   \   000001E2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001E4   0xA880             ADD      R0,SP,#+512
   \   000001E6   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable8_7  ;; 0x41f00000
   \   000001EE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001F2   0xD81E             BHI.N    ??GUI_VIEW_HarmoGraph_2
    485                  {
    486                      UHarmoBarXY[4*lcv_uho+1]=(U16)(160.0-(Graphfloat[lcv_uho] -30)*0.163);
   \   000001F4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001F6   0x00A0             LSLS     R0,R4,#+2
   \   000001F8   0xA94C             ADD      R1,SP,#+304
   \   000001FA   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   000001FE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000200   0xA880             ADD      R0,SP,#+512
   \   00000202   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0xc1f00000
   \   0000020A   0x.... 0x....      BL       __aeabi_fadd
   \   0000020E   0x.... 0x....      BL       __aeabi_f2d
   \   00000212   0x.... 0x....      LDR.W    R2,??DataTable8_9  ;; 0x1a9fbe77
   \   00000216   0x.... 0x....      LDR.W    R3,??DataTable8_10  ;; 0x3fc4dd2f
   \   0000021A   0x.... 0x....      BL       __aeabi_dmul
   \   0000021E   0x0002             MOVS     R2,R0
   \   00000220   0x000B             MOVS     R3,R1
   \   00000222   0x2000             MOVS     R0,#+0
   \   00000224   0x.... 0x....      LDR.W    R1,??DataTable8_11  ;; 0x40640000
   \   00000228   0x.... 0x....      BL       __aeabi_dsub
   \   0000022C   0x.... 0x....      BL       __aeabi_d2iz
   \   00000230   0x8068             STRH     R0,[R5, #+2]
    487                  }
    488                  UHarmoBarXY[4*lcv_uho+2]=104+20*lcv_uho;//Xs
   \                     ??GUI_VIEW_HarmoGraph_2:
   \   00000232   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000234   0x00A0             LSLS     R0,R4,#+2
   \   00000236   0xA94C             ADD      R1,SP,#+304
   \   00000238   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000023C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000023E   0x2114             MOVS     R1,#+20
   \   00000240   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000244   0x3168             ADDS     R1,R1,#+104
   \   00000246   0x8081             STRH     R1,[R0, #+4]
    489                  UHarmoBarXY[4*lcv_uho+3]=248;//Ys
   \   00000248   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000024A   0x00A0             LSLS     R0,R4,#+2
   \   0000024C   0xA94C             ADD      R1,SP,#+304
   \   0000024E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000252   0x21F8             MOVS     R1,#+248
   \   00000254   0x80C1             STRH     R1,[R0, #+6]
   \   00000256   0x1C64             ADDS     R4,R4,#+1
   \                     ??GUI_VIEW_HarmoGraph_0:
   \   00000258   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000025A   0x2C1A             CMP      R4,#+26
   \   0000025C   0xD261             BCS.N    ??GUI_VIEW_HarmoGraph_3
   \   0000025E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000260   0xA84C             ADD      R0,SP,#+304
   \   00000262   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000264   0x2114             MOVS     R1,#+20
   \   00000266   0xFB01 0xF104      MUL      R1,R1,R4
   \   0000026A   0x315B             ADDS     R1,R1,#+91
   \   0000026C   0xF820 0x1034      STRH     R1,[R0, R4, LSL #+3]
   \   00000270   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000272   0xA880             ADD      R0,SP,#+512
   \   00000274   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000278   0x.... 0x....      LDR.W    R1,??DataTable8_12  ;; 0x40400001
   \   0000027C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000280   0xD21B             BCS.N    ??GUI_VIEW_HarmoGraph_4
   \   00000282   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000284   0x00A0             LSLS     R0,R4,#+2
   \   00000286   0xA94C             ADD      R1,SP,#+304
   \   00000288   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   0000028C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000028E   0xA880             ADD      R0,SP,#+512
   \   00000290   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000294   0x.... 0x....      BL       __aeabi_f2d
   \   00000298   0x.... 0x....      LDR.W    R2,??DataTable8_13  ;; 0x624dd2f
   \   0000029C   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x402d5581
   \   000002A0   0x.... 0x....      BL       __aeabi_dmul
   \   000002A4   0x0002             MOVS     R2,R0
   \   000002A6   0x000B             MOVS     R3,R1
   \   000002A8   0x2000             MOVS     R0,#+0
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable8_15  ;; 0x406f0000
   \   000002AE   0x.... 0x....      BL       __aeabi_dsub
   \   000002B2   0x.... 0x....      BL       __aeabi_d2iz
   \   000002B6   0x8068             STRH     R0,[R5, #+2]
   \   000002B8   0xE7BB             B.N      ??GUI_VIEW_HarmoGraph_2
   \                     ??GUI_VIEW_HarmoGraph_4:
   \   000002BA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002BC   0xA880             ADD      R0,SP,#+512
   \   000002BE   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable8_12  ;; 0x40400001
   \   000002C6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000002CA   0xD88A             BHI.N    ??GUI_VIEW_HarmoGraph_1
   \   000002CC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002CE   0xA880             ADD      R0,SP,#+512
   \   000002D0   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000002D4   0x.... 0x....      LDR.W    R1,??DataTable8_7  ;; 0x41f00000
   \   000002D8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002DC   0xF4BF 0xAF81      BCS.W    ??GUI_VIEW_HarmoGraph_1
   \   000002E0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002E2   0x00A0             LSLS     R0,R4,#+2
   \   000002E4   0xA94C             ADD      R1,SP,#+304
   \   000002E6   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   000002EA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002EC   0xA880             ADD      R0,SP,#+512
   \   000002EE   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000002F2   0x.... 0x....      BL       __aeabi_f2d
   \   000002F6   0x2200             MOVS     R2,#+0
   \   000002F8   0x.... 0x....      LDR.W    R3,??DataTable8_16  ;; 0xc0080000
   \   000002FC   0x.... 0x....      BL       __aeabi_dadd
   \   00000300   0x.... 0x....      LDR.W    R2,??DataTable8_17  ;; 0xe147ae14
   \   00000304   0x.... 0x....      LDR.W    R3,??DataTable8_18  ;; 0x3ffa147a
   \   00000308   0x.... 0x....      BL       __aeabi_dmul
   \   0000030C   0x0002             MOVS     R2,R0
   \   0000030E   0x000B             MOVS     R3,R1
   \   00000310   0x2000             MOVS     R0,#+0
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable8_19  ;; 0x40698000
   \   00000316   0x.... 0x....      BL       __aeabi_dsub
   \   0000031A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000031E   0x8068             STRH     R0,[R5, #+2]
   \   00000320   0xE787             B.N      ??GUI_VIEW_HarmoGraph_2
    490              }
    491              //电流范围0~20A，分3级，0~0.2A，0.2~2A，2~20A
    492              for ( U16 lcv_iho=0; lcv_iho <26; lcv_iho++)
   \                     ??GUI_VIEW_HarmoGraph_3:
   \   00000322   0x2400             MOVS     R4,#+0
   \   00000324   0xE03D             B.N      ??GUI_VIEW_HarmoGraph_5
    493              {
    494                  IHarmoBarXY[4*lcv_iho]=91+20*lcv_iho;//Xe
    495                  if (Graphfloat[lcv_iho+26]  <= 0.2 )//幅值小于0.2A
    496                  {
    497                      IHarmoBarXY[4*lcv_iho+1]=(U16)(434-Graphfloat[lcv_iho+26] *220);
    498                  }
    499                  else if (Graphfloat[lcv_iho+26] > 0.2 && Graphfloat[lcv_iho+26] < 2)
    500                  {
    501                      IHarmoBarXY[4*lcv_iho+1]=(U16)(390-(Graphfloat[lcv_iho+26] -0.2)*24.444);
    502                  }
    503                  else if (Graphfloat[lcv_iho+26] >= 2)
   \                     ??GUI_VIEW_HarmoGraph_6:
   \   00000326   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000328   0xA880             ADD      R0,SP,#+512
   \   0000032A   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   0000032E   0x6E80             LDR      R0,[R0, #+104]
   \   00000330   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000334   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000338   0xD81F             BHI.N    ??GUI_VIEW_HarmoGraph_7
    504                  {
    505                      IHarmoBarXY[4*lcv_iho+1]=(U16)(346-(Graphfloat[lcv_iho+26] -2)*2.444);
   \   0000033A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000033C   0x00A0             LSLS     R0,R4,#+2
   \   0000033E   0xA918             ADD      R1,SP,#+96
   \   00000340   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   00000344   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000346   0xA880             ADD      R0,SP,#+512
   \   00000348   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   0000034C   0x6E80             LDR      R0,[R0, #+104]
   \   0000034E   0xF05F 0x4140      MOVS     R1,#-1073741824
   \   00000352   0x.... 0x....      BL       __aeabi_fadd
   \   00000356   0x.... 0x....      BL       __aeabi_f2d
   \   0000035A   0x.... 0x....      LDR.W    R2,??DataTable8_20  ;; 0xdf3b645a
   \   0000035E   0x.... 0x....      LDR.W    R3,??DataTable8_21  ;; 0x40038d4f
   \   00000362   0x.... 0x....      BL       __aeabi_dmul
   \   00000366   0x0002             MOVS     R2,R0
   \   00000368   0x000B             MOVS     R3,R1
   \   0000036A   0x2000             MOVS     R0,#+0
   \   0000036C   0x.... 0x....      LDR.W    R1,??DataTable8_22  ;; 0x4075a000
   \   00000370   0x.... 0x....      BL       __aeabi_dsub
   \   00000374   0x.... 0x....      BL       __aeabi_d2iz
   \   00000378   0x8068             STRH     R0,[R5, #+2]
    506                  }
    507                  IHarmoBarXY[4*lcv_iho+2]=104+20*lcv_iho;
   \                     ??GUI_VIEW_HarmoGraph_7:
   \   0000037A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000037C   0x00A0             LSLS     R0,R4,#+2
   \   0000037E   0xA918             ADD      R1,SP,#+96
   \   00000380   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000384   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000386   0x2114             MOVS     R1,#+20
   \   00000388   0xFB01 0xF104      MUL      R1,R1,R4
   \   0000038C   0x3168             ADDS     R1,R1,#+104
   \   0000038E   0x8081             STRH     R1,[R0, #+4]
    508                  IHarmoBarXY[4*lcv_iho+3]=434;
   \   00000390   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000392   0x00A0             LSLS     R0,R4,#+2
   \   00000394   0xA918             ADD      R1,SP,#+96
   \   00000396   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000039A   0xF44F 0x71D9      MOV      R1,#+434
   \   0000039E   0x80C1             STRH     R1,[R0, #+6]
   \   000003A0   0x1C64             ADDS     R4,R4,#+1
   \                     ??GUI_VIEW_HarmoGraph_5:
   \   000003A2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003A4   0x2C1A             CMP      R4,#+26
   \   000003A6   0xD261             BCS.N    ??GUI_VIEW_HarmoGraph_8
   \   000003A8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003AA   0xA818             ADD      R0,SP,#+96
   \   000003AC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003AE   0x2114             MOVS     R1,#+20
   \   000003B0   0xFB01 0xF104      MUL      R1,R1,R4
   \   000003B4   0x315B             ADDS     R1,R1,#+91
   \   000003B6   0xF820 0x1034      STRH     R1,[R0, R4, LSL #+3]
   \   000003BA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003BC   0xA880             ADD      R0,SP,#+512
   \   000003BE   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000003C2   0x6E80             LDR      R0,[R0, #+104]
   \   000003C4   0x.... 0x....      LDR.W    R1,??DataTable8_23  ;; 0x3e4ccccd
   \   000003C8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003CC   0xD216             BCS.N    ??GUI_VIEW_HarmoGraph_9
   \   000003CE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003D0   0x00A0             LSLS     R0,R4,#+2
   \   000003D2   0xA918             ADD      R1,SP,#+96
   \   000003D4   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   000003D8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003DA   0xA880             ADD      R0,SP,#+512
   \   000003DC   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000003E0   0x6E80             LDR      R0,[R0, #+104]
   \   000003E2   0x.... 0x....      LDR.W    R1,??DataTable8_24  ;; 0x435c0000
   \   000003E6   0x.... 0x....      BL       __aeabi_fmul
   \   000003EA   0x0001             MOVS     R1,R0
   \   000003EC   0x.... 0x....      LDR.W    R0,??DataTable8_25  ;; 0x43d90000
   \   000003F0   0x.... 0x....      BL       __aeabi_fsub
   \   000003F4   0x.... 0x....      BL       __aeabi_f2iz
   \   000003F8   0x8068             STRH     R0,[R5, #+2]
   \   000003FA   0xE7BE             B.N      ??GUI_VIEW_HarmoGraph_7
   \                     ??GUI_VIEW_HarmoGraph_9:
   \   000003FC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003FE   0xA880             ADD      R0,SP,#+512
   \   00000400   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000404   0x6E80             LDR      R0,[R0, #+104]
   \   00000406   0x.... 0x....      LDR.W    R1,??DataTable8_23  ;; 0x3e4ccccd
   \   0000040A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000040E   0xD88A             BHI.N    ??GUI_VIEW_HarmoGraph_6
   \   00000410   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000412   0xA880             ADD      R0,SP,#+512
   \   00000414   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000418   0x6E80             LDR      R0,[R0, #+104]
   \   0000041A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000041E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000422   0xF4BF 0xAF80      BCS.W    ??GUI_VIEW_HarmoGraph_6
   \   00000426   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000428   0x00A0             LSLS     R0,R4,#+2
   \   0000042A   0xA918             ADD      R1,SP,#+96
   \   0000042C   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   00000430   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000432   0xA880             ADD      R0,SP,#+512
   \   00000434   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000438   0x6E80             LDR      R0,[R0, #+104]
   \   0000043A   0x.... 0x....      BL       __aeabi_f2d
   \   0000043E   0x.... 0x....      LDR.W    R2,??DataTable8_26  ;; 0x9999999a
   \   00000442   0x.... 0x....      LDR.W    R3,??DataTable8_27  ;; 0xbfc99999
   \   00000446   0x.... 0x....      BL       __aeabi_dadd
   \   0000044A   0x.... 0x....      LDR.W    R2,??DataTable8_28  ;; 0xfbe76c8b
   \   0000044E   0x.... 0x....      LDR.W    R3,??DataTable8_29  ;; 0x403871a9
   \   00000452   0x.... 0x....      BL       __aeabi_dmul
   \   00000456   0x0002             MOVS     R2,R0
   \   00000458   0x000B             MOVS     R3,R1
   \   0000045A   0x2000             MOVS     R0,#+0
   \   0000045C   0x.... 0x....      LDR.W    R1,??DataTable8_30  ;; 0x40786000
   \   00000460   0x.... 0x....      BL       __aeabi_dsub
   \   00000464   0x.... 0x....      BL       __aeabi_d2iz
   \   00000468   0x8068             STRH     R0,[R5, #+2]
   \   0000046A   0xE786             B.N      ??GUI_VIEW_HarmoGraph_7
    509              }
    510              
    511              YADA_71(MenuViewHarmoGraph1,18,39,63,67,18,39);  // wk --> ?
   \                     ??GUI_VIEW_HarmoGraph_8:
   \   0000046C   0x2027             MOVS     R0,#+39
   \   0000046E   0x9002             STR      R0,[SP, #+8]
   \   00000470   0x2012             MOVS     R0,#+18
   \   00000472   0x9001             STR      R0,[SP, #+4]
   \   00000474   0x2043             MOVS     R0,#+67
   \   00000476   0x9000             STR      R0,[SP, #+0]
   \   00000478   0x233F             MOVS     R3,#+63
   \   0000047A   0x2227             MOVS     R2,#+39
   \   0000047C   0x2112             MOVS     R1,#+18
   \   0000047E   0x201B             MOVS     R0,#+27
   \   00000480   0x.... 0x....      BL       YADA_71
    512              YADA_71(MenuViewHarmoGraph1,95,39,191,69,95,39);  // wk --> 清楚上一次显示的相位值
   \   00000484   0x2027             MOVS     R0,#+39
   \   00000486   0x9002             STR      R0,[SP, #+8]
   \   00000488   0x205F             MOVS     R0,#+95
   \   0000048A   0x9001             STR      R0,[SP, #+4]
   \   0000048C   0x2045             MOVS     R0,#+69
   \   0000048E   0x9000             STR      R0,[SP, #+0]
   \   00000490   0x23BF             MOVS     R3,#+191
   \   00000492   0x2227             MOVS     R2,#+39
   \   00000494   0x215F             MOVS     R1,#+95
   \   00000496   0x201B             MOVS     R0,#+27
   \   00000498   0x.... 0x....      BL       YADA_71
    513          
    514              YADA_98(165,40,0x22,0x81,0x02,0xffff,0x0000,HarmoInfoZone[HarmoGraphRange-1],0); //显示谐波区间
   \   0000049C   0x2000             MOVS     R0,#+0
   \   0000049E   0x9004             STR      R0,[SP, #+16]
   \   000004A0   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   000004A4   0x7800             LDRB     R0,[R0, #+0]
   \   000004A6   0x210A             MOVS     R1,#+10
   \   000004A8   0xAA13             ADD      R2,SP,#+76
   \   000004AA   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000004AE   0x380A             SUBS     R0,R0,#+10
   \   000004B0   0x9003             STR      R0,[SP, #+12]
   \   000004B2   0x2000             MOVS     R0,#+0
   \   000004B4   0x9002             STR      R0,[SP, #+8]
   \   000004B6   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000004BA   0x9001             STR      R0,[SP, #+4]
   \   000004BC   0x2002             MOVS     R0,#+2
   \   000004BE   0x9000             STR      R0,[SP, #+0]
   \   000004C0   0x2381             MOVS     R3,#+129
   \   000004C2   0x2222             MOVS     R2,#+34
   \   000004C4   0x2128             MOVS     R1,#+40
   \   000004C6   0x20A5             MOVS     R0,#+165
   \   000004C8   0x.... 0x....      BL       YADA_98
    515              YADA_98(95,40,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[HarmoGraphPhase-1],0);//显示相信息A、B、C. // HarmoGraphPhase默认值是 1
   \   000004CC   0x2000             MOVS     R0,#+0
   \   000004CE   0x9004             STR      R0,[SP, #+16]
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   000004D4   0x7800             LDRB     R0,[R0, #+0]
   \   000004D6   0x.... 0x....      LDR.W    R1,??DataTable8_31
   \   000004DA   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   000004DE   0x3808             SUBS     R0,R0,#+8
   \   000004E0   0x9003             STR      R0,[SP, #+12]
   \   000004E2   0x2000             MOVS     R0,#+0
   \   000004E4   0x9002             STR      R0,[SP, #+8]
   \   000004E6   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000004EA   0x9001             STR      R0,[SP, #+4]
   \   000004EC   0x2002             MOVS     R0,#+2
   \   000004EE   0x9000             STR      R0,[SP, #+0]
   \   000004F0   0x2381             MOVS     R3,#+129
   \   000004F2   0x2222             MOVS     R2,#+34
   \   000004F4   0x2128             MOVS     R1,#+40
   \   000004F6   0x205F             MOVS     R0,#+95
   \   000004F8   0x.... 0x....      BL       YADA_98
    516              
    517              YADA_C0(HarmoGraphInfoAdr,HarmoUI,28);
   \   000004FC   0x221C             MOVS     R2,#+28
   \   000004FE   0xA905             ADD      R1,SP,#+20
   \   00000500   0xF240 0x7092      MOVW     R0,#+1938
   \   00000504   0x.... 0x....      BL       YADA_C0
    518              YADA_C108(HarmoGraphInfoAdr,4);
   \   00000508   0x2104             MOVS     R1,#+4
   \   0000050A   0xF240 0x7092      MOVW     R0,#+1938
   \   0000050E   0x.... 0x....      BL       YADA_C108
    519              delay_ms(5);
   \   00000512   0x2005             MOVS     R0,#+5
   \   00000514   0x.... 0x....      BL       delay_ms
    520              YADA_40(0xf800,0x0000);
   \   00000518   0x2100             MOVS     R1,#+0
   \   0000051A   0xF44F 0x4078      MOV      R0,#+63488
   \   0000051E   0x.... 0x....      BL       YADA_40
    521              YADA_71(MenuViewHarmoGraph1,85,114,616,251,85,114);//刷新电压柱状图显示区域
   \   00000522   0x2072             MOVS     R0,#+114
   \   00000524   0x9002             STR      R0,[SP, #+8]
   \   00000526   0x2055             MOVS     R0,#+85
   \   00000528   0x9001             STR      R0,[SP, #+4]
   \   0000052A   0x20FB             MOVS     R0,#+251
   \   0000052C   0x9000             STR      R0,[SP, #+0]
   \   0000052E   0xF44F 0x731A      MOV      R3,#+616
   \   00000532   0x2272             MOVS     R2,#+114
   \   00000534   0x2155             MOVS     R1,#+85
   \   00000536   0x201B             MOVS     R0,#+27
   \   00000538   0x.... 0x....      BL       YADA_71
    522              YADA_5B(UHarmoBarXY,104);//画电压柱状图
   \   0000053C   0x2168             MOVS     R1,#+104
   \   0000053E   0xA84C             ADD      R0,SP,#+304
   \   00000540   0x.... 0x....      BL       YADA_5B
    523              delay_ms(5);
   \   00000544   0x2005             MOVS     R0,#+5
   \   00000546   0x.... 0x....      BL       delay_ms
    524              YADA_71(MenuViewHarmoGraph1,85,300,616,480,85,300);//刷新电流柱状图显示区域
   \   0000054A   0xF44F 0x7096      MOV      R0,#+300
   \   0000054E   0x9002             STR      R0,[SP, #+8]
   \   00000550   0x2055             MOVS     R0,#+85
   \   00000552   0x9001             STR      R0,[SP, #+4]
   \   00000554   0xF44F 0x70F0      MOV      R0,#+480
   \   00000558   0x9000             STR      R0,[SP, #+0]
   \   0000055A   0xF44F 0x731A      MOV      R3,#+616
   \   0000055E   0xF44F 0x7296      MOV      R2,#+300
   \   00000562   0x2155             MOVS     R1,#+85
   \   00000564   0x201B             MOVS     R0,#+27
   \   00000566   0x.... 0x....      BL       YADA_71
    525              YADA_5B(IHarmoBarXY,104);//画电流柱状图
   \   0000056A   0x2168             MOVS     R1,#+104
   \   0000056C   0xA818             ADD      R0,SP,#+96
   \   0000056E   0x.... 0x....      BL       YADA_5B
    526              delay_ms(5);
   \   00000572   0x2005             MOVS     R0,#+5
   \   00000574   0x.... 0x....      BL       delay_ms
    527          #endif    // #if 1
    528          }
   \   00000578   0xF50D 0x7D34      ADD      SP,SP,#+720
   \   0000057C   0xBD70             POP      {R4-R6,PC}       ;; return
    529          
    530          /*******************************************************************************
    531          * 函  数  名      : GUI_VIEW_HarmoList
    532          * 描      述      : 谐波列表显示函数。可通过移位键选择三相或者谐波总次数
    533          * 输      入      : 无
    534          * 返      回      : 无
    535          *
    536          * 修       改     : WK
    537          * 时       间     : 2013-03-14
    538          * 描       述     : 基于2013-03-08界面 
    539          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    540          void GUI_VIEW_HarmoList()
    541          {
   \                     GUI_VIEW_HarmoList:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xF5AD 0x7D44      SUB      SP,SP,#+784
    542              U16 HRU16[100]= {0};
   \   00000006   0xA892             ADD      R0,SP,#+584
   \   00000008   0x21C8             MOVS     R1,#+200
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    543              U16 ListC108[182]= {0},IndexInit;
   \   0000000E   0xA837             ADD      R0,SP,#+220
   \   00000010   0xF44F 0x71B6      MOV      R1,#+364
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
    544              float Listfloat[50]= {0};
   \   00000018   0xA805             ADD      R0,SP,#+20
   \   0000001A   0x21C8             MOVS     R1,#+200
   \   0000001C   0x.... 0x....      BL       __aeabi_memclr4
    545                  
    546              YADA_98(58,42,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[HarmoListPhase-1],0);//显示相信息A、B、C.
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x9004             STR      R0,[SP, #+16]
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable8_32
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable8_31
   \   0000002E   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   00000032   0x3808             SUBS     R0,R0,#+8
   \   00000034   0x9003             STR      R0,[SP, #+12]
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x9002             STR      R0,[SP, #+8]
   \   0000003A   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000003E   0x9001             STR      R0,[SP, #+4]
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0x9000             STR      R0,[SP, #+0]
   \   00000044   0x2381             MOVS     R3,#+129
   \   00000046   0x2222             MOVS     R2,#+34
   \   00000048   0x212A             MOVS     R1,#+42
   \   0000004A   0x203A             MOVS     R0,#+58
   \   0000004C   0x.... 0x....      BL       YADA_98
    547              delay_ms(5);
   \   00000050   0x2005             MOVS     R0,#+5
   \   00000052   0x.... 0x....      BL       delay_ms
    548              if(HarmoListUorI==1)
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable8_33
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD111             BNE.N    ??GUI_VIEW_HarmoList_0
    549              {
    550                  YADA_98(205,42,0x22,0x81,0x02,0xffff,0x0000,"U",0);
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x9004             STR      R0,[SP, #+16]
   \   00000064   0x....             ADR.N    R0,??DataTable7  ;; "U"
   \   00000066   0x9003             STR      R0,[SP, #+12]
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x9002             STR      R0,[SP, #+8]
   \   0000006C   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000070   0x9001             STR      R0,[SP, #+4]
   \   00000072   0x2002             MOVS     R0,#+2
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x2381             MOVS     R3,#+129
   \   00000078   0x2222             MOVS     R2,#+34
   \   0000007A   0x212A             MOVS     R1,#+42
   \   0000007C   0x20CD             MOVS     R0,#+205
   \   0000007E   0x.... 0x....      BL       YADA_98
   \   00000082   0xE010             B.N      ??GUI_VIEW_HarmoList_1
    551              }
    552              else
    553              {
    554                  YADA_98(205,42,0x22,0x81,0x02,0xffff,0x0000,"I",0);
   \                     ??GUI_VIEW_HarmoList_0:
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x9004             STR      R0,[SP, #+16]
   \   00000088   0x....             ADR.N    R0,??DataTable7_1  ;; "I"
   \   0000008A   0x9003             STR      R0,[SP, #+12]
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x9002             STR      R0,[SP, #+8]
   \   00000090   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000094   0x9001             STR      R0,[SP, #+4]
   \   00000096   0x2002             MOVS     R0,#+2
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0x2381             MOVS     R3,#+129
   \   0000009C   0x2222             MOVS     R2,#+34
   \   0000009E   0x212A             MOVS     R1,#+42
   \   000000A0   0x20CD             MOVS     R0,#+205
   \   000000A2   0x.... 0x....      BL       YADA_98
    555              }
    556                  
    557              delay_ms(5);
   \                     ??GUI_VIEW_HarmoList_1:
   \   000000A6   0x2005             MOVS     R0,#+5
   \   000000A8   0x.... 0x....      BL       delay_ms
    558              if(HarmoListAmporRatio==1)//显示幅值时不需要转换
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0x2801             CMP      R0,#+1
   \   000000B4   0xF040 0x80C5      BNE.W    ??GUI_VIEW_HarmoList_2
    559              {
    560                  YADA_98(330,41,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[3],0);
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x9004             STR      R0,[SP, #+16]
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   000000C0   0x9003             STR      R0,[SP, #+12]
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x9002             STR      R0,[SP, #+8]
   \   000000C6   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000000CA   0x9001             STR      R0,[SP, #+4]
   \   000000CC   0x2002             MOVS     R0,#+2
   \   000000CE   0x9000             STR      R0,[SP, #+0]
   \   000000D0   0x2381             MOVS     R3,#+129
   \   000000D2   0x2222             MOVS     R2,#+34
   \   000000D4   0x2129             MOVS     R1,#+41
   \   000000D6   0xF44F 0x70A5      MOV      R0,#+330
   \   000000DA   0x.... 0x....      BL       YADA_98
    561                  IndexInit=(HarmoListPhase-1)*600+(HarmoListUorI-1)*200+(HarmoListRange-1)*96+Harmo_INDEX;
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable8_32
   \   000000E2   0x7800             LDRB     R0,[R0, #+0]
   \   000000E4   0xF44F 0x7116      MOV      R1,#+600
   \   000000E8   0x.... 0x....      LDR.W    R2,??DataTable8_33
   \   000000EC   0x7812             LDRB     R2,[R2, #+0]
   \   000000EE   0x23C8             MOVS     R3,#+200
   \   000000F0   0x435A             MULS     R2,R3,R2
   \   000000F2   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   000000FA   0x7809             LDRB     R1,[R1, #+0]
   \   000000FC   0x2260             MOVS     R2,#+96
   \   000000FE   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000102   0xF5B0 0x704C      SUBS     R0,R0,#+816
    562                  for(U8 LorR=0; LorR<2; LorR++) //先左边列后右边列
   \   00000106   0x2100             MOVS     R1,#+0
   \   00000108   0xE095             B.N      ??GUI_VIEW_HarmoList_3
    563                  {
    564                      for(U8 i=0; i<13; i++)
    565                      {
    566                          ListC108[7*i+91*LorR]=0x3304;//显示数据的模式
   \                     ??GUI_VIEW_HarmoList_4:
   \   0000010A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000010C   0x2307             MOVS     R3,#+7
   \   0000010E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000110   0x245B             MOVS     R4,#+91
   \   00000112   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000116   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   0000011A   0xAC37             ADD      R4,SP,#+220
   \   0000011C   0xF243 0x3504      MOVW     R5,#+13060
   \   00000120   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
    567                          ListC108[7*i+91*LorR+1]=100+338*LorR;//显示左边列谐波数据的X为82,右边列谐波数据X为438
   \   00000124   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000126   0x2307             MOVS     R3,#+7
   \   00000128   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000012A   0x245B             MOVS     R4,#+91
   \   0000012C   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000130   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   00000134   0xAC37             ADD      R4,SP,#+220
   \   00000136   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0xF44F 0x74A9      MOV      R4,#+338
   \   00000140   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000144   0x3464             ADDS     R4,R4,#+100
   \   00000146   0x805C             STRH     R4,[R3, #+2]
    568                          ListC108[7*i+91*LorR+2]=77+28*i;//Y坐标
   \   00000148   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000014A   0x2307             MOVS     R3,#+7
   \   0000014C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014E   0x245B             MOVS     R4,#+91
   \   00000150   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000154   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   00000158   0xAC37             ADD      R4,SP,#+220
   \   0000015A   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   0000015E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000160   0x241C             MOVS     R4,#+28
   \   00000162   0xFB04 0xF402      MUL      R4,R4,R2
   \   00000166   0x344D             ADDS     R4,R4,#+77
   \   00000168   0x809C             STRH     R4,[R3, #+4]
    569                          ListC108[7*i+91*LorR+3]=0xffff;
   \   0000016A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000016C   0x2307             MOVS     R3,#+7
   \   0000016E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000170   0x245B             MOVS     R4,#+91
   \   00000172   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000176   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   0000017A   0xAC37             ADD      R4,SP,#+220
   \   0000017C   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   00000180   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000184   0x80DC             STRH     R4,[R3, #+6]
    570                          ListC108[7*i+91*LorR+4]=0x0000;
   \   00000186   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000188   0x2307             MOVS     R3,#+7
   \   0000018A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000018C   0x245B             MOVS     R4,#+91
   \   0000018E   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000192   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   00000196   0xAC37             ADD      R4,SP,#+220
   \   00000198   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   0000019C   0x2400             MOVS     R4,#+0
   \   0000019E   0x811C             STRH     R4,[R3, #+8]
    571                          ListC108[7*i+91*LorR+5]=((U16)(PowRxchar[IndexInit+8*i+LorR*4])<<8)+((U16)PowRxchar[IndexInit+8*i+LorR*4+1]);
   \   000001A0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001A2   0x2307             MOVS     R3,#+7
   \   000001A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A6   0x245B             MOVS     R4,#+91
   \   000001A8   0xFB04 0xF401      MUL      R4,R4,R1
   \   000001AC   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   000001B0   0xAC37             ADD      R4,SP,#+220
   \   000001B2   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   000001B6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B8   0x00D4             LSLS     R4,R2,#+3
   \   000001BA   0xFA14 0xF480      UXTAH    R4,R4,R0
   \   000001BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001C0   0xEB14 0x0481      ADDS     R4,R4,R1, LSL #+2
   \   000001C4   0x....             LDR.N    R5,??DataTable7_2
   \   000001C6   0x5D64             LDRB     R4,[R4, R5]
   \   000001C8   0x0224             LSLS     R4,R4,#+8
   \   000001CA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001CC   0x00D5             LSLS     R5,R2,#+3
   \   000001CE   0xFA15 0xF580      UXTAH    R5,R5,R0
   \   000001D2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001D4   0xEB15 0x0581      ADDS     R5,R5,R1, LSL #+2
   \   000001D8   0x....             LDR.N    R6,??DataTable7_2
   \   000001DA   0x19AD             ADDS     R5,R5,R6
   \   000001DC   0x786D             LDRB     R5,[R5, #+1]
   \   000001DE   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   000001E2   0x815C             STRH     R4,[R3, #+10]
    572                          ListC108[7*i+91*LorR+6]=((U16)(PowRxchar[IndexInit+8*i+LorR*4+2])<<8)+((U16)PowRxchar[IndexInit+8*i+LorR*4+3]);;
   \   000001E4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001E6   0x2307             MOVS     R3,#+7
   \   000001E8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001EA   0x245B             MOVS     R4,#+91
   \   000001EC   0xFB04 0xF401      MUL      R4,R4,R1
   \   000001F0   0xFB03 0x4302      MLA      R3,R3,R2,R4
   \   000001F4   0xAC37             ADD      R4,SP,#+220
   \   000001F6   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   000001FA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001FC   0x00D4             LSLS     R4,R2,#+3
   \   000001FE   0xFA14 0xF480      UXTAH    R4,R4,R0
   \   00000202   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000204   0xEB14 0x0481      ADDS     R4,R4,R1, LSL #+2
   \   00000208   0x....             LDR.N    R5,??DataTable7_2
   \   0000020A   0x1964             ADDS     R4,R4,R5
   \   0000020C   0x78A4             LDRB     R4,[R4, #+2]
   \   0000020E   0x0224             LSLS     R4,R4,#+8
   \   00000210   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000212   0x00D5             LSLS     R5,R2,#+3
   \   00000214   0xFA15 0xF580      UXTAH    R5,R5,R0
   \   00000218   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000021A   0xEB15 0x0581      ADDS     R5,R5,R1, LSL #+2
   \   0000021E   0x....             LDR.N    R6,??DataTable7_2
   \   00000220   0x19AD             ADDS     R5,R5,R6
   \   00000222   0x78ED             LDRB     R5,[R5, #+3]
   \   00000224   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   00000228   0x819C             STRH     R4,[R3, #+12]
    573                          //delay_ms(1);
    574                      }
   \   0000022A   0x1C52             ADDS     R2,R2,#+1
   \                     ??GUI_VIEW_HarmoList_5:
   \   0000022C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000022E   0x2A0D             CMP      R2,#+13
   \   00000230   0xF4FF 0xAF6B      BCC.W    ??GUI_VIEW_HarmoList_4
   \   00000234   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_HarmoList_3:
   \   00000236   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000238   0x2902             CMP      R1,#+2
   \   0000023A   0xF080 0x80C0      BCS.W    ??GUI_VIEW_HarmoList_6
   \   0000023E   0x2200             MOVS     R2,#+0
   \   00000240   0xE7F4             B.N      ??GUI_VIEW_HarmoList_5
    575                  }
    576              }
    577              else//显示含有率
    578              {
    579                  YADA_98(330,41,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[4],0);
   \                     ??GUI_VIEW_HarmoList_2:
   \   00000242   0x2000             MOVS     R0,#+0
   \   00000244   0x9004             STR      R0,[SP, #+16]
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable9_6
   \   0000024A   0x9003             STR      R0,[SP, #+12]
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x9002             STR      R0,[SP, #+8]
   \   00000250   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000254   0x9001             STR      R0,[SP, #+4]
   \   00000256   0x2002             MOVS     R0,#+2
   \   00000258   0x9000             STR      R0,[SP, #+0]
   \   0000025A   0x2381             MOVS     R3,#+129
   \   0000025C   0x2222             MOVS     R2,#+34
   \   0000025E   0x2129             MOVS     R1,#+41
   \   00000260   0xF44F 0x70A5      MOV      R0,#+330
   \   00000264   0x.... 0x....      BL       YADA_98
    580                  ChartoFloat(&PowRxchar[(HarmoListPhase-1)*600+(HarmoListUorI-1)*200+Harmo_INDEX], Listfloat,50,1000);
   \   00000268   0xF44F 0x737A      MOV      R3,#+1000
   \   0000026C   0x2232             MOVS     R2,#+50
   \   0000026E   0xA905             ADD      R1,SP,#+20
   \   00000270   0x....             LDR.N    R0,??DataTable8_32
   \   00000272   0x7800             LDRB     R0,[R0, #+0]
   \   00000274   0xF44F 0x7416      MOV      R4,#+600
   \   00000278   0x....             LDR.N    R5,??DataTable8_33
   \   0000027A   0x782D             LDRB     R5,[R5, #+0]
   \   0000027C   0x26C8             MOVS     R6,#+200
   \   0000027E   0x4375             MULS     R5,R6,R5
   \   00000280   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   00000284   0x....             LDR.N    R4,??DataTable7_2
   \   00000286   0x1900             ADDS     R0,R0,R4
   \   00000288   0xF5B0 0x7034      SUBS     R0,R0,#+720
   \   0000028C   0x.... 0x....      BL       ChartoFloat
    581                  UIValues2HR(Listfloat,HRU16);//转换50次的值，若每次转换26次，则需记录第一次的值用于算25-50次的含有率
   \   00000290   0xA992             ADD      R1,SP,#+584
   \   00000292   0xA805             ADD      R0,SP,#+20
   \   00000294   0x.... 0x....      BL       UIValues2HR
    582                  YADA_40(0xffe0,0x0000);/*黄色前景，黑色背景*/
   \   00000298   0x2100             MOVS     R1,#+0
   \   0000029A   0xF64F 0x70E0      MOVW     R0,#+65504
   \   0000029E   0x.... 0x....      BL       YADA_40
    583                  for(U8 LorR=0; LorR<2; LorR++)//先左边列后右边列
   \   000002A2   0x2000             MOVS     R0,#+0
   \   000002A4   0xE086             B.N      ??GUI_VIEW_HarmoList_7
    584                  {
    585                      for(U8 i=0; i<13; i++)
    586                      {
    587                          ListC108[7*i+91*LorR]=0x3304;//显示数据的模式，注意从显示4位小数切换到2位小数时，必须刷新页面
   \                     ??GUI_VIEW_HarmoList_8:
   \   000002A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002A8   0x2207             MOVS     R2,#+7
   \   000002AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002AC   0x235B             MOVS     R3,#+91
   \   000002AE   0xFB03 0xF300      MUL      R3,R3,R0
   \   000002B2   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   000002B6   0xAB37             ADD      R3,SP,#+220
   \   000002B8   0xF243 0x3404      MOVW     R4,#+13060
   \   000002BC   0xF823 0x4012      STRH     R4,[R3, R2, LSL #+1]
    588                          ListC108[7*i+91*LorR+1]=100+338*LorR;//显示左边列谐波数据的X为82,右边列谐波数据X为438
   \   000002C0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002C2   0x2207             MOVS     R2,#+7
   \   000002C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C6   0x235B             MOVS     R3,#+91
   \   000002C8   0xFB03 0xF300      MUL      R3,R3,R0
   \   000002CC   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   000002D0   0xAB37             ADD      R3,SP,#+220
   \   000002D2   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000002D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002D8   0xF44F 0x73A9      MOV      R3,#+338
   \   000002DC   0xFB03 0xF300      MUL      R3,R3,R0
   \   000002E0   0x3364             ADDS     R3,R3,#+100
   \   000002E2   0x8053             STRH     R3,[R2, #+2]
    589                          ListC108[7*i+91*LorR+2]=77+28*i;//Y坐标
   \   000002E4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002E6   0x2207             MOVS     R2,#+7
   \   000002E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002EA   0x235B             MOVS     R3,#+91
   \   000002EC   0xFB03 0xF300      MUL      R3,R3,R0
   \   000002F0   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   000002F4   0xAB37             ADD      R3,SP,#+220
   \   000002F6   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   000002FA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002FC   0x231C             MOVS     R3,#+28
   \   000002FE   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000302   0x334D             ADDS     R3,R3,#+77
   \   00000304   0x8093             STRH     R3,[R2, #+4]
    590                          ListC108[7*i+91*LorR+3]=0xffff;
   \   00000306   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000308   0x2207             MOVS     R2,#+7
   \   0000030A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000030C   0x235B             MOVS     R3,#+91
   \   0000030E   0xFB03 0xF300      MUL      R3,R3,R0
   \   00000312   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   00000316   0xAB37             ADD      R3,SP,#+220
   \   00000318   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000031C   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000320   0x80D3             STRH     R3,[R2, #+6]
    591                          ListC108[7*i+91*LorR+4]=0x0000;
   \   00000322   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000324   0x2207             MOVS     R2,#+7
   \   00000326   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000328   0x235B             MOVS     R3,#+91
   \   0000032A   0xFB03 0xF300      MUL      R3,R3,R0
   \   0000032E   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   00000332   0xAB37             ADD      R3,SP,#+220
   \   00000334   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000338   0x2300             MOVS     R3,#+0
   \   0000033A   0x8113             STRH     R3,[R2, #+8]
    592                          ListC108[7*i+91*LorR+5]=*(HRU16+i*4+LorR*2+(HarmoListRange-1)*48);
   \   0000033C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000033E   0x2207             MOVS     R2,#+7
   \   00000340   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000342   0x235B             MOVS     R3,#+91
   \   00000344   0xFB03 0xF300      MUL      R3,R3,R0
   \   00000348   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   0000034C   0xAB37             ADD      R3,SP,#+220
   \   0000034E   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000352   0x.... 0x....      LDR.W    R3,??DataTable9_2
   \   00000356   0x781B             LDRB     R3,[R3, #+0]
   \   00000358   0x2460             MOVS     R4,#+96
   \   0000035A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000035C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000035E   0xAD92             ADD      R5,SP,#+584
   \   00000360   0xEB15 0x05C1      ADDS     R5,R5,R1, LSL #+3
   \   00000364   0xEB15 0x0580      ADDS     R5,R5,R0, LSL #+2
   \   00000368   0xFB04 0x5303      MLA      R3,R4,R3,R5
   \   0000036C   0xF833 0x3C60      LDRH     R3,[R3, #-96]
   \   00000370   0x8153             STRH     R3,[R2, #+10]
    593                          ListC108[7*i+91*LorR+6]=*(HRU16+i*4+LorR*2+(HarmoListRange-1)*48+1);
   \   00000372   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000374   0x2207             MOVS     R2,#+7
   \   00000376   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000378   0x235B             MOVS     R3,#+91
   \   0000037A   0xFB03 0xF300      MUL      R3,R3,R0
   \   0000037E   0xFB02 0x3201      MLA      R2,R2,R1,R3
   \   00000382   0xAB37             ADD      R3,SP,#+220
   \   00000384   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   00000388   0x.... 0x....      LDR.W    R3,??DataTable9_2
   \   0000038C   0x781B             LDRB     R3,[R3, #+0]
   \   0000038E   0x2460             MOVS     R4,#+96
   \   00000390   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000392   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000394   0xAD92             ADD      R5,SP,#+584
   \   00000396   0xEB15 0x05C1      ADDS     R5,R5,R1, LSL #+3
   \   0000039A   0xEB15 0x0580      ADDS     R5,R5,R0, LSL #+2
   \   0000039E   0xFB04 0x5303      MLA      R3,R4,R3,R5
   \   000003A2   0xF833 0x3C5E      LDRH     R3,[R3, #-94]
   \   000003A6   0x8193             STRH     R3,[R2, #+12]
    594                          //delay_ms(1);
    595                      }
   \   000003A8   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_HarmoList_9:
   \   000003AA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003AC   0x290D             CMP      R1,#+13
   \   000003AE   0xF4FF 0xAF7A      BCC.W    ??GUI_VIEW_HarmoList_8
   \   000003B2   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_HarmoList_7:
   \   000003B4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003B6   0x2802             CMP      R0,#+2
   \   000003B8   0xD201             BCS.N    ??GUI_VIEW_HarmoList_6
   \   000003BA   0x2100             MOVS     R1,#+0
   \   000003BC   0xE7F5             B.N      ??GUI_VIEW_HarmoList_9
    596                  }
    597              }
    598              delay_ms(5);
   \                     ??GUI_VIEW_HarmoList_6:
   \   000003BE   0x2005             MOVS     R0,#+5
   \   000003C0   0x.... 0x....      BL       delay_ms
    599              YADA_C0(HarmoListInfoAdr,ListC108,91);
   \   000003C4   0x225B             MOVS     R2,#+91
   \   000003C6   0xA937             ADD      R1,SP,#+220
   \   000003C8   0xF240 0x6026      MOVW     R0,#+1574
   \   000003CC   0x.... 0x....      BL       YADA_C0
    600              YADA_C108(HarmoListInfoAdr,13);
   \   000003D0   0x210D             MOVS     R1,#+13
   \   000003D2   0xF240 0x6026      MOVW     R0,#+1574
   \   000003D6   0x.... 0x....      BL       YADA_C108
    601              delay_ms(5);
   \   000003DA   0x2005             MOVS     R0,#+5
   \   000003DC   0x.... 0x....      BL       delay_ms
    602              YADA_C0(HarmoListInfoAdr+182,&ListC108[91],91);
   \   000003E0   0x225B             MOVS     R2,#+91
   \   000003E2   0xF50D 0x71C9      ADD      R1,SP,#+402
   \   000003E6   0xF240 0x60DC      MOVW     R0,#+1756
   \   000003EA   0x.... 0x....      BL       YADA_C0
    603              YADA_C108(HarmoListInfoAdr+182,13);
   \   000003EE   0x210D             MOVS     R1,#+13
   \   000003F0   0xF240 0x60DC      MOVW     R0,#+1756
   \   000003F4   0x.... 0x....      BL       YADA_C108
    604              delay_ms(5);
   \   000003F8   0x2005             MOVS     R0,#+5
   \   000003FA   0x.... 0x....      BL       delay_ms
    605          }
   \   000003FE   0xF50D 0x7D44      ADD      SP,SP,#+784
   \   00000402   0xBD70             POP      {R4-R6,PC}       ;; return
    606          
    607          /*******************************************************************************
    608          * 函  数  名      : linemark
    609          * 描      述      : 压电流标注函数。显示通过U_I判断电压\电流有效值
    610          * 输      入      : Y_COORD为Y坐标；U_I=0，则表示标注电压，U_I=1，则表示标注电流，
    611          * 返      回      : 无
    612          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    613          void linemark(U16 Y_COORD, U16 UorI)
    614          {
   \                     linemark:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB094             SUB      SP,SP,#+80
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    615          #if 0  // wk @130405-->修改显示位数之前
    616              U16 C108Dat[21]= {0};
    617              U8 UORI[][2]= {"V","A"};
    618              for(U8 k=0; k<3; k++)
    619              {
    620                  C108Dat[7*k + 0] = 0x3403;//P  显示数据的模式
    621                  C108Dat[7*k + 1] = 118+200*k;//显示左边列谐波数据的X坐标118 318,518
    622                  C108Dat[7*k + 2] = Y_COORD;//Y坐标
    623                  C108Dat[7*k + 3] = COLOR[k];
    624                  C108Dat[7*k + 4] = 0x0000;
    625                  /* wk --> 显示的出来的数据 = C108[5]* 65536 + C108[6] */
    626                  C108Dat[7*k + 5] = ((U16)(PowRxchar[UI_VIRTUAL_INDEX + 16*k + UorI*8]) << 8) + (U16)(PowRxchar[UI_VIRTUAL_INDEX + 1 + 16*k + UorI*8]);//两个字节转为一个字
    627                  C108Dat[7*k + 6] = ((U16)(PowRxchar[UI_VIRTUAL_INDEX + 2 + 16*k + UorI*8]) << 8) + (U16)(PowRxchar[UI_VIRTUAL_INDEX + 3 + 16*k + UorI*8]);
    628                  YADA_98(198+200*k, Y_COORD, 0x22, 0x81, 0x01, COLOR[k], 0x0000, UORI[UorI], 0);  //标注电压或电流的单位
    629              }
    630              delay_ms(5);
    631              YADA_C0(WAVEUIaddr + UorI*42, C108Dat, 21);  
    632              YADA_C108(WAVEUIaddr + UorI*42, 3);   //写入有效值，每次3个
    633          #endif
    634              
    635              U16 C108Dat[21]= {0};
   \   00000008   0xA809             ADD      R0,SP,#+36
   \   0000000A   0x212C             MOVS     R1,#+44
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    636              U8 VI_DIS[12]={0};
   \   00000010   0xA806             ADD      R0,SP,#+24
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2300             MOVS     R3,#+0
   \   00000018   0xC00E             STM      R0!,{R1-R3}
   \   0000001A   0x380C             SUBS     R0,R0,#+12
    637              U8 UORI[][2]= {"V","A"},temp,temp1,k;
   \   0000001C   0xA805             ADD      R0,SP,#+20
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   00000022   0x680A             LDR      R2,[R1, #0]
   \   00000024   0x6002             STR      R2,[R0, #+0]
    638              for(k=0; k<3; k++)
   \   00000026   0x2600             MOVS     R6,#+0
   \   00000028   0xE00B             B.N      ??linemark_0
    639              {
    640                if(UorI)
    641                  Sig_Fiq(&PowRxchar[UI_VIRTUAL_INDEX+8+16*k],&VI_DIS[4*k],10);   //数据显示为要求的有效数字
                         ^
Warning[Pe223]: function "Sig_Fiq" declared implicitly
    642                else
    643                  Sig_Fiq(&PowRxchar[UI_VIRTUAL_INDEX+16*k],&VI_DIS[4*k],100);
                         ^
Warning[Pe223]: function "Sig_Fiq" declared implicitly
   \                     ??linemark_1:
   \   0000002A   0x2264             MOVS     R2,#+100
   \   0000002C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   0xA806             ADD      R0,SP,#+24
   \   00000030   0xEB10 0x0186      ADDS     R1,R0,R6, LSL #+2
   \   00000034   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000036   0x....             LDR.N    R0,??DataTable8
   \   00000038   0xEB10 0x1006      ADDS     R0,R0,R6, LSL #+4
   \   0000003C   0x.... 0x....      BL       Sig_Fiq
   \                     ??linemark_2:
   \   00000040   0x1C76             ADDS     R6,R6,#+1
   \                     ??linemark_0:
   \   00000042   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000044   0x2E03             CMP      R6,#+3
   \   00000046   0xD20F             BCS.N    ??linemark_3
   \   00000048   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004A   0x2D00             CMP      R5,#+0
   \   0000004C   0xD0ED             BEQ.N    ??linemark_1
   \   0000004E   0x220A             MOVS     R2,#+10
   \   00000050   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000052   0xA806             ADD      R0,SP,#+24
   \   00000054   0xEB10 0x0186      ADDS     R1,R0,R6, LSL #+2
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0x....             LDR.N    R0,??DataTable8
   \   0000005C   0xEB10 0x1006      ADDS     R0,R0,R6, LSL #+4
   \   00000060   0x3008             ADDS     R0,R0,#+8
   \   00000062   0x.... 0x....      BL       Sig_Fiq
   \   00000066   0xE7EB             B.N      ??linemark_2
    644              }
    645              for(k=0; k<3; k++)
   \                     ??linemark_3:
   \   00000068   0x2600             MOVS     R6,#+0
   \   0000006A   0xE061             B.N      ??linemark_4
    646              {
    647                temp=7*k;
    648                temp1=k*4;
    649                if(UorI)
    650                {
    651                  C108Dat[temp + 0] = 0x3303;//P
    652                }
    653                else
    654                {
    655                   C108Dat[temp + 0] = 0x3203;//P  
   \                     ??linemark_5:
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0xAA09             ADD      R2,SP,#+36
   \   00000070   0xF243 0x2303      MOVW     R3,#+12803
   \   00000074   0xF822 0x3010      STRH     R3,[R2, R0, LSL #+1]
    656                }
    657                  C108Dat[temp + 1] = 118+200*k;//显示左边列谐波数据的X坐标118 318,518
   \                     ??linemark_6:
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0xAA09             ADD      R2,SP,#+36
   \   0000007C   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   00000080   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000082   0x23C8             MOVS     R3,#+200
   \   00000084   0xFB03 0xF306      MUL      R3,R3,R6
   \   00000088   0x3376             ADDS     R3,R3,#+118
   \   0000008A   0x8053             STRH     R3,[R2, #+2]
    658                  C108Dat[temp + 2] = Y_COORD;//Y坐标
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0xAA09             ADD      R2,SP,#+36
   \   00000090   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   00000094   0x8094             STRH     R4,[R2, #+4]
    659                  C108Dat[temp + 3] = COLOR[k];
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0xAA09             ADD      R2,SP,#+36
   \   0000009A   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   0000009E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A0   0x.... 0x....      LDR.W    R3,??DataTable9_9
   \   000000A4   0xF833 0x3016      LDRH     R3,[R3, R6, LSL #+1]
   \   000000A8   0x80D3             STRH     R3,[R2, #+6]
    660                  C108Dat[temp + 4] = 0x0000;
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0xAA09             ADD      R2,SP,#+36
   \   000000AE   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   000000B2   0x2300             MOVS     R3,#+0
   \   000000B4   0x8113             STRH     R3,[R2, #+8]
    661                  C108Dat[temp + 5] = ((U16)(VI_DIS[temp1]) << 8) + (U16)(VI_DIS[1 + temp1]);
   \   000000B6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B8   0xAA06             ADD      R2,SP,#+24
   \   000000BA   0x5C8A             LDRB     R2,[R1, R2]
   \   000000BC   0x0212             LSLS     R2,R2,#+8
   \   000000BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C0   0xAB06             ADD      R3,SP,#+24
   \   000000C2   0x18CB             ADDS     R3,R1,R3
   \   000000C4   0x785B             LDRB     R3,[R3, #+1]
   \   000000C6   0xFA52 0xF283      UXTAB    R2,R2,R3
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0xAB09             ADD      R3,SP,#+36
   \   000000CE   0xEB13 0x0340      ADDS     R3,R3,R0, LSL #+1
   \   000000D2   0x815A             STRH     R2,[R3, #+10]
    662                  C108Dat[temp + 6] = ((U16)(VI_DIS[temp1+2]) << 8) + (U16)(VI_DIS[3 + temp1]);
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0xAA06             ADD      R2,SP,#+24
   \   000000D8   0x188A             ADDS     R2,R1,R2
   \   000000DA   0x7892             LDRB     R2,[R2, #+2]
   \   000000DC   0x0212             LSLS     R2,R2,#+8
   \   000000DE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E0   0xAB06             ADD      R3,SP,#+24
   \   000000E2   0x18C9             ADDS     R1,R1,R3
   \   000000E4   0x78C9             LDRB     R1,[R1, #+3]
   \   000000E6   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   000000EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EC   0xAA09             ADD      R2,SP,#+36
   \   000000EE   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000F2   0x8181             STRH     R1,[R0, #+12]
    663                  YADA_98(198+200*k, Y_COORD, 0x22, 0x81, 0x01, COLOR[k], 0x0000, UORI[UorI], 0);  //标注电压或电流的单位
   \   000000F4   0x2000             MOVS     R0,#+0
   \   000000F6   0x9004             STR      R0,[SP, #+16]
   \   000000F8   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000FA   0xA805             ADD      R0,SP,#+20
   \   000000FC   0xEB10 0x0045      ADDS     R0,R0,R5, LSL #+1
   \   00000100   0x9003             STR      R0,[SP, #+12]
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x9002             STR      R0,[SP, #+8]
   \   00000106   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   0000010C   0xF830 0x0016      LDRH     R0,[R0, R6, LSL #+1]
   \   00000110   0x9001             STR      R0,[SP, #+4]
   \   00000112   0x2001             MOVS     R0,#+1
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x2381             MOVS     R3,#+129
   \   00000118   0x2222             MOVS     R2,#+34
   \   0000011A   0x0021             MOVS     R1,R4
   \   0000011C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000011E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000120   0x20C8             MOVS     R0,#+200
   \   00000122   0xFB00 0xF006      MUL      R0,R0,R6
   \   00000126   0x30C6             ADDS     R0,R0,#+198
   \   00000128   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000012A   0x.... 0x....      BL       YADA_98
   \   0000012E   0x1C76             ADDS     R6,R6,#+1
   \                     ??linemark_4:
   \   00000130   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000132   0x2E03             CMP      R6,#+3
   \   00000134   0xD20E             BCS.N    ??linemark_7
   \   00000136   0x2007             MOVS     R0,#+7
   \   00000138   0xFB00 0xF006      MUL      R0,R0,R6
   \   0000013C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000013E   0x00B1             LSLS     R1,R6,#+2
   \   00000140   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000142   0x2D00             CMP      R5,#+0
   \   00000144   0xD092             BEQ.N    ??linemark_5
   \   00000146   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000148   0xAA09             ADD      R2,SP,#+36
   \   0000014A   0xF243 0x3303      MOVW     R3,#+13059
   \   0000014E   0xF822 0x3010      STRH     R3,[R2, R0, LSL #+1]
   \   00000152   0xE791             B.N      ??linemark_6
    664              }
    665              delay_ms(5);
   \                     ??linemark_7:
   \   00000154   0x2005             MOVS     R0,#+5
   \   00000156   0x.... 0x....      BL       delay_ms
    666              YADA_C0(WAVEUIaddr + UorI*42, C108Dat, 21);
   \   0000015A   0x2215             MOVS     R2,#+21
   \   0000015C   0xA909             ADD      R1,SP,#+36
   \   0000015E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000160   0x202A             MOVS     R0,#+42
   \   00000162   0xFB00 0xF005      MUL      R0,R0,R5
   \   00000166   0xF600 0x108C      ADDW     R0,R0,#+2444
   \   0000016A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000016C   0x.... 0x....      BL       YADA_C0
    667              YADA_C108(WAVEUIaddr + UorI*42, 3);   //写入有效值，每次3个
   \   00000170   0x2103             MOVS     R1,#+3
   \   00000172   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000174   0x202A             MOVS     R0,#+42
   \   00000176   0xFB00 0xF005      MUL      R0,R0,R5
   \   0000017A   0xF600 0x108C      ADDW     R0,R0,#+2444
   \   0000017E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000180   0x.... 0x....      BL       YADA_C108
    668          }
   \   00000184   0xB014             ADD      SP,SP,#+80
   \   00000186   0xBD70             POP      {R4-R6,PC}       ;; return
    669          /*******************************************************************************
    670          * 函  数  名      : GUI_SYS_PARASET
    671          * 描      述      : 系统参数设定。可通过移位键选择各项设置。数值输入的范围为0~99999，大于5位时清零
    672          *                   此页的时间设置没有处理输入是否在正确范围
    673          * 输      入      : 无
    674          * 返      回      : 无
    675          * 
    676          * 修       改     : WK
    677          * 时       间     : 2013-03-13
    678          * 描       述     : 基于2013-03-08界面
    679          *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    680          void GUI_SYS_PARASET(void)
    681          {
   \                     GUI_SYS_PARASET:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB0C7             SUB      SP,SP,#+284
    682              U8 OFF_ON[][4]= {"开启","关闭"},i,temp=0,temp1=0;
   \   00000006   0xA809             ADD      R0,SP,#+36
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable9_10
   \   0000000C   0xC90C             LDM      R1!,{R2,R3}
   \   0000000E   0xC00C             STM      R0!,{R2,R3}
   \   00000010   0x3908             SUBS     R1,R1,#+8
   \   00000012   0x3808             SUBS     R0,R0,#+8
   \   00000014   0x2500             MOVS     R5,#+0
   \   00000016   0x2600             MOVS     R6,#+0
    683              U16 ParaSetC108[63]= {0},PARA_y=0,string2U16=0;
   \   00000018   0xA814             ADD      R0,SP,#+80
   \   0000001A   0x2180             MOVS     R1,#+128
   \   0000001C   0x.... 0x....      BL       __aeabi_memclr4
   \   00000020   0xF05F 0x0900      MOVS     R9,#+0
   \   00000024   0x2700             MOVS     R7,#+0
    684              static U8 flg_sys[9]={0} ;// wk --设置参数超出了限制标志
    685              
    686               SHELL_CONTEXT_PTR    shell_ptr;
    687               shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000026   0xF44F 0x70F2      MOV      R0,#+484
   \   0000002A   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000002E   0x0004             MOVS     R4,R0
    688               _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   00000030   0xF245 0x0101      MOVW     R1,#+20481
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       _lwmem_set_type
    689              //U32 String2U32=0;
    690              U16 SysParaXY[18]= { 450, 50, 450, 80 , 450 ,112,
    691                                   377,146, 470,146 , 540,146,   // 年是4位显示的，因此X坐标小于时间（2位）的X坐标
    692                                   400,178, 470,178,  540,178
    693                                 };
   \   0000003A   0xA80B             ADD      R0,SP,#+44
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   00000040   0x2224             MOVS     R2,#+36
   \   00000042   0x.... 0x....      BL       __aeabi_memcpy4
    694              U16 SysParaSetSq[36]= {445,48,448,73,  445,80,448,105, 445,110,448,135, 
    695                                     370,145,373,170, 460,145,463,170,  530,145,533,170, 
    696                                     370,176,373,201, 460,176,463,201,  530,176,533,201
    697                                     };
   \   00000046   0xA834             ADD      R0,SP,#+208
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   0000004C   0x2248             MOVS     R2,#+72
   \   0000004E   0x.... 0x....      BL       __aeabi_memcpy4
    698              /* wk --> 光标 */
    699              if(SysSet.SwFlg) //初次进入时读取flash
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xF000 0x80F6      BEQ.W    ??GUI_SYS_PARASET_0
    700              {
    701                  YADA_40(0x0000,0xfc00);//前景色为黑色，背景色为橙色
   \   0000005E   0xF44F 0x417C      MOV      R1,#+64512
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      BL       YADA_40
    702                  YADA_5A(SysParaSetSq,4);  // WK --> 以背景色填充（148,265）、（148,296）的矩形
   \   00000068   0x2104             MOVS     R1,#+4
   \   0000006A   0xA834             ADD      R0,SP,#+208
   \   0000006C   0x.... 0x....      BL       YADA_5A
    703          #if 0 // wk --> 全部读取Flash中参数      
    704                  shell_ptr->ARGC = 2;
    705                  shell_ptr->ARGV[0]="cd";
    706                  shell_ptr->ARGV[1]="f:\\"; 
    707                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    708                  
    709                  shell_ptr->ARGC = 2;
    710                  shell_ptr->ARGV[0]="cd";
    711                  shell_ptr->ARGV[1]="sysset";
    712                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    713                  
    714                  shell_ptr->ARGC=1;
    715                  shell_ptr->ARGV[0]="pwd";
    716                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
    717                  
    718                  shell_ptr->ARGC=5;
    719                  shell_ptr->ARGV[0]="read";
    720                  shell_ptr->ARGV[1]="sysset.txt";
    721                  shell_ptr->ARGV[2]="84";
    722                  shell_ptr->ARGV[3]="begin";
    723                  shell_ptr->ARGV[4]="0";
    724                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,SysFlashData);   
    725          #endif // wk --> 全部读取Flash中参数
    726                  
    727          #if 1 // wk --> 只读取Flash中系统参数      
    728                  shell_ptr->ARGC = 2;
   \   00000070   0x2002             MOVS     R0,#+2
   \   00000072   0x6220             STR      R0,[R4, #+32]
    729                  shell_ptr->ARGV[0]="cd";
   \   00000074   0xA0A5             ADR.N    R0,??GUI_SYS_PARASET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000076   0x6020             STR      R0,[R4, #+0]
    730                  shell_ptr->ARGV[1]="f:\\"; 
   \   00000078   0xA0A5             ADR.N    R0,??GUI_SYS_PARASET_1+0x4  ;; "f:\\"
   \   0000007A   0x6060             STR      R0,[R4, #+4]
    731                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                         ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   0000007C   0x0021             MOVS     R1,R4
   \   0000007E   0x6A20             LDR      R0,[R4, #+32]
   \   00000080   0x.... 0x....      BL       Shell_cd
    732                  
    733                  shell_ptr->ARGC = 2;
   \   00000084   0x2002             MOVS     R0,#+2
   \   00000086   0x6220             STR      R0,[R4, #+32]
    734                  shell_ptr->ARGV[0]="cd";
   \   00000088   0xA0A0             ADR.N    R0,??GUI_SYS_PARASET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   0000008A   0x6020             STR      R0,[R4, #+0]
    735                  shell_ptr->ARGV[1]="sysset";
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable9_14
   \   00000090   0x6060             STR      R0,[R4, #+4]
    736                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000092   0x0021             MOVS     R1,R4
   \   00000094   0x6A20             LDR      R0,[R4, #+32]
   \   00000096   0x.... 0x....      BL       Shell_cd
    737                  
    738                  shell_ptr->ARGC=1;
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0x6220             STR      R0,[R4, #+32]
    739                  shell_ptr->ARGV[0]="pwd";
   \   0000009E   0xA09D             ADR.N    R0,??GUI_SYS_PARASET_1+0x8  ;; "pwd"
   \   000000A0   0x6020             STR      R0,[R4, #+0]
    740                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
                         ^
Warning[Pe223]: function "Shell_pwd" declared implicitly
   \   000000A2   0x0021             MOVS     R1,R4
   \   000000A4   0x6A20             LDR      R0,[R4, #+32]
   \   000000A6   0x.... 0x....      BL       Shell_pwd
    741                  
    742                  shell_ptr->ARGC=5;
   \   000000AA   0x2005             MOVS     R0,#+5
   \   000000AC   0x6220             STR      R0,[R4, #+32]
    743                  shell_ptr->ARGV[0]="read";
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   000000B2   0x6020             STR      R0,[R4, #+0]
    744                  shell_ptr->ARGV[1]="sysset.txt";
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable9_16
   \   000000B8   0x6060             STR      R0,[R4, #+4]
    745                  shell_ptr->ARGV[2]="25";
   \   000000BA   0xA097             ADR.N    R0,??GUI_SYS_PARASET_1+0xC  ;; 0x32, 0x35, 0x00, 0x00
   \   000000BC   0x60A0             STR      R0,[R4, #+8]
    746                  shell_ptr->ARGV[3]="begin";
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable9_17
   \   000000C2   0x60E0             STR      R0,[R4, #+12]
    747                  shell_ptr->ARGV[4]="0";
   \   000000C4   0xA095             ADR.N    R0,??GUI_SYS_PARASET_1+0x10  ;; "0"
   \   000000C6   0x6120             STR      R0,[R4, #+16]
    748                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,SysFlashDataT);   
                         ^
Warning[Pe223]: function "Shell_read_wk" declared implicitly
   \   000000C8   0x.... 0x....      LDR.W    R2,??DataTable9_18
   \   000000CC   0x0021             MOVS     R1,R4
   \   000000CE   0x6A20             LDR      R0,[R4, #+32]
   \   000000D0   0x.... 0x....      BL       Shell_read_wk
    749          #endif //  wk --> 只读取Flash中系统参数
    750                  
    751                  //DISTIME(0);//显示当前的时间
    752                 // memcpy(SysFlashData,ParaSetC108,48);//从内部information memory中读取存储的参数
    753                  SysSet.SwFlg=0;
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x7001             STRB     R1,[R0, #+0]
    754                  
    755                  // wk --> 写入有效值  第一次全部写入
    756                  for(i=0;i<9;i++)
   \   000000DC   0xF05F 0x0800      MOVS     R8,#+0
   \   000000E0   0xE03F             B.N      ??GUI_SYS_PARASET_2
    757                  {
    758                    temp=2*i;
    759                    temp1=7*i;
    760                    if(i<3)
    761                    {
    762                      ParaSetC108[temp1 + 0] = 0x5004;            //显示相位的X坐标
    763                    }
    764                    else if(i==3)
    765                    {
    766                      ParaSetC108[temp1 + 0] = 0x4004;        //显示相位的X坐标  
    767                    }
    768                    else
    769                    {
    770                      ParaSetC108[temp1 + 0] = 0x2004;        //显示相位的X坐标  
   \                     ??GUI_SYS_PARASET_3:
   \   000000E2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E4   0xA814             ADD      R0,SP,#+80
   \   000000E6   0xF242 0x0104      MOVW     R1,#+8196
   \   000000EA   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
    771                    }
    772                    ParaSetC108[temp1 + 1] = SysParaXY[temp];            //显示相位的X坐标
   \                     ??GUI_SYS_PARASET_4:
   \   000000EE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F0   0xA814             ADD      R0,SP,#+80
   \   000000F2   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   000000F6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F8   0xA90B             ADD      R1,SP,#+44
   \   000000FA   0xF831 0x1015      LDRH     R1,[R1, R5, LSL #+1]
   \   000000FE   0x8041             STRH     R1,[R0, #+2]
    773                    ParaSetC108[temp1 + 2] = SysParaXY[temp + 1];     //Y坐标
   \   00000100   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000102   0xA814             ADD      R0,SP,#+80
   \   00000104   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000108   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000010A   0xA90B             ADD      R1,SP,#+44
   \   0000010C   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000110   0x8849             LDRH     R1,[R1, #+2]
   \   00000112   0x8081             STRH     R1,[R0, #+4]
    774                    ParaSetC108[temp1 + 3] = 0xffff;         //白色，下为黑色
   \   00000114   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000116   0xA814             ADD      R0,SP,#+80
   \   00000118   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000011C   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000120   0x80C1             STRH     R1,[R0, #+6]
    775                    ParaSetC108[temp1 + 4] = 0x0000;
   \   00000122   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000124   0xA814             ADD      R0,SP,#+80
   \   00000126   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000012A   0x2100             MOVS     R1,#+0
   \   0000012C   0x8101             STRH     R1,[R0, #+8]
    776                    ParaSetC108[temp1 + 5] = 0;         //白色，下为黑色
   \   0000012E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000130   0xA814             ADD      R0,SP,#+80
   \   00000132   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000136   0x2100             MOVS     R1,#+0
   \   00000138   0x8141             STRH     R1,[R0, #+10]
    777                    ParaSetC108[temp1 + 6] = (U16) (SysFlashDataT[temp+8]<<8)+(U16)(SysFlashDataT[temp+7]);
   \   0000013A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   00000140   0x1828             ADDS     R0,R5,R0
   \   00000142   0x7A00             LDRB     R0,[R0, #+8]
   \   00000144   0x0200             LSLS     R0,R0,#+8
   \   00000146   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable9_18
   \   0000014C   0x1869             ADDS     R1,R5,R1
   \   0000014E   0x79C9             LDRB     R1,[R1, #+7]
   \   00000150   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000154   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000156   0xA914             ADD      R1,SP,#+80
   \   00000158   0xEB11 0x0146      ADDS     R1,R1,R6, LSL #+1
   \   0000015C   0x8188             STRH     R0,[R1, #+12]
   \   0000015E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_2:
   \   00000162   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000166   0xF1B8 0x0F09      CMP      R8,#+9
   \   0000016A   0xD21E             BCS.N    ??GUI_SYS_PARASET_5
   \   0000016C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000170   0xEA5F 0x0548      LSLS     R5,R8,#+1
   \   00000174   0x2007             MOVS     R0,#+7
   \   00000176   0xFB00 0xF608      MUL      R6,R0,R8
   \   0000017A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000017E   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000182   0xD206             BCS.N    ??GUI_SYS_PARASET_6
   \   00000184   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000186   0xA814             ADD      R0,SP,#+80
   \   00000188   0xF245 0x0104      MOVW     R1,#+20484
   \   0000018C   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   00000190   0xE7AD             B.N      ??GUI_SYS_PARASET_4
   \                     ??GUI_SYS_PARASET_6:
   \   00000192   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000196   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000019A   0xD1A2             BNE.N    ??GUI_SYS_PARASET_3
   \   0000019C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000019E   0xA814             ADD      R0,SP,#+80
   \   000001A0   0xF244 0x0104      MOVW     R1,#+16388
   \   000001A4   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   000001A8   0xE7A1             B.N      ??GUI_SYS_PARASET_4
    778                  }
    779                         
    780                  YADA_C0(ParaSetAddr, ParaSetC108, 63);  // WK --> 写暂存缓冲区
   \                     ??GUI_SYS_PARASET_5:
   \   000001AA   0x223F             MOVS     R2,#+63
   \   000001AC   0xA914             ADD      R1,SP,#+80
   \   000001AE   0xF44F 0x602B      MOV      R0,#+2736
   \   000001B2   0x.... 0x....      BL       YADA_C0
    781                  delay_us(10);
   \   000001B6   0x200A             MOVS     R0,#+10
   \   000001B8   0x.... 0x....      BL       delay_us
    782                  YADA_C108(ParaSetAddr, 9);   //写入有效值，每次10个
   \   000001BC   0x2109             MOVS     R1,#+9
   \   000001BE   0xF44F 0x602B      MOV      R0,#+2736
   \   000001C2   0x.... 0x....      BL       YADA_C108
    783                  delay_us(10);   
   \   000001C6   0x200A             MOVS     R0,#+10
   \   000001C8   0x.... 0x....      BL       delay_us
    784                  
    785                 for(i=0;i<7;i++)  // WK --> 向屏幕 7 个控制按钮写 “开 ”、“关 ”状态
   \   000001CC   0xF05F 0x0800      MOVS     R8,#+0
   \   000001D0   0xE036             B.N      ??GUI_SYS_PARASET_7
    786                 {
    787                    PARA_y=63+i*37;
   \                     ??GUI_SYS_PARASET_8:
   \   000001D2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001D6   0x2025             MOVS     R0,#+37
   \   000001D8   0xFB00 0xF008      MUL      R0,R0,R8
   \   000001DC   0xF110 0x093F      ADDS     R9,R0,#+63
    788                    /* WK --> 清除上一次的状态 */
    789                    YADA_71(MenuParaSET,148, PARA_y,240,PARA_y+24, 148, PARA_y);  //WK --> 剪切图标显示
   \   000001E0   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000001E4   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \   000001E8   0x2094             MOVS     R0,#+148
   \   000001EA   0x9001             STR      R0,[SP, #+4]
   \   000001EC   0xF119 0x0018      ADDS     R0,R9,#+24
   \   000001F0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F2   0x9000             STR      R0,[SP, #+0]
   \   000001F4   0x23F0             MOVS     R3,#+240
   \   000001F6   0x464A             MOV      R2,R9
   \   000001F8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000001FA   0x2194             MOVS     R1,#+148
   \   000001FC   0x200A             MOVS     R0,#+10
   \   000001FE   0x.... 0x....      BL       YADA_71
    790                    YADA_98(152, PARA_y, 0x22, 0x81, 0x02, 0xffff, 0x0000, OFF_ON[SysFlashDataT[i]], 4);// WK -->字库选择
   \   00000202   0x2004             MOVS     R0,#+4
   \   00000204   0x9004             STR      R0,[SP, #+16]
   \   00000206   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   0000020E   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000212   0xA909             ADD      R1,SP,#+36
   \   00000214   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000218   0x9003             STR      R0,[SP, #+12]
   \   0000021A   0x2000             MOVS     R0,#+0
   \   0000021C   0x9002             STR      R0,[SP, #+8]
   \   0000021E   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000222   0x9001             STR      R0,[SP, #+4]
   \   00000224   0x2002             MOVS     R0,#+2
   \   00000226   0x9000             STR      R0,[SP, #+0]
   \   00000228   0x2381             MOVS     R3,#+129
   \   0000022A   0x2222             MOVS     R2,#+34
   \   0000022C   0x4649             MOV      R1,R9
   \   0000022E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000230   0x2098             MOVS     R0,#+152
   \   00000232   0x.... 0x....      BL       YADA_98
    791                    delay_us(10);
   \   00000236   0x200A             MOVS     R0,#+10
   \   00000238   0x.... 0x....      BL       delay_us
    792                 }
   \   0000023C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_7:
   \   00000240   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000244   0xF1B8 0x0F07      CMP      R8,#+7
   \   00000248   0xD3C3             BCC.N    ??GUI_SYS_PARASET_8
    793              }
    794              
    795              if(SysSet.FuncFlg) //wk --> 上移 ，下移
   \                     ??GUI_SYS_PARASET_0:
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   0000024E   0x7840             LDRB     R0,[R0, #+1]
   \   00000250   0x2800             CMP      R0,#+0
   \   00000252   0xD01F             BEQ.N    ??GUI_SYS_PARASET_9
    796              {
    797                  //YADA_5B(&SysParaSetSq[SysParaOldIndex*4],4);  //擦除前一处
    798                  YADA_5B(&SysParaSetSq[SysParaOldIndex*4],4);   // 擦除前一处
   \   00000254   0x2104             MOVS     R1,#+4
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable9_19
   \   0000025A   0x7800             LDRB     R0,[R0, #+0]
   \   0000025C   0xAA34             ADD      R2,SP,#+208
   \   0000025E   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   00000262   0x.... 0x....      BL       YADA_5B
    799                  SysParaOldIndex=SysSet.ParaIndex;
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   0000026A   0x7900             LDRB     R0,[R0, #+4]
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable9_19
   \   00000270   0x7008             STRB     R0,[R1, #+0]
    800                  SysSet.FuncFlg=0;
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   00000276   0x2100             MOVS     R1,#+0
   \   00000278   0x7041             STRB     R1,[R0, #+1]
    801                  SysSet.DataCnt=0; //切换时键盘输入清零
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   0000027E   0x2100             MOVS     R1,#+0
   \   00000280   0x7181             STRB     R1,[R0, #+6]
    802                  YADA_5A(&SysParaSetSq[SysSet.ParaIndex*4],4);      //背景色填充相所在的矩形区域/**/
   \   00000282   0x2104             MOVS     R1,#+4
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   00000288   0x7900             LDRB     R0,[R0, #+4]
   \   0000028A   0xAA34             ADD      R2,SP,#+208
   \   0000028C   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   00000290   0x.... 0x....      BL       YADA_5A
    803                  //YADA_5A(&SysParaSetSq[SysSet.ParaIndex*4],4);    //背景色填充相所在的矩形区域/**/
    804              }
    805              
    806              if(SysSet.DataFlg)//清除时SysSet.DataFlg为1，但DatNumFlg为0
   \                     ??GUI_SYS_PARASET_9:
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   00000298   0x7880             LDRB     R0,[R0, #+2]
   \   0000029A   0x2800             CMP      R0,#+0
   \   0000029C   0xF000 0x8118      BEQ.W    ??GUI_SYS_PARASET_10
    807              {
    808                  if(SysSet.DataCnt==0)
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   000002A4   0x7980             LDRB     R0,[R0, #+6]
   \   000002A6   0x2800             CMP      R0,#+0
   \   000002A8   0xD101             BNE.N    ??GUI_SYS_PARASET_11
    809                  {
    810                      string2U16=0;
   \   000002AA   0x2700             MOVS     R7,#+0
   \   000002AC   0xE019             B.N      ??GUI_SYS_PARASET_12
    811                  }
    812                  else
    813                  for(i=0; i<SysSet.DataCnt; i++) //利用输入数据个数
   \                     ??GUI_SYS_PARASET_11:
   \   000002AE   0xF05F 0x0800      MOVS     R8,#+0
   \   000002B2   0xE00F             B.N      ??GUI_SYS_PARASET_13
    814                  {
    815                          string2U16=string2U16*10+SysSet.Data[i]-'0';    //求整数部分
   \                     ??GUI_SYS_PARASET_14:
   \   000002B4   0x200A             MOVS     R0,#+10
   \   000002B6   0xFB00 0xF007      MUL      R0,R0,R7
   \   000002BA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable9_13
   \   000002C2   0xEB18 0x0101      ADDS     R1,R8,R1
   \   000002C6   0x79C9             LDRB     R1,[R1, #+7]
   \   000002C8   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000002CC   0xF1B0 0x0730      SUBS     R7,R0,#+48
    816                  }
   \   000002D0   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_13:
   \   000002D4   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   000002D8   0x7980             LDRB     R0,[R0, #+6]
   \   000002DA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002DE   0x4580             CMP      R8,R0
   \   000002E0   0xD3E8             BCC.N    ??GUI_SYS_PARASET_14
    817                  
    818                       temp=(SysSet.ParaIndex)*2; //WK --> 
   \                     ??GUI_SYS_PARASET_12:
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   000002E6   0x7900             LDRB     R0,[R0, #+4]
   \   000002E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002EA   0x0045             LSLS     R5,R0,#+1
    819                       SysFlashDataT[temp+7]=(U8)(string2U16);
   \   000002EC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   000002F2   0x1828             ADDS     R0,R5,R0
   \   000002F4   0x71C7             STRB     R7,[R0, #+7]
    820                       SysFlashDataT[temp+8]=(U8)(string2U16>>8);
   \   000002F6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   000002FC   0x1828             ADDS     R0,R5,R0
   \   000002FE   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000300   0x0A39             LSRS     R1,R7,#+8
   \   00000302   0x7201             STRB     R1,[R0, #+8]
    821                       /*　WK --> 重新显示修改过的数据 */
    822                      U16 OneC108[7]= {SysSet.ParaIndex<3?0x5004:(SysSet.ParaIndex==3?0x4004:0x2004),
    823                                        SysParaXY[temp],SysParaXY[temp+1],0xffff,0x0000}; //0x0000 --> 黑
   \   00000304   0xA805             ADD      R0,SP,#+20
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable9_20
   \   0000030A   0xE009             B.N      ??GUI_SYS_PARASET_15
   \                     ??GUI_SYS_PARASET_1:
   \   0000030C   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    
   \   00000310   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    
   \   00000314   0x70 0x77          DC8      "pwd"
   \              0x64 0x00    
   \   00000318   0x32 0x35          DC8      0x32, 0x35, 0x00, 0x00
   \              0x00 0x00    
   \   0000031C   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    
   \                     ??GUI_SYS_PARASET_15:
   \   00000320   0x2210             MOVS     R2,#+16
   \   00000322   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   0000032A   0x7900             LDRB     R0,[R0, #+4]
   \   0000032C   0x2803             CMP      R0,#+3
   \   0000032E   0xD202             BCS.N    ??GUI_SYS_PARASET_16
   \   00000330   0xF245 0x0004      MOVW     R0,#+20484
   \   00000334   0xE009             B.N      ??GUI_SYS_PARASET_17
   \                     ??GUI_SYS_PARASET_16:
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   0000033A   0x7900             LDRB     R0,[R0, #+4]
   \   0000033C   0x2803             CMP      R0,#+3
   \   0000033E   0xD102             BNE.N    ??GUI_SYS_PARASET_18
   \   00000340   0xF244 0x0004      MOVW     R0,#+16388
   \   00000344   0xE001             B.N      ??GUI_SYS_PARASET_19
   \                     ??GUI_SYS_PARASET_18:
   \   00000346   0xF242 0x0004      MOVW     R0,#+8196
   \                     ??GUI_SYS_PARASET_19:
   \                     ??GUI_SYS_PARASET_17:
   \   0000034A   0xF8AD 0x0014      STRH     R0,[SP, #+20]
   \   0000034E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000350   0xA80B             ADD      R0,SP,#+44
   \   00000352   0xF830 0x0015      LDRH     R0,[R0, R5, LSL #+1]
   \   00000356   0xF8AD 0x0016      STRH     R0,[SP, #+22]
   \   0000035A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000035C   0xA80B             ADD      R0,SP,#+44
   \   0000035E   0xEB10 0x0045      ADDS     R0,R0,R5, LSL #+1
   \   00000362   0x8840             LDRH     R0,[R0, #+2]
   \   00000364   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    824                      OneC108[5] =0;
   \   00000368   0x2000             MOVS     R0,#+0
   \   0000036A   0xF8AD 0x001E      STRH     R0,[SP, #+30]
    825                      OneC108[6] =(U16) (SysFlashDataT[temp+8]<<8)+(U16)(SysFlashDataT[temp+7]);
   \   0000036E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000370   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   00000374   0x1828             ADDS     R0,R5,R0
   \   00000376   0x7A00             LDRB     R0,[R0, #+8]
   \   00000378   0x0200             LSLS     R0,R0,#+8
   \   0000037A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable9_18
   \   00000380   0x1869             ADDS     R1,R5,R1
   \   00000382   0x79C9             LDRB     R1,[R1, #+7]
   \   00000384   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000388   0xF8AD 0x0020      STRH     R0,[SP, #+32]
    826                      
    827                      switch(SysSet.ParaIndex) // WK --> 阈值判断
   \   0000038C   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   00000390   0x7900             LDRB     R0,[R0, #+4]
   \   00000392   0x2800             CMP      R0,#+0
   \   00000394   0xD00C             BEQ.N    ??GUI_SYS_PARASET_20
   \   00000396   0x2802             CMP      R0,#+2
   \   00000398   0xD024             BEQ.N    ??GUI_SYS_PARASET_21
   \   0000039A   0xD316             BCC.N    ??GUI_SYS_PARASET_22
   \   0000039C   0x2804             CMP      R0,#+4
   \   0000039E   0xD03D             BEQ.N    ??GUI_SYS_PARASET_23
   \   000003A0   0xD32D             BCC.N    ??GUI_SYS_PARASET_24
   \   000003A2   0x2806             CMP      R0,#+6
   \   000003A4   0xD054             BEQ.N    ??GUI_SYS_PARASET_25
   \   000003A6   0xD346             BCC.N    ??GUI_SYS_PARASET_26
   \   000003A8   0x2808             CMP      R0,#+8
   \   000003AA   0xD06B             BEQ.N    ??GUI_SYS_PARASET_27
   \   000003AC   0xD35D             BCC.N    ??GUI_SYS_PARASET_28
   \   000003AE   0xE076             B.N      ??GUI_SYS_PARASET_29
    828                      {
    829                      case 0:
    830                         if(OneC108[6]>200)
   \                     ??GUI_SYS_PARASET_20:
   \   000003B0   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003B4   0x28C9             CMP      R0,#+201
   \   000003B6   0xD307             BCC.N    ??GUI_SYS_PARASET_30
    831                        { 
    832                          OneC108[3]=0xf800;
   \   000003B8   0xF44F 0x4078      MOV      R0,#+63488
   \   000003BC   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    833                          flg_sys[0]=1; // 统计时间超限标志
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   000003C4   0x2101             MOVS     R1,#+1
   \   000003C6   0x7001             STRB     R1,[R0, #+0]
    834                        }
    835                         break;
   \                     ??GUI_SYS_PARASET_30:
   \   000003C8   0xE069             B.N      ??GUI_SYS_PARASET_31
    836                      case 1:
    837                         if(OneC108[6]>200)
   \                     ??GUI_SYS_PARASET_22:
   \   000003CA   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003CE   0x28C9             CMP      R0,#+201
   \   000003D0   0xD307             BCC.N    ??GUI_SYS_PARASET_32
    838                        { 
    839                          OneC108[3]=0xf800;
   \   000003D2   0xF44F 0x4078      MOV      R0,#+63488
   \   000003D6   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    840                          flg_sys[1]=1; // 存数时间超限标志
   \   000003DA   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   000003DE   0x2101             MOVS     R1,#+1
   \   000003E0   0x7041             STRB     R1,[R0, #+1]
    841                        }
    842                         break;
   \                     ??GUI_SYS_PARASET_32:
   \   000003E2   0xE05C             B.N      ??GUI_SYS_PARASET_31
    843                      case 2:
    844                        if(OneC108[6]>200)
   \                     ??GUI_SYS_PARASET_21:
   \   000003E4   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003E8   0x28C9             CMP      R0,#+201
   \   000003EA   0xD307             BCC.N    ??GUI_SYS_PARASET_33
    845                        { 
    846                          OneC108[3]=0xf800;
   \   000003EC   0xF44F 0x4078      MOV      R0,#+63488
   \   000003F0   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    847                          flg_sys[2]=1; //上传时间超限标志
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   000003F8   0x2101             MOVS     R1,#+1
   \   000003FA   0x7081             STRB     R1,[R0, #+2]
    848                        }
    849                         break;
   \                     ??GUI_SYS_PARASET_33:
   \   000003FC   0xE04F             B.N      ??GUI_SYS_PARASET_31
    850                      case 3:  // year
    851                        if(OneC108[6]>5000)  
   \                     ??GUI_SYS_PARASET_24:
   \   000003FE   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000402   0xF241 0x3189      MOVW     R1,#+5001
   \   00000406   0x4288             CMP      R0,R1
   \   00000408   0xD307             BCC.N    ??GUI_SYS_PARASET_34
    852                        {
    853                          OneC108[3]=0xf800;
   \   0000040A   0xF44F 0x4078      MOV      R0,#+63488
   \   0000040E   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    854                          flg_sys[3]=1; // 年超限标志
   \   00000412   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   00000416   0x2101             MOVS     R1,#+1
   \   00000418   0x70C1             STRB     R1,[R0, #+3]
    855                        }
    856                         break;
   \                     ??GUI_SYS_PARASET_34:
   \   0000041A   0xE040             B.N      ??GUI_SYS_PARASET_31
    857                      case 4:
    858                        if(OneC108[6]>12)  
   \                     ??GUI_SYS_PARASET_23:
   \   0000041C   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000420   0x280D             CMP      R0,#+13
   \   00000422   0xD307             BCC.N    ??GUI_SYS_PARASET_35
    859                        {
    860                          OneC108[3]=0xf800;
   \   00000424   0xF44F 0x4078      MOV      R0,#+63488
   \   00000428   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    861                          flg_sys[4]=1;// 月超限标志
   \   0000042C   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   00000430   0x2101             MOVS     R1,#+1
   \   00000432   0x7101             STRB     R1,[R0, #+4]
    862                        }
    863                         break;
   \                     ??GUI_SYS_PARASET_35:
   \   00000434   0xE033             B.N      ??GUI_SYS_PARASET_31
    864                      case 5:
    865                        if(OneC108[6]>30) 
   \                     ??GUI_SYS_PARASET_26:
   \   00000436   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000043A   0x281F             CMP      R0,#+31
   \   0000043C   0xD307             BCC.N    ??GUI_SYS_PARASET_36
    866                        {
    867                          OneC108[3]=0xf800;
   \   0000043E   0xF44F 0x4078      MOV      R0,#+63488
   \   00000442   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    868                          flg_sys[5] =1; // 日超限标志
   \   00000446   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   0000044A   0x2101             MOVS     R1,#+1
   \   0000044C   0x7141             STRB     R1,[R0, #+5]
    869                        }
    870                         break;
   \                     ??GUI_SYS_PARASET_36:
   \   0000044E   0xE026             B.N      ??GUI_SYS_PARASET_31
    871                      case 6:
    872                         if(OneC108[6]>24)
   \                     ??GUI_SYS_PARASET_25:
   \   00000450   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000454   0x2819             CMP      R0,#+25
   \   00000456   0xD307             BCC.N    ??GUI_SYS_PARASET_37
    873                         { OneC108[3]=0xf800;
   \   00000458   0xF44F 0x4078      MOV      R0,#+63488
   \   0000045C   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    874                           flg_sys[6]=1; //小时超限标志
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   00000464   0x2101             MOVS     R1,#+1
   \   00000466   0x7181             STRB     R1,[R0, #+6]
    875                         }
    876                         break;
   \                     ??GUI_SYS_PARASET_37:
   \   00000468   0xE019             B.N      ??GUI_SYS_PARASET_31
    877                      case 7:
    878                        if(OneC108[6]>60)
   \                     ??GUI_SYS_PARASET_28:
   \   0000046A   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000046E   0x283D             CMP      R0,#+61
   \   00000470   0xD307             BCC.N    ??GUI_SYS_PARASET_38
    879                        { OneC108[3]=0xf800;
   \   00000472   0xF44F 0x4078      MOV      R0,#+63488
   \   00000476   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    880                          flg_sys[7]=1; // 分超限标志
   \   0000047A   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   0000047E   0x2101             MOVS     R1,#+1
   \   00000480   0x71C1             STRB     R1,[R0, #+7]
    881                        }
    882                        break;
   \                     ??GUI_SYS_PARASET_38:
   \   00000482   0xE00C             B.N      ??GUI_SYS_PARASET_31
    883                      case 8:
    884                        if(OneC108[6]>60)
   \                     ??GUI_SYS_PARASET_27:
   \   00000484   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000488   0x283D             CMP      R0,#+61
   \   0000048A   0xD307             BCC.N    ??GUI_SYS_PARASET_39
    885                        { OneC108[3]=0xf800;
   \   0000048C   0xF44F 0x4078      MOV      R0,#+63488
   \   00000490   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    886                          flg_sys[8]=1; // 秒超限标志
   \   00000494   0x.... 0x....      LDR.W    R0,??DataTable9_21
   \   00000498   0x2101             MOVS     R1,#+1
   \   0000049A   0x7201             STRB     R1,[R0, #+8]
    887                        }
    888                        break;
   \                     ??GUI_SYS_PARASET_39:
   \   0000049C   0xE7FF             B.N      ??GUI_SYS_PARASET_31
    889                      default:
    890                        break;
    891                      }
    892                      YADA_C0(ParaSetAddr+SysSet.ParaIndex*7, OneC108, 7);//修改发生改变的数据项
   \                     ??GUI_SYS_PARASET_29:
   \                     ??GUI_SYS_PARASET_31:
   \   0000049E   0x2207             MOVS     R2,#+7
   \   000004A0   0xA905             ADD      R1,SP,#+20
   \   000004A2   0x.... 0x....      LDR.W    R0,??DataTable9_13
   \   000004A6   0x7900             LDRB     R0,[R0, #+4]
   \   000004A8   0x2307             MOVS     R3,#+7
   \   000004AA   0x4358             MULS     R0,R3,R0
   \   000004AC   0xF510 0x602B      ADDS     R0,R0,#+2736
   \   000004B0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000004B2   0x.... 0x....      BL       YADA_C0
    893                      YADA_C108(ParaSetAddr+SysSet.ParaIndex*7, 1);
   \   000004B6   0x2101             MOVS     R1,#+1
   \   000004B8   0x....             LDR.N    R0,??DataTable9_13
   \   000004BA   0x7900             LDRB     R0,[R0, #+4]
   \   000004BC   0x2207             MOVS     R2,#+7
   \   000004BE   0x4350             MULS     R0,R2,R0
   \   000004C0   0xF510 0x602B      ADDS     R0,R0,#+2736
   \   000004C4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000004C6   0x.... 0x....      BL       YADA_C108
    894                       
    895                      SysSet.DataFlg=0;
   \   000004CA   0x....             LDR.N    R0,??DataTable9_13
   \   000004CC   0x2100             MOVS     R1,#+0
   \   000004CE   0x7081             STRB     R1,[R0, #+2]
    896                
    897              }
    898              if(SysSet.SwitchSet[7]==1)
   \                     ??GUI_SYS_PARASET_10:
   \   000004D0   0x....             LDR.N    R0,??DataTable9_13
   \   000004D2   0x7CC0             LDRB     R0,[R0, #+19]
   \   000004D4   0x2801             CMP      R0,#+1
   \   000004D6   0xD148             BNE.N    ??GUI_SYS_PARASET_40
    899              {
    900                for(i=0;i<7;i++)  // WK --> 向屏幕 7 个控制按钮写 “开 ”、“关 ”状态
   \   000004D8   0xF05F 0x0800      MOVS     R8,#+0
   \   000004DC   0xE040             B.N      ??GUI_SYS_PARASET_41
    901                {
    902                      PARA_y=63+i*37;
   \                     ??GUI_SYS_PARASET_42:
   \   000004DE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000004E2   0x2025             MOVS     R0,#+37
   \   000004E4   0xFB00 0xF008      MUL      R0,R0,R8
   \   000004E8   0xF110 0x093F      ADDS     R9,R0,#+63
    903                      SysFlashDataT[i]=SysSet.SwitchSet[i];
   \   000004EC   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000004F0   0x....             LDR.N    R0,??DataTable9_13
   \   000004F2   0xEB18 0x0000      ADDS     R0,R8,R0
   \   000004F6   0x7B00             LDRB     R0,[R0, #+12]
   \   000004F8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000004FC   0x....             LDR.N    R1,??DataTable9_18
   \   000004FE   0xF808 0x0001      STRB     R0,[R8, R1]
    904                      /* WK --> 清除上一次的状态 */
    905                      YADA_71(MenuParaSET,148, PARA_y,240,PARA_y+24, 148, PARA_y);  //WK --> 剪切图标显示
   \   00000502   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000506   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \   0000050A   0x2094             MOVS     R0,#+148
   \   0000050C   0x9001             STR      R0,[SP, #+4]
   \   0000050E   0xF119 0x0018      ADDS     R0,R9,#+24
   \   00000512   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000514   0x9000             STR      R0,[SP, #+0]
   \   00000516   0x23F0             MOVS     R3,#+240
   \   00000518   0x464A             MOV      R2,R9
   \   0000051A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000051C   0x2194             MOVS     R1,#+148
   \   0000051E   0x200A             MOVS     R0,#+10
   \   00000520   0x.... 0x....      BL       YADA_71
    906                      YADA_98(152, PARA_y, 0x22, 0x81, 0x02, 0xffff, 0x0000, OFF_ON[SysFlashDataT[i]], 4);// WK -->字库选择
   \   00000524   0x2004             MOVS     R0,#+4
   \   00000526   0x9004             STR      R0,[SP, #+16]
   \   00000528   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000052C   0x....             LDR.N    R0,??DataTable9_18
   \   0000052E   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000532   0xA909             ADD      R1,SP,#+36
   \   00000534   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000538   0x9003             STR      R0,[SP, #+12]
   \   0000053A   0x2000             MOVS     R0,#+0
   \   0000053C   0x9002             STR      R0,[SP, #+8]
   \   0000053E   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000542   0x9001             STR      R0,[SP, #+4]
   \   00000544   0x2002             MOVS     R0,#+2
   \   00000546   0x9000             STR      R0,[SP, #+0]
   \   00000548   0x2381             MOVS     R3,#+129
   \   0000054A   0x2222             MOVS     R2,#+34
   \   0000054C   0x4649             MOV      R1,R9
   \   0000054E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000550   0x2098             MOVS     R0,#+152
   \   00000552   0x.... 0x....      BL       YADA_98
    907                      delay_us(10);
   \   00000556   0x200A             MOVS     R0,#+10
   \   00000558   0x.... 0x....      BL       delay_us
    908                }
   \   0000055C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_41:
   \   00000560   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000564   0xF1B8 0x0F07      CMP      R8,#+7
   \   00000568   0xD3B9             BCC.N    ??GUI_SYS_PARASET_42
    909              }
    910              /* WK --> 保存键 */
    911              if(SysSet.SaveFlg)
   \                     ??GUI_SYS_PARASET_40:
   \   0000056A   0x....             LDR.N    R0,??DataTable9_13
   \   0000056C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000056E   0x2800             CMP      R0,#+0
   \   00000570   0xF000 0x8131      BEQ.W    ??GUI_SYS_PARASET_43
    912              {    
    913                /* pwd*/
    914          //     shell_ptr->ARGC=1;
    915          //     shell_ptr->ARGV[0]="pwd";
    916          //     Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
    917                for(int i=0;i<9;i++) // wk @130326 --> 对超出阈值的进行处理
   \   00000574   0x2000             MOVS     R0,#+0
   \   00000576   0xE00D             B.N      ??GUI_SYS_PARASET_44
    918                {
    919                  if(flg_sys[i]==1)
    920                    switch(i)
    921                    {
    922                    case 0:
    923                    case 1:
    924                    case 2:
    925                      SysFlashDataT[2*i+7]=200;
    926                      SysFlashDataT[2*i+8]=0;
    927                      flg_sys[i]=0;
    928                     break;
    929                    case 3:
    930                      SysFlashDataT[2*i+7]=0x88;
    931                      SysFlashDataT[2*i+8]=0x13;
    932                      flg_sys[i]=0;
    933                     break;
    934                    case 4:
    935                      SysFlashDataT[2*i+7]=12;
    936                      SysFlashDataT[2*i+8]=0;
    937                      flg_sys[i]=0;
    938                      break;
    939                    case 5:
    940                      SysFlashDataT[2*i+7]=60;
    941                      SysFlashDataT[2*i+8]=0;
    942                      flg_sys[i]=0;
    943                      break;
    944                    case 6:
    945                      SysFlashDataT[2*i+7]=24;
    946                      SysFlashDataT[2*i+8]=0;
    947                      flg_sys[i]=0;
    948                      break;
    949                    case 7:
    950                      SysFlashDataT[2*i+7]=60;
    951                      SysFlashDataT[2*i+8]=0;
    952                      flg_sys[i]=0;
    953                      break;
    954                    case 8:
    955                      SysFlashDataT[2*i+7]=60;
   \                     ??GUI_SYS_PARASET_45:
   \   00000578   0x....             LDR.N    R1,??DataTable9_18
   \   0000057A   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000057E   0x223C             MOVS     R2,#+60
   \   00000580   0x71CA             STRB     R2,[R1, #+7]
    956                      SysFlashDataT[2*i+8]=0;
   \   00000582   0x....             LDR.N    R1,??DataTable9_18
   \   00000584   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000588   0x2200             MOVS     R2,#+0
   \   0000058A   0x720A             STRB     R2,[R1, #+8]
    957                      flg_sys[i]=0;
   \   0000058C   0x....             LDR.N    R1,??DataTable9_21
   \   0000058E   0x2200             MOVS     R2,#+0
   \   00000590   0x5442             STRB     R2,[R0, R1]
    958                      break;
   \                     ??GUI_SYS_PARASET_46:
   \   00000592   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_PARASET_44:
   \   00000594   0x2809             CMP      R0,#+9
   \   00000596   0xDA66             BGE.N    ??GUI_SYS_PARASET_47
   \   00000598   0x....             LDR.N    R1,??DataTable9_21
   \   0000059A   0x5C41             LDRB     R1,[R0, R1]
   \   0000059C   0x2901             CMP      R1,#+1
   \   0000059E   0xD1F8             BNE.N    ??GUI_SYS_PARASET_46
   \   000005A0   0x2800             CMP      R0,#+0
   \   000005A2   0xD00C             BEQ.N    ??GUI_SYS_PARASET_48
   \   000005A4   0x2802             CMP      R0,#+2
   \   000005A6   0xD00A             BEQ.N    ??GUI_SYS_PARASET_48
   \   000005A8   0xD309             BCC.N    ??GUI_SYS_PARASET_48
   \   000005AA   0x2804             CMP      R0,#+4
   \   000005AC   0xD023             BEQ.N    ??GUI_SYS_PARASET_49
   \   000005AE   0xD314             BCC.N    ??GUI_SYS_PARASET_50
   \   000005B0   0x2806             CMP      R0,#+6
   \   000005B2   0xD03C             BEQ.N    ??GUI_SYS_PARASET_51
   \   000005B4   0xD32D             BCC.N    ??GUI_SYS_PARASET_52
   \   000005B6   0x2808             CMP      R0,#+8
   \   000005B8   0xD0DE             BEQ.N    ??GUI_SYS_PARASET_45
   \   000005BA   0xD346             BCC.N    ??GUI_SYS_PARASET_53
   \   000005BC   0xE7E9             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_48:
   \   000005BE   0x....             LDR.N    R1,??DataTable9_18
   \   000005C0   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005C4   0x22C8             MOVS     R2,#+200
   \   000005C6   0x71CA             STRB     R2,[R1, #+7]
   \   000005C8   0x....             LDR.N    R1,??DataTable9_18
   \   000005CA   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005CE   0x2200             MOVS     R2,#+0
   \   000005D0   0x720A             STRB     R2,[R1, #+8]
   \   000005D2   0x....             LDR.N    R1,??DataTable9_21
   \   000005D4   0x2200             MOVS     R2,#+0
   \   000005D6   0x5442             STRB     R2,[R0, R1]
   \   000005D8   0xE7DB             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_50:
   \   000005DA   0x....             LDR.N    R1,??DataTable9_18
   \   000005DC   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005E0   0x2288             MOVS     R2,#+136
   \   000005E2   0x71CA             STRB     R2,[R1, #+7]
   \   000005E4   0x....             LDR.N    R1,??DataTable9_18
   \   000005E6   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005EA   0x2213             MOVS     R2,#+19
   \   000005EC   0x720A             STRB     R2,[R1, #+8]
   \   000005EE   0x....             LDR.N    R1,??DataTable9_21
   \   000005F0   0x2200             MOVS     R2,#+0
   \   000005F2   0x5442             STRB     R2,[R0, R1]
   \   000005F4   0xE7CD             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_49:
   \   000005F6   0x....             LDR.N    R1,??DataTable9_18
   \   000005F8   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005FC   0x220C             MOVS     R2,#+12
   \   000005FE   0x71CA             STRB     R2,[R1, #+7]
   \   00000600   0x....             LDR.N    R1,??DataTable9_18
   \   00000602   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000606   0x2200             MOVS     R2,#+0
   \   00000608   0x720A             STRB     R2,[R1, #+8]
   \   0000060A   0x....             LDR.N    R1,??DataTable9_21
   \   0000060C   0x2200             MOVS     R2,#+0
   \   0000060E   0x5442             STRB     R2,[R0, R1]
   \   00000610   0xE7BF             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_52:
   \   00000612   0x....             LDR.N    R1,??DataTable9_18
   \   00000614   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000618   0x223C             MOVS     R2,#+60
   \   0000061A   0x71CA             STRB     R2,[R1, #+7]
   \   0000061C   0x....             LDR.N    R1,??DataTable9_18
   \   0000061E   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000622   0x2200             MOVS     R2,#+0
   \   00000624   0x720A             STRB     R2,[R1, #+8]
   \   00000626   0x....             LDR.N    R1,??DataTable9_21
   \   00000628   0x2200             MOVS     R2,#+0
   \   0000062A   0x5442             STRB     R2,[R0, R1]
   \   0000062C   0xE7B1             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_51:
   \   0000062E   0x....             LDR.N    R1,??DataTable9_18
   \   00000630   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000634   0x2218             MOVS     R2,#+24
   \   00000636   0x71CA             STRB     R2,[R1, #+7]
   \   00000638   0x....             LDR.N    R1,??DataTable9_18
   \   0000063A   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000063E   0x2200             MOVS     R2,#+0
   \   00000640   0x720A             STRB     R2,[R1, #+8]
   \   00000642   0x....             LDR.N    R1,??DataTable9_21
   \   00000644   0x2200             MOVS     R2,#+0
   \   00000646   0x5442             STRB     R2,[R0, R1]
   \   00000648   0xE7A3             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_53:
   \   0000064A   0x....             LDR.N    R1,??DataTable9_18
   \   0000064C   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000650   0x223C             MOVS     R2,#+60
   \   00000652   0x71CA             STRB     R2,[R1, #+7]
   \   00000654   0x....             LDR.N    R1,??DataTable9_18
   \   00000656   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000065A   0x2200             MOVS     R2,#+0
   \   0000065C   0x720A             STRB     R2,[R1, #+8]
   \   0000065E   0x....             LDR.N    R1,??DataTable9_21
   \   00000660   0x2200             MOVS     R2,#+0
   \   00000662   0x5442             STRB     R2,[R0, R1]
   \   00000664   0xE795             B.N      ??GUI_SYS_PARASET_46
    959                    }
    960                }
    961                
    962          #if 0 //WK -->保存时  SysFlashData 全部保存 
    963              for(int i=0;i<84;i++) 
    964              {
    965                SysFlashSave[i]=SysFlashDataT[i];
    966              }
    967              shell_ptr->ARGC=2;
    968              shell_ptr->ARGV[0]="cd";
    969              shell_ptr->ARGV[1]="f:\\"; 
    970              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    971              
    972              shell_ptr->ARGC = 2;
    973              shell_ptr->ARGV[0]="cd";
    974              shell_ptr->ARGV[1]="sysset";
    975              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    976              
    977              shell_ptr->ARGC=4;
    978              shell_ptr->ARGV[0]="w";
    979              shell_ptr->ARGV[1]="sysset.txt";
    980              shell_ptr->ARGV[2]="begin";
    981              shell_ptr->ARGV[3]="0";
    982              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashDataT);
    983              
    984              shell_ptr->ARGC=2;
    985              shell_ptr->ARGV[0]="update"; // wk --> update
    986              shell_ptr->ARGV[1]="flush";
    987          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashSave);
    988              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
    989          #endif  // WK -->保存时  SysFlashData 全部保存 END
    990             
    991          #if 1 // wk --> 只保存系统设置参数界面的参数   1-25
    992              for(int i=0;i<25;i++) 
   \                     ??GUI_SYS_PARASET_47:
   \   00000666   0x2000             MOVS     R0,#+0
   \   00000668   0xE005             B.N      ??GUI_SYS_PARASET_54
    993              {
    994                SysFlashData[i]=SysFlashDataT[i];
   \                     ??GUI_SYS_PARASET_55:
   \   0000066A   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000066E   0x....             LDR.N    R2,??DataTable9_18
   \   00000670   0x5C82             LDRB     R2,[R0, R2]
   \   00000672   0x5442             STRB     R2,[R0, R1]
    995              }
   \   00000674   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_PARASET_54:
   \   00000676   0x2819             CMP      R0,#+25
   \   00000678   0xDBF7             BLT.N    ??GUI_SYS_PARASET_55
    996              shell_ptr->ARGC=2;
   \   0000067A   0x2002             MOVS     R0,#+2
   \   0000067C   0x6220             STR      R0,[R4, #+32]
    997              shell_ptr->ARGV[0]="cd";
   \   0000067E   0x....             ADR.N    R0,??DataTable9_3  ;; 0x63, 0x64, 0x00, 0x00
   \   00000680   0x6020             STR      R0,[R4, #+0]
    998              shell_ptr->ARGV[1]="f:\\"; 
   \   00000682   0x....             ADR.N    R0,??DataTable9_4  ;; "f:\\"
   \   00000684   0x6060             STR      R0,[R4, #+4]
    999              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                     ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   00000686   0x0021             MOVS     R1,R4
   \   00000688   0x6A20             LDR      R0,[R4, #+32]
   \   0000068A   0x.... 0x....      BL       Shell_cd
   1000              
   1001              shell_ptr->ARGC = 2;
   \   0000068E   0x2002             MOVS     R0,#+2
   \   00000690   0x6220             STR      R0,[R4, #+32]
   1002              shell_ptr->ARGV[0]="cd";
   \   00000692   0x....             ADR.N    R0,??DataTable9_3  ;; 0x63, 0x64, 0x00, 0x00
   \   00000694   0x6020             STR      R0,[R4, #+0]
   1003              shell_ptr->ARGV[1]="sysset";
   \   00000696   0x....             LDR.N    R0,??DataTable9_14
   \   00000698   0x6060             STR      R0,[R4, #+4]
   1004              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000069A   0x0021             MOVS     R1,R4
   \   0000069C   0x6A20             LDR      R0,[R4, #+32]
   \   0000069E   0x.... 0x....      BL       Shell_cd
   1005              
   1006              shell_ptr->ARGC=4;
   \   000006A2   0x2004             MOVS     R0,#+4
   \   000006A4   0x6220             STR      R0,[R4, #+32]
   1007              shell_ptr->ARGV[0]="w";
   \   000006A6   0x....             ADR.N    R0,??DataTable9_5  ;; "w"
   \   000006A8   0x6020             STR      R0,[R4, #+0]
   1008              shell_ptr->ARGV[1]="sysset.txt";
   \   000006AA   0x....             LDR.N    R0,??DataTable9_16
   \   000006AC   0x6060             STR      R0,[R4, #+4]
   1009              shell_ptr->ARGV[2]="begin";
   \   000006AE   0x....             LDR.N    R0,??DataTable9_17
   \   000006B0   0x60A0             STR      R0,[R4, #+8]
   1010              shell_ptr->ARGV[3]="0";
   \   000006B2   0x....             ADR.N    R0,??DataTable9_7  ;; "0"
   \   000006B4   0x60E0             STR      R0,[R4, #+12]
   1011              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,25,SysFlashData); 
                     ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   000006B6   0x.... 0x....      LDR.W    R3,??DataTable11
   \   000006BA   0x2219             MOVS     R2,#+25
   \   000006BC   0x0021             MOVS     R1,R4
   \   000006BE   0x6A20             LDR      R0,[R4, #+32]
   \   000006C0   0x.... 0x....      BL       Shell_write_binary
   1012              
   1013              shell_ptr->ARGC=2;
   \   000006C4   0x2002             MOVS     R0,#+2
   \   000006C6   0x6220             STR      R0,[R4, #+32]
   1014              shell_ptr->ARGV[0]="update";// wk --> update
   \   000006C8   0x.... 0x....      LDR.W    R0,??DataTable11_4
   \   000006CC   0x6020             STR      R0,[R4, #+0]
   1015              shell_ptr->ARGV[1]="flush";
   \   000006CE   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   000006D2   0x6060             STR      R0,[R4, #+4]
   1016          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,25,SysFlashSave);
   1017              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
                     ^
Warning[Pe223]: function "Shell_update" declared implicitly
   \   000006D4   0x0021             MOVS     R1,R4
   \   000006D6   0x6A20             LDR      R0,[R4, #+32]
   \   000006D8   0x.... 0x....      BL       Shell_update
   1018          #endif // wk --> 只保存系统设置参数界面的参数   1-25
   1019              
   1020              /*WK --> 保存成功标志 */
   1021              for(i=0;i<9;i++)
   \   000006DC   0xF05F 0x0800      MOVS     R8,#+0
   \   000006E0   0xE03D             B.N      ??GUI_SYS_PARASET_56
   1022                  {
   1023                    temp=2*i;
   1024                    temp1=7*i;
   1025                    if(i<3)
   1026                    {
   1027                      ParaSetC108[temp1 + 0] = 0x5004;            //显示相位的X坐标
   1028                    }
   1029                    else if(i==3)
   1030                    {
   1031                      ParaSetC108[temp1 + 0] = 0x4004;        //显示相位的X坐标  
   1032                    }
   1033                    else
   1034                    {
   1035                      ParaSetC108[temp1 + 0] = 0x2004;        //显示相位的X坐标  
   \                     ??GUI_SYS_PARASET_57:
   \   000006E2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000006E4   0xA814             ADD      R0,SP,#+80
   \   000006E6   0xF242 0x0104      MOVW     R1,#+8196
   \   000006EA   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   1036                    }
   1037                    ParaSetC108[temp1 + 1] = SysParaXY[temp];            //显示相位的X坐标
   \                     ??GUI_SYS_PARASET_58:
   \   000006EE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000006F0   0xA814             ADD      R0,SP,#+80
   \   000006F2   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   000006F6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006F8   0xA90B             ADD      R1,SP,#+44
   \   000006FA   0xF831 0x1015      LDRH     R1,[R1, R5, LSL #+1]
   \   000006FE   0x8041             STRH     R1,[R0, #+2]
   1038                    ParaSetC108[temp1 + 2] = SysParaXY[temp + 1];     //Y坐标
   \   00000700   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000702   0xA814             ADD      R0,SP,#+80
   \   00000704   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000708   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000070A   0xA90B             ADD      R1,SP,#+44
   \   0000070C   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000710   0x8849             LDRH     R1,[R1, #+2]
   \   00000712   0x8081             STRH     R1,[R0, #+4]
   1039                    ParaSetC108[temp1 + 3] = 0xffc1;         //黄色，下为黑色
   \   00000714   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000716   0xA814             ADD      R0,SP,#+80
   \   00000718   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000071C   0xF64F 0x71C1      MOVW     R1,#+65473
   \   00000720   0x80C1             STRH     R1,[R0, #+6]
   1040                    ParaSetC108[temp1 + 4] = 0x0000;
   \   00000722   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000724   0xA814             ADD      R0,SP,#+80
   \   00000726   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000072A   0x2100             MOVS     R1,#+0
   \   0000072C   0x8101             STRH     R1,[R0, #+8]
   1041                    ParaSetC108[temp1 + 5] = 0;         //白色，下为黑色
   \   0000072E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000730   0xA814             ADD      R0,SP,#+80
   \   00000732   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000736   0x2100             MOVS     R1,#+0
   \   00000738   0x8141             STRH     R1,[R0, #+10]
   1042                    ParaSetC108[temp1 + 6] = (U16) (SysFlashDataT[temp+8]<<8)+(U16)(SysFlashDataT[temp+7]);
   \   0000073A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000073C   0x....             LDR.N    R0,??DataTable9_18
   \   0000073E   0x1828             ADDS     R0,R5,R0
   \   00000740   0x7A00             LDRB     R0,[R0, #+8]
   \   00000742   0x0200             LSLS     R0,R0,#+8
   \   00000744   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000746   0x....             LDR.N    R1,??DataTable9_18
   \   00000748   0x1869             ADDS     R1,R5,R1
   \   0000074A   0x79C9             LDRB     R1,[R1, #+7]
   \   0000074C   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000750   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000752   0xA914             ADD      R1,SP,#+80
   \   00000754   0xEB11 0x0146      ADDS     R1,R1,R6, LSL #+1
   \   00000758   0x8188             STRH     R0,[R1, #+12]
   \   0000075A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_56:
   \   0000075E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000762   0xF1B8 0x0F09      CMP      R8,#+9
   \   00000766   0xD21E             BCS.N    ??GUI_SYS_PARASET_59
   \   00000768   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000076C   0xEA5F 0x0548      LSLS     R5,R8,#+1
   \   00000770   0x2007             MOVS     R0,#+7
   \   00000772   0xFB00 0xF608      MUL      R6,R0,R8
   \   00000776   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000077A   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000077E   0xD206             BCS.N    ??GUI_SYS_PARASET_60
   \   00000780   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000782   0xA814             ADD      R0,SP,#+80
   \   00000784   0xF245 0x0104      MOVW     R1,#+20484
   \   00000788   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   0000078C   0xE7AF             B.N      ??GUI_SYS_PARASET_58
   \                     ??GUI_SYS_PARASET_60:
   \   0000078E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000792   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000796   0xD1A4             BNE.N    ??GUI_SYS_PARASET_57
   \   00000798   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000079A   0xA814             ADD      R0,SP,#+80
   \   0000079C   0xF244 0x0104      MOVW     R1,#+16388
   \   000007A0   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   000007A4   0xE7A3             B.N      ??GUI_SYS_PARASET_58
   1043                  }
   1044                  YADA_C0(ParaSetAddr, ParaSetC108, 63);  // WK --> 写暂存缓冲区
   \                     ??GUI_SYS_PARASET_59:
   \   000007A6   0x223F             MOVS     R2,#+63
   \   000007A8   0xA914             ADD      R1,SP,#+80
   \   000007AA   0xF44F 0x602B      MOV      R0,#+2736
   \   000007AE   0x.... 0x....      BL       YADA_C0
   1045                  delay_us(10);
   \   000007B2   0x200A             MOVS     R0,#+10
   \   000007B4   0x.... 0x....      BL       delay_us
   1046                  YADA_C108(ParaSetAddr, 9);   //写入有效值，每次10个
   \   000007B8   0x2109             MOVS     R1,#+9
   \   000007BA   0xF44F 0x602B      MOV      R0,#+2736
   \   000007BE   0x.... 0x....      BL       YADA_C108
   1047                  delay_us(10);  
   \   000007C2   0x200A             MOVS     R0,#+10
   \   000007C4   0x.... 0x....      BL       delay_us
   1048                  
   1049                  SysSet.SaveFlg=0;  // WK --> 清楚标志
   \   000007C8   0x....             LDR.N    R0,??DataTable9_13
   \   000007CA   0x2100             MOVS     R1,#+0
   \   000007CC   0x70C1             STRB     R1,[R0, #+3]
   1050                  _mem_free(shell_ptr); 
   \   000007CE   0x0020             MOVS     R0,R4
   \   000007D0   0x.... 0x....      BL       _lwmem_free
   \   000007D4   0xE002             B.N      ??GUI_SYS_PARASET_61
   1051              }
   1052              else
   1053                 _mem_free(shell_ptr); 
   \                     ??GUI_SYS_PARASET_43:
   \   000007D6   0x0020             MOVS     R0,R4
   \   000007D8   0x.... 0x....      BL       _lwmem_free
   1054          }
   \                     ??GUI_SYS_PARASET_61:
   \   000007DC   0xB047             ADD      SP,SP,#+284
   \   000007DE   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??flg_sys:
   \   00000000                      DS8 12
   1055          /*******************************************************************************
   1056          * 函  数  名      : GUI_SYS_EVENTSET
   1057          * 描      述      : 事件限值设定。可通过移位键选择各项设置
   1058          * 输      入      : 无
   1059          * 返      回      : 无
   1060          *
   1061          * 修       改     : WK
   1062          * 时       间     : 2013-03-13
   1063          * 描       述     : 基于2013-03-08界面
   1064          *******************************************************************************/
   1065          

   \                                 In section .text, align 4, keep-with-next
   1066          void GUI_SYS_EVENTSET(void)
   1067          {
   \                     GUI_SYS_EVENTSET:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB0D7             SUB      SP,SP,#+348
   1068              float String2F=0.0;
   \   00000004   0x2600             MOVS     R6,#+0
   1069              U32 Float2L=0;
   \   00000006   0x2700             MOVS     R7,#+0
   1070              U8 k,temp=0;
   \   00000008   0x2500             MOVS     R5,#+0
   1071              U16 ParaSetC108[98]= {0};
   \   0000000A   0xA825             ADD      R0,SP,#+148
   \   0000000C   0x21C4             MOVS     R1,#+196
   \   0000000E   0x.... 0x....      BL       __aeabi_memclr4
   1072              static U8 flg_event[11]={0}; // wk @130326 --> 事件设置参数超限标志
   1073              
   1074              SHELL_CONTEXT_PTR    shell_ptr;
   1075              shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000012   0xF44F 0x70F2      MOV      R0,#+484
   \   00000016   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000001A   0x0004             MOVS     R4,R0
   1076              _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000001C   0xF245 0x0101      MOVW     R1,#+20481
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       _lwmem_set_type
   1077              
   1078              U16 SysEventXY[22]= {
   1079                                    155,97, 155,133, 155,169, 155,205, 155,241, 155,278, 155,315,  /*WK --> 第1列数据坐标 */
   1080                                    481,97, 481,133, 481,169, 481,205 /* WK -->第2列数据坐标 */
   1081                                  }; 
   \   00000026   0xA804             ADD      R0,SP,#+16
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable12
   \   0000002C   0x222C             MOVS     R2,#+44
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   1082              U16 SysEventSetSq[44]= {
   1083                                        /* WK -->第1列光标坐标 */
   1084                                        150,96,153,122, 150,132,153,158, 150,168,153,194, 150,204,153,230, 150,240,153,266, 150,276,153,304, 150,314,153,340,
   1085                                        /* WK -->第2列光标坐标 */
   1086                                        476,96,479,122, 476,132,479,158, 476,168,479,194, 476,204,479,230
   1087                                     }; //相、UI选择\区间所在的黑色矩形框
   \   00000032   0xA80F             ADD      R0,SP,#+60
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000038   0x2258             MOVS     R2,#+88
   \   0000003A   0x.... 0x....      BL       __aeabi_memcpy4
   1088              if(SysSet.SwFlg)  // wk @130326 --> 第一次进入时，会读取Flash中保存数据
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xF000 0x80A2      BEQ.W    ??GUI_SYS_EVENTSET_0
   1089              {
   1090                  /* WK --> 光标 */
   1091                  YADA_40(0x0000,0xfc00);//前景色为黑色，背景色为橙色 set only once
   \   0000004A   0xF44F 0x417C      MOV      R1,#+64512
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       YADA_40
   1092                  YADA_5A(SysEventSetSq,4);
   \   00000054   0x2104             MOVS     R1,#+4
   \   00000056   0xA80F             ADD      R0,SP,#+60
   \   00000058   0x.... 0x....      BL       YADA_5A
   1093                  //memcpy(&SysFlashData[EVESET_INDEX],SysEventAddr,48);
   1094          #if 0 // wk --> 全部读取Flash中参数      
   1095                  shell_ptr->ARGC = 2;
   1096                  shell_ptr->ARGV[0]="cd";
   1097                  shell_ptr->ARGV[1]="f:\\"; 
   1098                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1099                  
   1100                  shell_ptr->ARGC = 2;
   1101                  shell_ptr->ARGV[0]="cd";
   1102                  shell_ptr->ARGV[1]="sysset";
   1103                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1104                  
   1105                  shell_ptr->ARGC=1;
   1106                  shell_ptr->ARGV[0]="pwd";
   1107                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
   1108                  
   1109                  shell_ptr->ARGC=5;
   1110                  shell_ptr->ARGV[0]="read";
   1111                  shell_ptr->ARGV[1]="sysevent.txt";
   1112                  shell_ptr->ARGV[2]="84";
   1113                  shell_ptr->ARGV[3]="begin";
   1114                  shell_ptr->ARGV[4]="0";
   1115                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,SysFlashData);   
   1116          #endif // wk --> 全部读取Flash中参数     
   1117          
   1118          #if 1 // wk @130326 --> 只保存事件设置参数
   1119                  shell_ptr->ARGC = 2;
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x6220             STR      R0,[R4, #+32]
   1120                  shell_ptr->ARGV[0]="cd";
   \   00000060   0xA081             ADR.N    R0,??GUI_SYS_EVENTSET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000062   0x6020             STR      R0,[R4, #+0]
   1121                  shell_ptr->ARGV[1]="f:\\"; 
   \   00000064   0xA081             ADR.N    R0,??GUI_SYS_EVENTSET_1+0x4  ;; "f:\\"
   \   00000066   0x6060             STR      R0,[R4, #+4]
   1122                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                         ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   00000068   0x0021             MOVS     R1,R4
   \   0000006A   0x6A20             LDR      R0,[R4, #+32]
   \   0000006C   0x.... 0x....      BL       Shell_cd
   1123                  
   1124                  shell_ptr->ARGC = 2;
   \   00000070   0x2002             MOVS     R0,#+2
   \   00000072   0x6220             STR      R0,[R4, #+32]
   1125                  shell_ptr->ARGV[0]="cd";
   \   00000074   0xA07C             ADR.N    R0,??GUI_SYS_EVENTSET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000076   0x6020             STR      R0,[R4, #+0]
   1126                  shell_ptr->ARGV[1]="sysset";
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000007C   0x6060             STR      R0,[R4, #+4]
   1127                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000007E   0x0021             MOVS     R1,R4
   \   00000080   0x6A20             LDR      R0,[R4, #+32]
   \   00000082   0x.... 0x....      BL       Shell_cd
   1128                  
   1129                  shell_ptr->ARGC=1;
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x6220             STR      R0,[R4, #+32]
   1130                  shell_ptr->ARGV[0]="pwd";
   \   0000008A   0xA079             ADR.N    R0,??GUI_SYS_EVENTSET_1+0x8  ;; "pwd"
   \   0000008C   0x6020             STR      R0,[R4, #+0]
   1131                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
                         ^
Warning[Pe223]: function "Shell_pwd" declared implicitly
   \   0000008E   0x0021             MOVS     R1,R4
   \   00000090   0x6A20             LDR      R0,[R4, #+32]
   \   00000092   0x.... 0x....      BL       Shell_pwd
   1132                  
   1133                  shell_ptr->ARGC=5;
   \   00000096   0x2005             MOVS     R0,#+5
   \   00000098   0x6220             STR      R0,[R4, #+32]
   1134                  shell_ptr->ARGV[0]="read";
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   0000009E   0x6020             STR      R0,[R4, #+0]
   1135                  shell_ptr->ARGV[1]="sysevent.txt";
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000000A4   0x6060             STR      R0,[R4, #+4]
   1136                  shell_ptr->ARGV[2]="44";
   \   000000A6   0xA073             ADR.N    R0,??GUI_SYS_EVENTSET_1+0xC  ;; 0x34, 0x34, 0x00, 0x00
   \   000000A8   0x60A0             STR      R0,[R4, #+8]
   1137                  shell_ptr->ARGV[3]="begin";
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000AE   0x60E0             STR      R0,[R4, #+12]
   1138                  shell_ptr->ARGV[4]="0";   // WK @130326  --> 事件设置参数偏移26保存
   \   000000B0   0xA071             ADR.N    R0,??GUI_SYS_EVENTSET_1+0x10  ;; "0"
   \   000000B2   0x6120             STR      R0,[R4, #+16]
   1139                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,&(SysFlashDataT[25]));  
                         ^
Warning[Pe223]: function "Shell_read_wk" declared implicitly
   \   000000B4   0x.... 0x....      LDR.W    R2,??DataTable12_6
   \   000000B8   0x0021             MOVS     R1,R4
   \   000000BA   0x6A20             LDR      R0,[R4, #+32]
   \   000000BC   0x.... 0x....      BL       Shell_read_wk
   1140          #endif      
   1141                  SysSet.SwFlg=0;
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x7001             STRB     R1,[R0, #+0]
   1142                  
   1143                  for(k=0; k<11; k++)//在第一次时全部显示，以后每次数据更改时只修改相应的项
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0xE052             B.N      ??GUI_SYS_EVENTSET_2
   1144                  {
   1145                      temp=7*k;
   \                     ??GUI_SYS_EVENTSET_3:
   \   000000CC   0x2107             MOVS     R1,#+7
   \   000000CE   0xFB01 0xF500      MUL      R5,R1,R0
   1146                      ParaSetC108[temp + 0] = 0x5204;         //P  显示数据的模式
   \   000000D2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D4   0xA925             ADD      R1,SP,#+148
   \   000000D6   0xF245 0x2204      MOVW     R2,#+20996
   \   000000DA   0xF821 0x2015      STRH     R2,[R1, R5, LSL #+1]
   1147                      ParaSetC108[temp + 1] = SysEventXY[2*k];            //显示相位的X坐标
   \   000000DE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E0   0xA925             ADD      R1,SP,#+148
   \   000000E2   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0xAA04             ADD      R2,SP,#+16
   \   000000EA   0xF832 0x2020      LDRH     R2,[R2, R0, LSL #+2]
   \   000000EE   0x804A             STRH     R2,[R1, #+2]
   1148                      ParaSetC108[temp + 2] = SysEventXY[2*k + 1];     //Y坐标
   \   000000F0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F2   0x0041             LSLS     R1,R0,#+1
   \   000000F4   0xAA04             ADD      R2,SP,#+16
   \   000000F6   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000000FA   0x8849             LDRH     R1,[R1, #+2]
   \   000000FC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000FE   0xAA25             ADD      R2,SP,#+148
   \   00000100   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000104   0x8091             STRH     R1,[R2, #+4]
   1149          //            if(SysFlashDataT[EVESEND_FLAG+k]==0)
   1150          //            {
   1151          //              ParaSetC108[temp + 3] = 0xffff;         //白色，下为黑色
   1152          //            }
   1153          //            else
   1154          //            {
   1155          //              ParaSetC108[temp + 3] = 0xffe0;         //白色，下为黑色
   1156          //            }
   1157                      ParaSetC108[temp + 3] = 0xffff;         //白色，下为黑色
   \   00000106   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000108   0xA925             ADD      R1,SP,#+148
   \   0000010A   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   0000010E   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000112   0x80CA             STRH     R2,[R1, #+6]
   1158                      ParaSetC108[temp + 4] = 0x0000;
   \   00000114   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000116   0xA925             ADD      R1,SP,#+148
   \   00000118   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   0000011C   0x2200             MOVS     R2,#+0
   \   0000011E   0x810A             STRH     R2,[R1, #+8]
   1159                      ParaSetC108[temp + 5] =(U16) (SysFlashDataT[3+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[2+4*k+EVESET_INDEX]);
   \   00000120   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000126   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000012A   0x7F09             LDRB     R1,[R1, #+28]
   \   0000012C   0x0209             LSLS     R1,R1,#+8
   \   0000012E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000130   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   00000134   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000138   0x7ED2             LDRB     R2,[R2, #+27]
   \   0000013A   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   0000013E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000140   0xAA25             ADD      R2,SP,#+148
   \   00000142   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000146   0x8151             STRH     R1,[R2, #+10]
   1160                      ParaSetC108[temp + 6] =(U16) (SysFlashDataT[1+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[4*k+EVESET_INDEX]);
   \   00000148   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000014E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000152   0x7E89             LDRB     R1,[R1, #+26]
   \   00000154   0x0209             LSLS     R1,R1,#+8
   \   00000156   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000158   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   0000015C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000160   0x7E52             LDRB     R2,[R2, #+25]
   \   00000162   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   00000166   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000168   0xAA25             ADD      R2,SP,#+148
   \   0000016A   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   0000016E   0x8191             STRH     R1,[R2, #+12]
   1161                  }
   \   00000170   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_2:
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x280B             CMP      R0,#+11
   \   00000176   0xD3A9             BCC.N    ??GUI_SYS_EVENTSET_3
   1162                  YADA_C0(EventSetAddr, ParaSetC108, 11*7);
   \   00000178   0x224D             MOVS     R2,#+77
   \   0000017A   0xA925             ADD      R1,SP,#+148
   \   0000017C   0xF640 0x20F7      MOVW     R0,#+2807
   \   00000180   0x.... 0x....      BL       YADA_C0
   1163                  YADA_C108(EventSetAddr, 11);   //写入有效值，每次10个
   \   00000184   0x210B             MOVS     R1,#+11
   \   00000186   0xF640 0x20F7      MOVW     R0,#+2807
   \   0000018A   0x.... 0x....      BL       YADA_C108
   1164              }
   1165              
   1166              if(SysSet.FuncFlg)//右移、左移、T，修改光标
   \                     ??GUI_SYS_EVENTSET_0:
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000192   0x7840             LDRB     R0,[R0, #+1]
   \   00000194   0x2800             CMP      R0,#+0
   \   00000196   0xD01F             BEQ.N    ??GUI_SYS_EVENTSET_4
   1167              {
   1168                  YADA_5B(&SysEventSetSq[SysEventOldIndex*4],4);//擦除前一处
   \   00000198   0x2104             MOVS     R1,#+4
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0xAA0F             ADD      R2,SP,#+60
   \   000001A2   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   000001A6   0x.... 0x....      BL       YADA_5B
   1169                  YADA_5A(&SysEventSetSq[SysSet.EvntIndex*4],4);    //背景色填充相所在的矩形区域
   \   000001AA   0x2104             MOVS     R1,#+4
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001B0   0x7940             LDRB     R0,[R0, #+5]
   \   000001B2   0xAA0F             ADD      R2,SP,#+60
   \   000001B4   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   000001B8   0x.... 0x....      BL       YADA_5A
   1170                  SysEventOldIndex=SysSet.EvntIndex;
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001C0   0x7940             LDRB     R0,[R0, #+5]
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000001C6   0x7008             STRB     R0,[R1, #+0]
   1171                  SysSet.FuncFlg=0;
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001CC   0x2100             MOVS     R1,#+0
   \   000001CE   0x7041             STRB     R1,[R0, #+1]
   1172                  SysSet.DataCnt=0;//切换时键盘输入清零 so you don't need to clear the SysSet.Data Array
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001D4   0x2100             MOVS     R1,#+0
   \   000001D6   0x7181             STRB     R1,[R0, #+6]
   1173              }
   1174              
   1175              if(SysSet.DataFlg)//修改一项数据
   \                     ??GUI_SYS_EVENTSET_4:
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001DC   0x7880             LDRB     R0,[R0, #+2]
   \   000001DE   0x2800             CMP      R0,#+0
   \   000001E0   0xF000 0x81D7      BEQ.W    ??GUI_SYS_EVENTSET_5
   1176              {
   1177                if(SysSet.DataFlg)
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001E8   0x7880             LDRB     R0,[R0, #+2]
   \   000001EA   0x2800             CMP      R0,#+0
   \   000001EC   0xD004             BEQ.N    ??GUI_SYS_EVENTSET_6
   1178                {
   1179                  SysFlashDataT[EVESEND_FLAG]=0;
   \   000001EE   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   000001F2   0x2100             MOVS     R1,#+0
   \   000001F4   0xF880 0x1046      STRB     R1,[R0, #+70]
   1180                }
   1181                
   1182                if(SysSet.DataCnt==0)//clear key
   \                     ??GUI_SYS_EVENTSET_6:
   \   000001F8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001FC   0x7980             LDRB     R0,[R0, #+6]
   \   000001FE   0x2800             CMP      R0,#+0
   \   00000200   0xD101             BNE.N    ??GUI_SYS_EVENTSET_7
   1183                  {
   1184                      String2F=0;
   \   00000202   0x2600             MOVS     R6,#+0
   \   00000204   0xE05D             B.N      ??GUI_SYS_EVENTSET_8
   1185                  }
   1186                  else
   1187                  {
   1188                      U8 i;
   1189                      float k;
   1190                      //把字符转化为浮点数
   1191                      for( i=0; i<SysSet.DataCnt&&SysSet.Data[i]!='.'; i++) //利用输入数据个数
   \                     ??GUI_SYS_EVENTSET_7:
   \   00000206   0x2500             MOVS     R5,#+0
   \   00000208   0xE015             B.N      ??GUI_SYS_EVENTSET_9
   1192                      {
   1193                          String2F=String2F*10+SysSet.Data[i]-'0';    //求整数部分
   \                     ??GUI_SYS_EVENTSET_10:
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable14  ;; 0x41200000
   \   0000020E   0x0031             MOVS     R1,R6
   \   00000210   0x.... 0x....      BL       __aeabi_fmul
   \   00000214   0x0006             MOVS     R6,R0
   \   00000216   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000021C   0x1828             ADDS     R0,R5,R0
   \   0000021E   0x79C0             LDRB     R0,[R0, #+7]
   \   00000220   0x.... 0x....      BL       __aeabi_ui2f
   \   00000224   0x0031             MOVS     R1,R6
   \   00000226   0x.... 0x....      BL       __aeabi_fadd
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable14_1  ;; 0xc2400000
   \   0000022E   0x.... 0x....      BL       __aeabi_fadd
   \   00000232   0x0006             MOVS     R6,R0
   1194                      }
   \   00000234   0x1C6D             ADDS     R5,R5,#+1
   \                     ??GUI_SYS_EVENTSET_9:
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000023A   0x7980             LDRB     R0,[R0, #+6]
   \   0000023C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000023E   0x4285             CMP      R5,R0
   \   00000240   0xD206             BCS.N    ??GUI_SYS_EVENTSET_11
   \   00000242   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000248   0x1828             ADDS     R0,R5,R0
   \   0000024A   0x79C0             LDRB     R0,[R0, #+7]
   \   0000024C   0x282E             CMP      R0,#+46
   \   0000024E   0xD1DC             BNE.N    ??GUI_SYS_EVENTSET_10
   1195                      if(SysSet.Data[i]=='.')
   \                     ??GUI_SYS_EVENTSET_11:
   \   00000250   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000252   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000256   0x1828             ADDS     R0,R5,R0
   \   00000258   0x79C0             LDRB     R0,[R0, #+7]
   \   0000025A   0x282E             CMP      R0,#+46
   \   0000025C   0xD131             BNE.N    ??GUI_SYS_EVENTSET_8
   1196                          for(i++,k=0.1; i<SysSet.DataCnt&&SysSet.Data[i]!='.'; i++,k=k/10)
   \   0000025E   0x1C6D             ADDS     R5,R5,#+1
   \   00000260   0x.... 0x....      LDR.W    R7,??DataTable14_2  ;; 0x3dcccccd
   \   00000264   0xE020             B.N      ??GUI_SYS_EVENTSET_12
   \   00000266   0xBF00             Nop      
   \                     ??GUI_SYS_EVENTSET_1:
   \   00000268   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    
   \   0000026C   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    
   \   00000270   0x70 0x77          DC8      "pwd"
   \              0x64 0x00    
   \   00000274   0x34 0x34          DC8      0x34, 0x34, 0x00, 0x00
   \              0x00 0x00    
   \   00000278   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    
   1197                          {
   1198                              String2F=String2F+(SysSet.Data[i]-'0')*k;
   \                     ??GUI_SYS_EVENTSET_13:
   \   0000027C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000027E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000282   0x1828             ADDS     R0,R5,R0
   \   00000284   0x79C0             LDRB     R0,[R0, #+7]
   \   00000286   0x3830             SUBS     R0,R0,#+48
   \   00000288   0x.... 0x....      BL       __aeabi_i2f
   \   0000028C   0x0039             MOVS     R1,R7
   \   0000028E   0x.... 0x....      BL       __aeabi_fmul
   \   00000292   0x0031             MOVS     R1,R6
   \   00000294   0x.... 0x....      BL       __aeabi_fadd
   \   00000298   0x0006             MOVS     R6,R0
   1199                          }
   \   0000029A   0x1C6D             ADDS     R5,R5,#+1
   \   0000029C   0x0038             MOVS     R0,R7
   \   0000029E   0x.... 0x....      LDR.W    R1,??DataTable14  ;; 0x41200000
   \   000002A2   0x.... 0x....      BL       __aeabi_fdiv
   \   000002A6   0x0007             MOVS     R7,R0
   \                     ??GUI_SYS_EVENTSET_12:
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002AC   0x7980             LDRB     R0,[R0, #+6]
   \   000002AE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002B0   0x4285             CMP      R5,R0
   \   000002B2   0xD206             BCS.N    ??GUI_SYS_EVENTSET_8
   \   000002B4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002B6   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002BA   0x1828             ADDS     R0,R5,R0
   \   000002BC   0x79C0             LDRB     R0,[R0, #+7]
   \   000002BE   0x282E             CMP      R0,#+46
   \   000002C0   0xD1DC             BNE.N    ??GUI_SYS_EVENTSET_13
   1200                  }
   1201                    
   1202                  Float2L=(long)(String2F*100);//enlarge 100 times
   \                     ??GUI_SYS_EVENTSET_8:
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable14_4  ;; 0x42c80000
   \   000002C6   0x0031             MOVS     R1,R6
   \   000002C8   0x.... 0x....      BL       __aeabi_fmul
   \   000002CC   0x.... 0x....      BL       __aeabi_f2iz
   \   000002D0   0x0007             MOVS     R7,R0
   1203                  temp=SysSet.EvntIndex*4;
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002D6   0x7940             LDRB     R0,[R0, #+5]
   \   000002D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002DA   0x0085             LSLS     R5,R0,#+2
   1204                  SysFlashDataT[temp+EVESET_INDEX]=(U8)(Float2L);  //四字节数
   \   000002DC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002DE   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   000002E2   0x1828             ADDS     R0,R5,R0
   \   000002E4   0x7647             STRB     R7,[R0, #+25]
   1205                  SysFlashDataT[temp+1+EVESET_INDEX]=(U8)(Float2L>>8);
   \   000002E6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   000002EC   0x1828             ADDS     R0,R5,R0
   \   000002EE   0x0A39             LSRS     R1,R7,#+8
   \   000002F0   0x7681             STRB     R1,[R0, #+26]
   1206                  SysFlashDataT[temp+2+EVESET_INDEX]=(U8)(Float2L>>16);
   \   000002F2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002F4   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   000002F8   0x1828             ADDS     R0,R5,R0
   \   000002FA   0x0C39             LSRS     R1,R7,#+16
   \   000002FC   0x76C1             STRB     R1,[R0, #+27]
   1207                  SysFlashDataT[temp+3+EVESET_INDEX]=(U8)(Float2L>>24);
   \   000002FE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000304   0x1828             ADDS     R0,R5,R0
   \   00000306   0x0E39             LSRS     R1,R7,#+24
   \   00000308   0x7701             STRB     R1,[R0, #+28]
   1208                  
   1209                  U16 OneC108[7]= {0x5204,SysEventXY[2*SysSet.EvntIndex],SysEventXY[2*SysSet.EvntIndex + 1],0xffff,0x0000};
   \   0000030A   0xA800             ADD      R0,SP,#+0
   \   0000030C   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   00000310   0x2210             MOVS     R2,#+16
   \   00000312   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000031A   0x7940             LDRB     R0,[R0, #+5]
   \   0000031C   0xA904             ADD      R1,SP,#+16
   \   0000031E   0xF831 0x0020      LDRH     R0,[R1, R0, LSL #+2]
   \   00000322   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000032A   0x7940             LDRB     R0,[R0, #+5]
   \   0000032C   0x0040             LSLS     R0,R0,#+1
   \   0000032E   0xA904             ADD      R1,SP,#+16
   \   00000330   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000334   0x8840             LDRH     R0,[R0, #+2]
   \   00000336   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1210                  if(SysFlashDataT[EVESEND_FLAG])
   \   0000033A   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   0000033E   0xF890 0x0046      LDRB     R0,[R0, #+70]
   \   00000342   0x2800             CMP      R0,#+0
   \   00000344   0xD003             BEQ.N    ??GUI_SYS_EVENTSET_14
   1211                  {
   1212                    OneC108[3]=0xffe0;
   \   00000346   0xF64F 0x70E0      MOVW     R0,#+65504
   \   0000034A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1213                  }
   1214                  OneC108[5] =(U16) (SysFlashDataT[3+temp+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[2+temp+EVESET_INDEX]);
   \                     ??GUI_SYS_EVENTSET_14:
   \   0000034E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000350   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000354   0x1828             ADDS     R0,R5,R0
   \   00000356   0x7F00             LDRB     R0,[R0, #+28]
   \   00000358   0x0200             LSLS     R0,R0,#+8
   \   0000035A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000035C   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000360   0x1869             ADDS     R1,R5,R1
   \   00000362   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000364   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000368   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   1215                  OneC108[6] =(U16) (SysFlashDataT[1+temp+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[temp+EVESET_INDEX]);
   \   0000036C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000036E   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000372   0x1828             ADDS     R0,R5,R0
   \   00000374   0x7E80             LDRB     R0,[R0, #+26]
   \   00000376   0x0200             LSLS     R0,R0,#+8
   \   00000378   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000037A   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000037E   0x1869             ADDS     R1,R5,R1
   \   00000380   0x7E49             LDRB     R1,[R1, #+25]
   \   00000382   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000386   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   1216                  
   1217                  /* WK --> 阈值判断 */
   1218                  switch(SysSet.EvntIndex)
   \   0000038A   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000038E   0x7940             LDRB     R0,[R0, #+5]
   \   00000390   0x2800             CMP      R0,#+0
   \   00000392   0xD014             BEQ.N    ??GUI_SYS_EVENTSET_15
   \   00000394   0x2802             CMP      R0,#+2
   \   00000396   0xD04D             BEQ.N    ??GUI_SYS_EVENTSET_16
   \   00000398   0xD325             BCC.N    ??GUI_SYS_EVENTSET_17
   \   0000039A   0x2804             CMP      R0,#+4
   \   0000039C   0xD06F             BEQ.N    ??GUI_SYS_EVENTSET_18
   \   0000039E   0xD35C             BCC.N    ??GUI_SYS_EVENTSET_19
   \   000003A0   0x2806             CMP      R0,#+6
   \   000003A2   0xF000 0x8090      BEQ.W    ??GUI_SYS_EVENTSET_20
   \   000003A6   0xD37C             BCC.N    ??GUI_SYS_EVENTSET_21
   \   000003A8   0x2808             CMP      R0,#+8
   \   000003AA   0xF000 0x80B1      BEQ.W    ??GUI_SYS_EVENTSET_22
   \   000003AE   0xF0C0 0x809C      BCC.W    ??GUI_SYS_EVENTSET_23
   \   000003B2   0x280A             CMP      R0,#+10
   \   000003B4   0xF000 0x80C0      BEQ.W    ??GUI_SYS_EVENTSET_24
   \   000003B8   0xF0C0 0x80AB      BCC.W    ??GUI_SYS_EVENTSET_25
   \   000003BC   0xE0CE             B.N      ??GUI_SYS_EVENTSET_26
   1219                  {
   1220                  case 0:
   1221                    if((OneC108[6]+(OneC108[5]<<16))>NumWave)
   \                     ??GUI_SYS_EVENTSET_15:
   \   000003BE   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   000003C2   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   000003C6   0x0409             LSLS     R1,R1,#+16
   \   000003C8   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000003CC   0xF242 0x7111      MOVW     R1,#+10001
   \   000003D0   0x4288             CMP      R0,R1
   \   000003D2   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_27
   1222                     { 
   1223                      OneC108[3]=0xf800;
   \   000003D4   0xF44F 0x4078      MOV      R0,#+63488
   \   000003D8   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1224                      flg_event[0]=1;
   \   000003DC   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   000003E0   0x2101             MOVS     R1,#+1
   \   000003E2   0x7001             STRB     R1,[R0, #+0]
   1225                     }
   1226                      break;
   \                     ??GUI_SYS_EVENTSET_27:
   \   000003E4   0xE0BA             B.N      ??GUI_SYS_EVENTSET_28
   1227                  case 1:
   1228                    if(((OneC108[6]+(OneC108[5]<<16))!=6400)|| ((OneC108[6]+(OneC108[5]<<16))!=12800)|| 
   1229                       ((OneC108[6]+(OneC108[5]<<16))!=25600))
   \                     ??GUI_SYS_EVENTSET_17:
   \   000003E6   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   000003EA   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   000003EE   0x0409             LSLS     R1,R1,#+16
   \   000003F0   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000003F4   0xF5B0 0x5FC8      CMP      R0,#+6400
   \   000003F8   0xD113             BNE.N    ??GUI_SYS_EVENTSET_29
   \   000003FA   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   000003FE   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   00000402   0x0409             LSLS     R1,R1,#+16
   \   00000404   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000408   0xF5B0 0x5F48      CMP      R0,#+12800
   \   0000040C   0xD109             BNE.N    ??GUI_SYS_EVENTSET_29
   \   0000040E   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   00000412   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   00000416   0x0409             LSLS     R1,R1,#+16
   \   00000418   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000041C   0xF5B0 0x4FC8      CMP      R0,#+25600
   \   00000420   0xD007             BEQ.N    ??GUI_SYS_EVENTSET_30
   1230                    {
   1231                      OneC108[3]=0xf800;
   \                     ??GUI_SYS_EVENTSET_29:
   \   00000422   0xF44F 0x4078      MOV      R0,#+63488
   \   00000426   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1232                      flg_event[1]=1;
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   0000042E   0x2101             MOVS     R1,#+1
   \   00000430   0x7041             STRB     R1,[R0, #+1]
   1233                    }
   1234                      break;
   \                     ??GUI_SYS_EVENTSET_30:
   \   00000432   0xE093             B.N      ??GUI_SYS_EVENTSET_28
   1235                  case 2:
   1236                     if((OneC108[6]+(OneC108[5]<<16))>UDeviation)
   \                     ??GUI_SYS_EVENTSET_16:
   \   00000434   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   00000438   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   0000043C   0x0409             LSLS     R1,R1,#+16
   \   0000043E   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000442   0xF5B0 0x7F2F      CMP      R0,#+700
   \   00000446   0xDD07             BLE.N    ??GUI_SYS_EVENTSET_31
   1237                     {
   1238                      OneC108[3]=0xf800;
   \   00000448   0xF44F 0x4078      MOV      R0,#+63488
   \   0000044C   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1239                      flg_event[2]=1;
   \   00000450   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   00000454   0x2101             MOVS     R1,#+1
   \   00000456   0x7081             STRB     R1,[R0, #+2]
   1240                     }
   1241                      break;
   \                     ??GUI_SYS_EVENTSET_31:
   \   00000458   0xE080             B.N      ??GUI_SYS_EVENTSET_28
   1242                  case 3:
   1243                     if((OneC108[6]+(OneC108[5]<<16))>FDeviation)
   \                     ??GUI_SYS_EVENTSET_19:
   \   0000045A   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   0000045E   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   00000462   0x0409             LSLS     R1,R1,#+16
   \   00000464   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000468   0x2803             CMP      R0,#+3
   \   0000046A   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_32
   1244                     {
   1245                      OneC108[3]=0xf800;
   \   0000046C   0xF44F 0x4078      MOV      R0,#+63488
   \   00000470   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1246                      flg_event[3]=1;
   \   00000474   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   00000478   0x2101             MOVS     R1,#+1
   \   0000047A   0x70C1             STRB     R1,[R0, #+3]
   1247                     }
   1248                      break;
   \                     ??GUI_SYS_EVENTSET_32:
   \   0000047C   0xE06E             B.N      ??GUI_SYS_EVENTSET_28
   1249                  case 4:
   1250                    if((OneC108[6]+(OneC108[5]<<16))>USurge)
   \                     ??GUI_SYS_EVENTSET_18:
   \   0000047E   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   00000482   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   00000486   0x0409             LSLS     R1,R1,#+16
   \   00000488   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000048C   0x28C9             CMP      R0,#+201
   \   0000048E   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_33
   1251                    {
   1252                      OneC108[3]=0xf800;
   \   00000490   0xF44F 0x4078      MOV      R0,#+63488
   \   00000494   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1253                      flg_event[4]=1;          
   \   00000498   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   0000049C   0x2101             MOVS     R1,#+1
   \   0000049E   0x7101             STRB     R1,[R0, #+4]
   1254                    }
   1255                    break;
   \                     ??GUI_SYS_EVENTSET_33:
   \   000004A0   0xE05C             B.N      ??GUI_SYS_EVENTSET_28
   1256                  case 5:
   1257                    if((OneC108[6]+(OneC108[5]<<16))>NUnblance)
   \                     ??GUI_SYS_EVENTSET_21:
   \   000004A2   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   000004A6   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   000004AA   0x0409             LSLS     R1,R1,#+16
   \   000004AC   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000004B0   0x28C9             CMP      R0,#+201
   \   000004B2   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_34
   1258                    {
   1259                      OneC108[3]=0xf800;
   \   000004B4   0xF44F 0x4078      MOV      R0,#+63488
   \   000004B8   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1260                      flg_event[5]=1;          
   \   000004BC   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   000004C0   0x2101             MOVS     R1,#+1
   \   000004C2   0x7141             STRB     R1,[R0, #+5]
   1261                    }
   1262                    break;
   \                     ??GUI_SYS_EVENTSET_34:
   \   000004C4   0xE04A             B.N      ??GUI_SYS_EVENTSET_28
   1263                  case 6:
   1264                    if((OneC108[6]+(OneC108[5]<<16))>LngFlick)
   \                     ??GUI_SYS_EVENTSET_20:
   \   000004C6   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   000004CA   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   000004CE   0x0409             LSLS     R1,R1,#+16
   \   000004D0   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000004D4   0x2865             CMP      R0,#+101
   \   000004D6   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_35
   1265                    {
   1266                      OneC108[3]=0xf800;
   \   000004D8   0xF44F 0x4078      MOV      R0,#+63488
   \   000004DC   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1267                      flg_event[6]=1;          
   \   000004E0   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   000004E4   0x2101             MOVS     R1,#+1
   \   000004E6   0x7181             STRB     R1,[R0, #+6]
   1268                    }
   1269                    break;
   \                     ??GUI_SYS_EVENTSET_35:
   \   000004E8   0xE038             B.N      ??GUI_SYS_EVENTSET_28
   1270                  case 7:
   1271                    if((OneC108[6]+(OneC108[5]<<16))>TotalHarmonic)
   \                     ??GUI_SYS_EVENTSET_23:
   \   000004EA   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   000004EE   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   000004F2   0x0409             LSLS     R1,R1,#+16
   \   000004F4   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000004F8   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000004FC   0xDD07             BLE.N    ??GUI_SYS_EVENTSET_36
   1272                    {
   1273                      OneC108[3]=0xf800;
   \   000004FE   0xF44F 0x4078      MOV      R0,#+63488
   \   00000502   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1274                      flg_event[7]=1;          
   \   00000506   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   0000050A   0x2101             MOVS     R1,#+1
   \   0000050C   0x71C1             STRB     R1,[R0, #+7]
   1275                    }
   1276                    break;
   \                     ??GUI_SYS_EVENTSET_36:
   \   0000050E   0xE025             B.N      ??GUI_SYS_EVENTSET_28
   1277                  case 8:  //WK @130326 -->间谐波暂时没有做
   1278                    break;
   \                     ??GUI_SYS_EVENTSET_22:
   \   00000510   0xE024             B.N      ??GUI_SYS_EVENTSET_28
   1279                  case 9:
   1280                    if((OneC108[6]+(OneC108[5]<<16))>UHarmonic)
   \                     ??GUI_SYS_EVENTSET_25:
   \   00000512   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   00000516   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   0000051A   0x0409             LSLS     R1,R1,#+16
   \   0000051C   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000520   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000524   0xDD07             BLE.N    ??GUI_SYS_EVENTSET_37
   1281                    {
   1282                      OneC108[3]=0xf800;
   \   00000526   0xF44F 0x4078      MOV      R0,#+63488
   \   0000052A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1283                      flg_event[9]=1;          
   \   0000052E   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   00000532   0x2101             MOVS     R1,#+1
   \   00000534   0x7241             STRB     R1,[R0, #+9]
   1284                    }
   1285                    break;
   \                     ??GUI_SYS_EVENTSET_37:
   \   00000536   0xE011             B.N      ??GUI_SYS_EVENTSET_28
   1286                  case 10:
   1287                    if((OneC108[6]+(OneC108[5]<<16))>IHarmonic)
   \                     ??GUI_SYS_EVENTSET_24:
   \   00000538   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   0000053C   0xF8BD 0x100A      LDRH     R1,[SP, #+10]
   \   00000540   0x0409             LSLS     R1,R1,#+16
   \   00000542   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000546   0x28C9             CMP      R0,#+201
   \   00000548   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_38
   1288                    {
   1289                      OneC108[3]=0xf800;
   \   0000054A   0xF44F 0x4078      MOV      R0,#+63488
   \   0000054E   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1290                      flg_event[10]=1;          
   \   00000552   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   00000556   0x2101             MOVS     R1,#+1
   \   00000558   0x7281             STRB     R1,[R0, #+10]
   1291                    }
   1292                    break;      
   \                     ??GUI_SYS_EVENTSET_38:
   \   0000055A   0xE7FF             B.N      ??GUI_SYS_EVENTSET_28
   1293                  default:
   1294                    break;
   1295                  }
   1296                  YADA_C0(EventSetAddr+SysSet.EvntIndex*7, OneC108, 7);//修改发生改变的数据项
   \                     ??GUI_SYS_EVENTSET_26:
   \                     ??GUI_SYS_EVENTSET_28:
   \   0000055C   0x2207             MOVS     R2,#+7
   \   0000055E   0xA900             ADD      R1,SP,#+0
   \   00000560   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000564   0x7940             LDRB     R0,[R0, #+5]
   \   00000566   0x2307             MOVS     R3,#+7
   \   00000568   0x4358             MULS     R0,R3,R0
   \   0000056A   0xF600 0x20F7      ADDW     R0,R0,#+2807
   \   0000056E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000570   0x.... 0x....      BL       YADA_C0
   1297                  YADA_C108(EventSetAddr+SysSet.EvntIndex*7, 1);
   \   00000574   0x2101             MOVS     R1,#+1
   \   00000576   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000057A   0x7940             LDRB     R0,[R0, #+5]
   \   0000057C   0x2207             MOVS     R2,#+7
   \   0000057E   0x4350             MULS     R0,R2,R0
   \   00000580   0xF600 0x20F7      ADDW     R0,R0,#+2807
   \   00000584   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000586   0x.... 0x....      BL       YADA_C108
   1298                  SysSet.DataFlg=0;
   \   0000058A   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000058E   0x2100             MOVS     R1,#+0
   \   00000590   0x7081             STRB     R1,[R0, #+2]
   1299              }
   1300              
   1301              if(SysSet.SaveFlg)//将参数值发给DSP
   \                     ??GUI_SYS_EVENTSET_5:
   \   00000592   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000596   0x78C0             LDRB     R0,[R0, #+3]
   \   00000598   0x2800             CMP      R0,#+0
   \   0000059A   0xF000 0x8243      BEQ.W    ??GUI_SYS_EVENTSET_39
   1302              {
   1303               for(int i=0;i<11;i++)
   \   0000059E   0x2000             MOVS     R0,#+0
   \   000005A0   0xE000             B.N      ??GUI_SYS_EVENTSET_40
   1304                if(flg_event[i]==1)
   1305                  switch(i)
   1306                  {
   1307                    case 0:
   1308                     SysFlashDataT[4*i+25]=(U8)(NumWave)%256;
   1309                     SysFlashDataT[4*i+26]=(U8)((NumWave)>>8)%256;
   1310                     SysFlashDataT[4*i+27]=(U8)((NumWave)>>16)%256;
   1311                     SysFlashDataT[4*i+28]=(U8)((NumWave)>>24)%256;
   1312                     flg_event[i]=0;
   1313                     break;
   1314                   case 1:
   1315                     if( (SysFlashDataT[4*i+25]+(SysFlashDataT[4*i+26]<<8)+(SysFlashDataT[4*i+27]<<16))<=6400)
   1316                       DotWave=6400;
   1317                     else if((SysFlashDataT[4*i+25]+(SysFlashDataT[4*i+26]<<8)+(SysFlashDataT[4*i+27]<<16))<=12800)
   1318                       DotWave=12800;
   1319                     else
   1320                       DotWave=25600;
   1321                     SysFlashDataT[4*i+25]=(U8)(DotWave)%256;
   1322                     SysFlashDataT[4*i+26]=(U8)(DotWave>>8)%256;
   1323                     SysFlashDataT[4*i+27]=(U8)(DotWave>>16)%256;
   1324                     SysFlashDataT[4*i+28]=(U8)(DotWave>>24)%256;
   1325                     flg_event[i]=0;
   1326                     break;
   1327                  case 2:
   1328                     SysFlashDataT[4*i+25]=(U8)(UDeviation)%256;
   1329                     SysFlashDataT[4*i+26]=(U8)(UDeviation>>8)%256;
   1330                     SysFlashDataT[4*i+27]=(U8)(UDeviation>>16)%256;
   1331                     SysFlashDataT[4*i+28]=(U8)(UDeviation>>24)%256;
   1332                     flg_event[i]=0;
   1333                     break;
   1334                  case 3:
   1335                     SysFlashDataT[4*i+25]=(U8)(FDeviation)%256;
   1336                     SysFlashDataT[4*i+26]=(U8)(FDeviation>>8)%256;
   1337                     SysFlashDataT[4*i+27]=(U8)(FDeviation>>16)%256;
   1338                     SysFlashDataT[4*i+28]=(U8)(FDeviation>>24)%256;
   1339                     flg_event[i]=0;
   1340                     break;
   1341                  case 4:
   1342                     SysFlashDataT[4*i+25]=(U8)(USurge)%256;
   1343                     SysFlashDataT[4*i+26]=(U8)(USurge>>8)%256;
   1344                     SysFlashDataT[4*i+27]=(U8)(USurge>>16)%256;
   1345                     SysFlashDataT[4*i+28]=(U8)(USurge>>24)%256;
   1346                     flg_event[i]=0;
   1347                     break;
   1348                  case 5:
   1349                     SysFlashDataT[4*i+25]=(U8)(NUnblance)%256;
   1350                     SysFlashDataT[4*i+26]=(U8)(NUnblance>>8)%256;
   1351                     SysFlashDataT[4*i+27]=(U8)(NUnblance>>16)%256;
   1352                     SysFlashDataT[4*i+28]=(U8)(NUnblance>>24)%256;
   1353                     flg_event[i]=0;
   1354                     break;
   1355                  case 6:
   1356                     SysFlashDataT[4*i+25]=(U8)(LngFlick)%256;
   1357                     SysFlashDataT[4*i+26]=(U8)(LngFlick>>8)%256;
   1358                     SysFlashDataT[4*i+27]=(U8)(LngFlick>>16)%256;
   1359                     SysFlashDataT[4*i+28]=(U8)(LngFlick>>24)%256;
   1360                     flg_event[i]=0;
   1361                     break;
   1362                  case 7:
   1363                     SysFlashDataT[4*i+25]=(U8)(TotalHarmonic)%256;
   1364                     SysFlashDataT[4*i+26]=(U8)(TotalHarmonic>>8)%256;
   1365                     SysFlashDataT[4*i+27]=(U8)(TotalHarmonic>>16)%256;
   1366                     SysFlashDataT[4*i+28]=(U8)(TotalHarmonic>>24)%256;
   1367                     flg_event[i]=0;
   1368                  case 8: //间谐波没有做
   1369                    break;
   1370                  case 9:
   1371                     SysFlashDataT[4*i+25]=(U8)(UHarmonic)%256;
   1372                     SysFlashDataT[4*i+26]=(U8)(UHarmonic>>8)%256;
   1373                     SysFlashDataT[4*i+27]=(U8)(UHarmonic>>16)%256;
   1374                     SysFlashDataT[4*i+28]=(U8)(UHarmonic>>24)%256;
   1375                     flg_event[i]=0;
   1376                     break;
   1377                  case 10:
   1378                     SysFlashDataT[4*i+25]=(U8)(IHarmonic)%256;
   1379                     SysFlashDataT[4*i+26]=(U8)(IHarmonic>>8)%256;
   1380                     SysFlashDataT[4*i+27]=(U8)(IHarmonic>>16)%256;
   1381                     SysFlashDataT[4*i+28]=(U8)(IHarmonic>>24)%256;
   1382                     flg_event[i]=0;
   1383                     break;
   1384                    default:
   1385                      break;
   \                     ??GUI_SYS_EVENTSET_41:
   \                     ??GUI_SYS_EVENTSET_42:
   \   000005A2   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_40:
   \   000005A4   0x280B             CMP      R0,#+11
   \   000005A6   0xF280 0x8194      BGE.W    ??GUI_SYS_EVENTSET_43
   \   000005AA   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   000005AE   0x5C41             LDRB     R1,[R0, R1]
   \   000005B0   0x2901             CMP      R1,#+1
   \   000005B2   0xD1F6             BNE.N    ??GUI_SYS_EVENTSET_42
   \   000005B4   0x2800             CMP      R0,#+0
   \   000005B6   0xD018             BEQ.N    ??GUI_SYS_EVENTSET_44
   \   000005B8   0x2802             CMP      R0,#+2
   \   000005BA   0xF000 0x80A2      BEQ.W    ??GUI_SYS_EVENTSET_45
   \   000005BE   0xD331             BCC.N    ??GUI_SYS_EVENTSET_46
   \   000005C0   0x2804             CMP      R0,#+4
   \   000005C2   0xF000 0x80D8      BEQ.W    ??GUI_SYS_EVENTSET_47
   \   000005C6   0xF0C0 0x80B9      BCC.W    ??GUI_SYS_EVENTSET_48
   \   000005CA   0x2806             CMP      R0,#+6
   \   000005CC   0xF000 0x810D      BEQ.W    ??GUI_SYS_EVENTSET_49
   \   000005D0   0xF0C0 0x80EE      BCC.W    ??GUI_SYS_EVENTSET_50
   \   000005D4   0x2808             CMP      R0,#+8
   \   000005D6   0xF000 0x8141      BEQ.W    ??GUI_SYS_EVENTSET_51
   \   000005DA   0xF0C0 0x8123      BCC.W    ??GUI_SYS_EVENTSET_52
   \   000005DE   0x280A             CMP      R0,#+10
   \   000005E0   0xF000 0x815A      BEQ.W    ??GUI_SYS_EVENTSET_53
   \   000005E4   0xF0C0 0x813B      BCC.W    ??GUI_SYS_EVENTSET_54
   \   000005E8   0xE7DB             B.N      ??GUI_SYS_EVENTSET_41
   \                     ??GUI_SYS_EVENTSET_44:
   \   000005EA   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000005EE   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000005F2   0x2210             MOVS     R2,#+16
   \   000005F4   0x764A             STRB     R2,[R1, #+25]
   \   000005F6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000005FA   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000005FE   0x2227             MOVS     R2,#+39
   \   00000600   0x768A             STRB     R2,[R1, #+26]
   \   00000602   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000606   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000060A   0x2200             MOVS     R2,#+0
   \   0000060C   0x76CA             STRB     R2,[R1, #+27]
   \   0000060E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000612   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000616   0x2200             MOVS     R2,#+0
   \   00000618   0x770A             STRB     R2,[R1, #+28]
   \   0000061A   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   0000061E   0x2200             MOVS     R2,#+0
   \   00000620   0x5442             STRB     R2,[R0, R1]
   \   00000622   0xE7BE             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_46:
   \   00000624   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000628   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000062C   0x7E49             LDRB     R1,[R1, #+25]
   \   0000062E   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   00000632   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000636   0x7E92             LDRB     R2,[R2, #+26]
   \   00000638   0x0212             LSLS     R2,R2,#+8
   \   0000063A   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   0000063E   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   00000642   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000646   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000648   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   0000064C   0xF5B1 0x5FC8      CMP      R1,#+6400
   \   00000650   0xDC05             BGT.N    ??GUI_SYS_EVENTSET_55
   \   00000652   0x.... 0x....      LDR.W    R1,??DataTable14_8
   \   00000656   0xF44F 0x52C8      MOV      R2,#+6400
   \   0000065A   0x800A             STRH     R2,[R1, #+0]
   \   0000065C   0xE021             B.N      ??GUI_SYS_EVENTSET_56
   \                     ??GUI_SYS_EVENTSET_55:
   \   0000065E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000662   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000666   0x7E49             LDRB     R1,[R1, #+25]
   \   00000668   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   0000066C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000670   0x7E92             LDRB     R2,[R2, #+26]
   \   00000672   0x0212             LSLS     R2,R2,#+8
   \   00000674   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   00000678   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   0000067C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000680   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000682   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   00000686   0xF5B1 0x5F48      CMP      R1,#+12800
   \   0000068A   0xDC05             BGT.N    ??GUI_SYS_EVENTSET_57
   \   0000068C   0x.... 0x....      LDR.W    R1,??DataTable14_8
   \   00000690   0xF44F 0x5248      MOV      R2,#+12800
   \   00000694   0x800A             STRH     R2,[R1, #+0]
   \   00000696   0xE004             B.N      ??GUI_SYS_EVENTSET_56
   \                     ??GUI_SYS_EVENTSET_57:
   \   00000698   0x.... 0x....      LDR.W    R1,??DataTable14_8
   \   0000069C   0xF44F 0x42C8      MOV      R2,#+25600
   \   000006A0   0x800A             STRH     R2,[R1, #+0]
   \                     ??GUI_SYS_EVENTSET_56:
   \   000006A2   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000006A6   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000006AA   0x.... 0x....      LDR.W    R2,??DataTable14_8
   \   000006AE   0x7812             LDRB     R2,[R2, #+0]
   \   000006B0   0xF44F 0x7380      MOV      R3,#+256
   \   000006B4   0xFB92 0xF5F3      SDIV     R5,R2,R3
   \   000006B8   0xFB05 0x2513      MLS      R5,R5,R3,R2
   \   000006BC   0x764D             STRB     R5,[R1, #+25]
   \   000006BE   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000006C2   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000006C6   0x.... 0x....      LDR.W    R2,??DataTable14_8
   \   000006CA   0x8812             LDRH     R2,[R2, #+0]
   \   000006CC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000006CE   0x0A12             LSRS     R2,R2,#+8
   \   000006D0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000006D2   0xF44F 0x7380      MOV      R3,#+256
   \   000006D6   0xFB92 0xF5F3      SDIV     R5,R2,R3
   \   000006DA   0xFB05 0x2513      MLS      R5,R5,R3,R2
   \   000006DE   0x768D             STRB     R5,[R1, #+26]
   \   000006E0   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000006E4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000006E8   0x2200             MOVS     R2,#+0
   \   000006EA   0x76CA             STRB     R2,[R1, #+27]
   \   000006EC   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000006F0   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000006F4   0x2200             MOVS     R2,#+0
   \   000006F6   0x770A             STRB     R2,[R1, #+28]
   \   000006F8   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   000006FC   0x2200             MOVS     R2,#+0
   \   000006FE   0x5442             STRB     R2,[R0, R1]
   \   00000700   0xE74F             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_45:
   \   00000702   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000706   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000070A   0x22BC             MOVS     R2,#+188
   \   0000070C   0x764A             STRB     R2,[R1, #+25]
   \   0000070E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000712   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000716   0x2202             MOVS     R2,#+2
   \   00000718   0x768A             STRB     R2,[R1, #+26]
   \   0000071A   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000071E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000722   0x2200             MOVS     R2,#+0
   \   00000724   0x76CA             STRB     R2,[R1, #+27]
   \   00000726   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000072A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000072E   0x2200             MOVS     R2,#+0
   \   00000730   0x770A             STRB     R2,[R1, #+28]
   \   00000732   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000736   0x2200             MOVS     R2,#+0
   \   00000738   0x5442             STRB     R2,[R0, R1]
   \   0000073A   0xE732             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_48:
   \   0000073C   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000740   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000744   0x2202             MOVS     R2,#+2
   \   00000746   0x764A             STRB     R2,[R1, #+25]
   \   00000748   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000074C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000750   0x2200             MOVS     R2,#+0
   \   00000752   0x768A             STRB     R2,[R1, #+26]
   \   00000754   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000758   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000075C   0x2200             MOVS     R2,#+0
   \   0000075E   0x76CA             STRB     R2,[R1, #+27]
   \   00000760   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000764   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000768   0x2200             MOVS     R2,#+0
   \   0000076A   0x770A             STRB     R2,[R1, #+28]
   \   0000076C   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000770   0x2200             MOVS     R2,#+0
   \   00000772   0x5442             STRB     R2,[R0, R1]
   \   00000774   0xE715             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_47:
   \   00000776   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000077A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000077E   0x22C8             MOVS     R2,#+200
   \   00000780   0x764A             STRB     R2,[R1, #+25]
   \   00000782   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000786   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000078A   0x2200             MOVS     R2,#+0
   \   0000078C   0x768A             STRB     R2,[R1, #+26]
   \   0000078E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000792   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000796   0x2200             MOVS     R2,#+0
   \   00000798   0x76CA             STRB     R2,[R1, #+27]
   \   0000079A   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000079E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007A2   0x2200             MOVS     R2,#+0
   \   000007A4   0x770A             STRB     R2,[R1, #+28]
   \   000007A6   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   000007AA   0x2200             MOVS     R2,#+0
   \   000007AC   0x5442             STRB     R2,[R0, R1]
   \   000007AE   0xE6F8             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_50:
   \   000007B0   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000007B4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007B8   0x22C8             MOVS     R2,#+200
   \   000007BA   0x764A             STRB     R2,[R1, #+25]
   \   000007BC   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000007C0   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007C4   0x2200             MOVS     R2,#+0
   \   000007C6   0x768A             STRB     R2,[R1, #+26]
   \   000007C8   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000007CC   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007D0   0x2200             MOVS     R2,#+0
   \   000007D2   0x76CA             STRB     R2,[R1, #+27]
   \   000007D4   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000007D8   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007DC   0x2200             MOVS     R2,#+0
   \   000007DE   0x770A             STRB     R2,[R1, #+28]
   \   000007E0   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   000007E4   0x2200             MOVS     R2,#+0
   \   000007E6   0x5442             STRB     R2,[R0, R1]
   \   000007E8   0xE6DB             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_49:
   \   000007EA   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000007EE   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007F2   0x2264             MOVS     R2,#+100
   \   000007F4   0x764A             STRB     R2,[R1, #+25]
   \   000007F6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000007FA   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007FE   0x2200             MOVS     R2,#+0
   \   00000800   0x768A             STRB     R2,[R1, #+26]
   \   00000802   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000806   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000080A   0x2200             MOVS     R2,#+0
   \   0000080C   0x76CA             STRB     R2,[R1, #+27]
   \   0000080E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000812   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000816   0x2200             MOVS     R2,#+0
   \   00000818   0x770A             STRB     R2,[R1, #+28]
   \   0000081A   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   0000081E   0x2200             MOVS     R2,#+0
   \   00000820   0x5442             STRB     R2,[R0, R1]
   \   00000822   0xE6BE             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_52:
   \   00000824   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000828   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000082C   0x22F4             MOVS     R2,#+244
   \   0000082E   0x764A             STRB     R2,[R1, #+25]
   \   00000830   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000834   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000838   0x2201             MOVS     R2,#+1
   \   0000083A   0x768A             STRB     R2,[R1, #+26]
   \   0000083C   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000840   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000844   0x2200             MOVS     R2,#+0
   \   00000846   0x76CA             STRB     R2,[R1, #+27]
   \   00000848   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000084C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000850   0x2200             MOVS     R2,#+0
   \   00000852   0x770A             STRB     R2,[R1, #+28]
   \   00000854   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000858   0x2200             MOVS     R2,#+0
   \   0000085A   0x5442             STRB     R2,[R0, R1]
   \                     ??GUI_SYS_EVENTSET_51:
   \   0000085C   0xE6A1             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_54:
   \   0000085E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000862   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000866   0x2290             MOVS     R2,#+144
   \   00000868   0x764A             STRB     R2,[R1, #+25]
   \   0000086A   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000086E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000872   0x2201             MOVS     R2,#+1
   \   00000874   0x768A             STRB     R2,[R1, #+26]
   \   00000876   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000087A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000087E   0x2200             MOVS     R2,#+0
   \   00000880   0x76CA             STRB     R2,[R1, #+27]
   \   00000882   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000886   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000088A   0x2200             MOVS     R2,#+0
   \   0000088C   0x770A             STRB     R2,[R1, #+28]
   \   0000088E   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000892   0x2200             MOVS     R2,#+0
   \   00000894   0x5442             STRB     R2,[R0, R1]
   \   00000896   0xE684             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_53:
   \   00000898   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000089C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008A0   0x22C8             MOVS     R2,#+200
   \   000008A2   0x764A             STRB     R2,[R1, #+25]
   \   000008A4   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000008A8   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008AC   0x2200             MOVS     R2,#+0
   \   000008AE   0x768A             STRB     R2,[R1, #+26]
   \   000008B0   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000008B4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008B8   0x2200             MOVS     R2,#+0
   \   000008BA   0x76CA             STRB     R2,[R1, #+27]
   \   000008BC   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000008C0   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008C4   0x2200             MOVS     R2,#+0
   \   000008C6   0x770A             STRB     R2,[R1, #+28]
   \   000008C8   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   000008CC   0x2200             MOVS     R2,#+0
   \   000008CE   0x5442             STRB     R2,[R0, R1]
   \   000008D0   0xE667             B.N      ??GUI_SYS_EVENTSET_42
   1386                  }
   1387          #if 0 //WK -->保存时  SysFlashData 全部保存     
   1388              for(int i=0;i<84;i++) 
   1389              {
   1390                SysFlashSave[i]=SysFlashDataT[i];
   1391              }
   1392              shell_ptr->ARGC=2;
   1393              shell_ptr->ARGV[0]="cd";
   1394              shell_ptr->ARGV[1]="f:\\"; 
   1395              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1396              
   1397              shell_ptr->ARGC = 2;
   1398              shell_ptr->ARGV[0]="cd";
   1399              shell_ptr->ARGV[1]="sysset";
   1400              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1401              
   1402              shell_ptr->ARGC=4;
   1403              shell_ptr->ARGV[0]="write";
   1404              shell_ptr->ARGV[1]="sysevent.txt";
   1405              shell_ptr->ARGV[2]="begin";
   1406              shell_ptr->ARGV[3]="0";
   1407              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashSave);
   1408              
   1409              // wk --> update
   1410              shell_ptr->ARGC=2;
   1411              shell_ptr->ARGV[0]="update";
   1412              shell_ptr->ARGV[1]="flush";
   1413          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashSave);  
   1414              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV); 
   1415          #endif  // WK -->保存时  SysFlashData 全部保存 END
   1416           
   1417          #if 1  // wk @130326 --> 只保存事件界面数据
   1418              for(int i=0;i<44;i++) 
   \                     ??GUI_SYS_EVENTSET_43:
   \   000008D2   0x2000             MOVS     R0,#+0
   \   000008D4   0xE007             B.N      ??GUI_SYS_EVENTSET_58
   1419              {
   1420                SysFlashData[i+25]=SysFlashDataT[i+25];  
   \                     ??GUI_SYS_EVENTSET_59:
   \   000008D6   0x....             LDR.N    R1,??DataTable11
   \   000008D8   0x1841             ADDS     R1,R0,R1
   \   000008DA   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   000008DE   0x1882             ADDS     R2,R0,R2
   \   000008E0   0x7E52             LDRB     R2,[R2, #+25]
   \   000008E2   0x764A             STRB     R2,[R1, #+25]
   1421              }
   \   000008E4   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_58:
   \   000008E6   0x282C             CMP      R0,#+44
   \   000008E8   0xDBF5             BLT.N    ??GUI_SYS_EVENTSET_59
   1422              shell_ptr->ARGC=2;
   \   000008EA   0x2002             MOVS     R0,#+2
   \   000008EC   0x6220             STR      R0,[R4, #+32]
   1423              shell_ptr->ARGV[0]="cd";
   \   000008EE   0x....             ADR.N    R0,??DataTable11_1  ;; 0x63, 0x64, 0x00, 0x00
   \   000008F0   0x6020             STR      R0,[R4, #+0]
   1424              shell_ptr->ARGV[1]="f:\\"; 
   \   000008F2   0x....             ADR.N    R0,??DataTable11_2  ;; "f:\\"
   \   000008F4   0x6060             STR      R0,[R4, #+4]
   1425              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                     ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   000008F6   0x0021             MOVS     R1,R4
   \   000008F8   0x6A20             LDR      R0,[R4, #+32]
   \   000008FA   0x.... 0x....      BL       Shell_cd
   1426              
   1427              shell_ptr->ARGC = 2;
   \   000008FE   0x2002             MOVS     R0,#+2
   \   00000900   0x6220             STR      R0,[R4, #+32]
   1428              shell_ptr->ARGV[0]="cd";
   \   00000902   0x....             ADR.N    R0,??DataTable11_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000904   0x6020             STR      R0,[R4, #+0]
   1429              shell_ptr->ARGV[1]="sysset";
   \   00000906   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000090A   0x6060             STR      R0,[R4, #+4]
   1430              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000090C   0x0021             MOVS     R1,R4
   \   0000090E   0x6A20             LDR      R0,[R4, #+32]
   \   00000910   0x.... 0x....      BL       Shell_cd
   1431              
   1432              shell_ptr->ARGC=4;
   \   00000914   0x2004             MOVS     R0,#+4
   \   00000916   0x6220             STR      R0,[R4, #+32]
   1433              shell_ptr->ARGV[0]="w";
   \   00000918   0x....             ADR.N    R0,??DataTable11_3  ;; "w"
   \   0000091A   0x6020             STR      R0,[R4, #+0]
   1434              shell_ptr->ARGV[1]="sysevent.txt";
   \   0000091C   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000920   0x6060             STR      R0,[R4, #+4]
   1435              shell_ptr->ARGV[2]="begin";
   \   00000922   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000926   0x60A0             STR      R0,[R4, #+8]
   1436              shell_ptr->ARGV[3]="0";  // WK @130326 --> 偏移 26  注意：偏移25时，初始上电时，波形个数为2.55，因此该到了偏移26
   \   00000928   0x....             ADR.N    R0,??DataTable11_6  ;; "0"
   \   0000092A   0x60E0             STR      R0,[R4, #+12]
   1437              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,44,&(SysFlashData[25]));
                     ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   0000092C   0x.... 0x....      LDR.W    R3,??DataTable14_9
   \   00000930   0x222C             MOVS     R2,#+44
   \   00000932   0x0021             MOVS     R1,R4
   \   00000934   0x6A20             LDR      R0,[R4, #+32]
   \   00000936   0x.... 0x....      BL       Shell_write_binary
   1438              
   1439              shell_ptr->ARGC=2;
   \   0000093A   0x2002             MOVS     R0,#+2
   \   0000093C   0x6220             STR      R0,[R4, #+32]
   1440              shell_ptr->ARGV[0]="update";// wk --> update
   \   0000093E   0x....             LDR.N    R0,??DataTable11_4
   \   00000940   0x6020             STR      R0,[R4, #+0]
   1441              shell_ptr->ARGV[1]="flush";
   \   00000942   0x....             LDR.N    R0,??DataTable11_5
   \   00000944   0x6060             STR      R0,[R4, #+4]
   1442          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,44,&(SysFlashSave[25]));
   1443              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
                     ^
Warning[Pe223]: function "Shell_update" declared implicitly
   \   00000946   0x0021             MOVS     R1,R4
   \   00000948   0x6A20             LDR      R0,[R4, #+32]
   \   0000094A   0x.... 0x....      BL       Shell_update
   1444          #endif
   1445                  /*WK --> 保存成功标志，使字体变黄显示 */
   1446              for(k=0; k<11; k++)
   \   0000094E   0x2000             MOVS     R0,#+0
   \   00000950   0xE052             B.N      ??GUI_SYS_EVENTSET_60
   1447                  {
   1448                      temp=7*k;
   \                     ??GUI_SYS_EVENTSET_61:
   \   00000952   0x2107             MOVS     R1,#+7
   \   00000954   0xFB01 0xF500      MUL      R5,R1,R0
   1449                      ParaSetC108[temp + 0] = 0x5204;         //P  显示数据的模式
   \   00000958   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000095A   0xA925             ADD      R1,SP,#+148
   \   0000095C   0xF245 0x2204      MOVW     R2,#+20996
   \   00000960   0xF821 0x2015      STRH     R2,[R1, R5, LSL #+1]
   1450                      ParaSetC108[temp + 1] = SysEventXY[2*k];            //显示相位的X坐标
   \   00000964   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000966   0xA925             ADD      R1,SP,#+148
   \   00000968   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   0000096C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000096E   0xAA04             ADD      R2,SP,#+16
   \   00000970   0xF832 0x2020      LDRH     R2,[R2, R0, LSL #+2]
   \   00000974   0x804A             STRH     R2,[R1, #+2]
   1451                      ParaSetC108[temp + 2] = SysEventXY[2*k + 1];     //Y坐标
   \   00000976   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000978   0x0041             LSLS     R1,R0,#+1
   \   0000097A   0xAA04             ADD      R2,SP,#+16
   \   0000097C   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000980   0x8849             LDRH     R1,[R1, #+2]
   \   00000982   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000984   0xAA25             ADD      R2,SP,#+148
   \   00000986   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   0000098A   0x8091             STRH     R1,[R2, #+4]
   1452                      ParaSetC108[temp + 3] = 0xffc1;         //白色，下为黑色
   \   0000098C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000098E   0xA925             ADD      R1,SP,#+148
   \   00000990   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000994   0xF64F 0x72C1      MOVW     R2,#+65473
   \   00000998   0x80CA             STRH     R2,[R1, #+6]
   1453                      ParaSetC108[temp + 4] = 0x0000;
   \   0000099A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000099C   0xA925             ADD      R1,SP,#+148
   \   0000099E   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   000009A2   0x2200             MOVS     R2,#+0
   \   000009A4   0x810A             STRH     R2,[R1, #+8]
   1454                      ParaSetC108[temp + 5] =(U16) (SysFlashDataT[3+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[2+4*k+EVESET_INDEX]);
   \   000009A6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000009A8   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000009AC   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009B0   0x7F09             LDRB     R1,[R1, #+28]
   \   000009B2   0x0209             LSLS     R1,R1,#+8
   \   000009B4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000009B6   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   000009BA   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000009BE   0x7ED2             LDRB     R2,[R2, #+27]
   \   000009C0   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   000009C4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000009C6   0xAA25             ADD      R2,SP,#+148
   \   000009C8   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   000009CC   0x8151             STRH     R1,[R2, #+10]
   1455                      ParaSetC108[temp + 6] =(U16) (SysFlashDataT[1+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[4*k+EVESET_INDEX]);
   \   000009CE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000009D0   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000009D4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009D8   0x7E89             LDRB     R1,[R1, #+26]
   \   000009DA   0x0209             LSLS     R1,R1,#+8
   \   000009DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000009DE   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   000009E2   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000009E6   0x7E52             LDRB     R2,[R2, #+25]
   \   000009E8   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   000009EC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000009EE   0xAA25             ADD      R2,SP,#+148
   \   000009F0   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   000009F4   0x8191             STRH     R1,[R2, #+12]
   1456                  }
   \   000009F6   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_60:
   \   000009F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000009FA   0x280B             CMP      R0,#+11
   \   000009FC   0xD3A9             BCC.N    ??GUI_SYS_EVENTSET_61
   1457                   YADA_C0(EventSetAddr, ParaSetC108, 11*7);
   \   000009FE   0x224D             MOVS     R2,#+77
   \   00000A00   0xA925             ADD      R1,SP,#+148
   \   00000A02   0xF640 0x20F7      MOVW     R0,#+2807
   \   00000A06   0x.... 0x....      BL       YADA_C0
   1458                   YADA_C108(EventSetAddr,11);   //写入有效值，每次10个
   \   00000A0A   0x210B             MOVS     R1,#+11
   \   00000A0C   0xF640 0x20F7      MOVW     R0,#+2807
   \   00000A10   0x.... 0x....      BL       YADA_C108
   1459                 /* wk --> 保存成功标志 END */
   1460                   
   1461                 SysSet.SaveFlg=0; //清楚保存标志
   \   00000A14   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000A18   0x2100             MOVS     R1,#+0
   \   00000A1A   0x70C1             STRB     R1,[R0, #+3]
   1462                 _mem_free(shell_ptr); 
   \   00000A1C   0x0020             MOVS     R0,R4
   \   00000A1E   0x.... 0x....      BL       _lwmem_free
   \   00000A22   0xE002             B.N      ??GUI_SYS_EVENTSET_62
   1463                 
   1464          //       TEST[7]=SysSet.ParaIndex;
   1465          //       temp=SysSet.EvntIndex*4;
   1466          //       for(U8 i=0;i<4;i++)
   1467          //       {
   1468          //         TEST[7+i]=SysFlashData[temp+i+EVESET_INDEX];
   1469          //       }
   1470                 
   1471              }
   1472              else
   1473                _mem_free(shell_ptr); 
   \                     ??GUI_SYS_EVENTSET_39:
   \   00000A24   0x0020             MOVS     R0,R4
   \   00000A26   0x.... 0x....      BL       _lwmem_free
   1474              
   1475          }
   \                     ??GUI_SYS_EVENTSET_62:
   \   00000A2A   0xB057             ADD      SP,SP,#+348
   \   00000A2C   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??flg_event:
   \   00000000                      DS8 12
   1476          
   1477          /*******************************************************************************
   1478          * 函  数  名      : GUI_EventMonitor
   1479          * 描      述      : 事件监测显示，NPage[101~114]为事件的类别叠加;
   1480          * 输      入      : 无
   1481          * 返      回      : 无
   1482          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1483          void GUI_EventMonitor(U8 U_DISK)
   1484          {
   \                     GUI_EventMonitor:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0A9             SUB      SP,SP,#+164
   1485                  U16 EVENTMONXY[18]= {181,127,181,174,181,219,181,265,181,310,505,127,505,174,
   1486                                   505,219,505,265
   1487                                  };
   \   00000004   0xA820             ADD      R0,SP,#+128
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable14_10
   \   0000000A   0x2224             MOVS     R2,#+36
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
   1488              U16 MONITC108[63]={0};
   \   00000010   0xA800             ADD      R0,SP,#+0
   \   00000012   0x2180             MOVS     R1,#+128
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
   1489              U8 temp=0;
   \   00000018   0x2100             MOVS     R1,#+0
   1490              for(U8 k=0; k<9; k++)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xE036             B.N      ??GUI_EventMonitor_0
   1491              {
   1492                  temp=7*k;
   \                     ??GUI_EventMonitor_1:
   \   0000001E   0x2107             MOVS     R1,#+7
   \   00000020   0xFB01 0xF100      MUL      R1,R1,R0
   1493                  MONITC108[temp + 0] = 0x6004;         //P  显示数据的模式
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0xAA00             ADD      R2,SP,#+0
   \   00000028   0xF246 0x0304      MOVW     R3,#+24580
   \   0000002C   0xF822 0x3011      STRH     R3,[R2, R1, LSL #+1]
   1494                  MONITC108[temp + 1] =EVENTMONXY[2*k];            //显示相位的X坐标
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0xAA00             ADD      R2,SP,#+0
   \   00000034   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xAB20             ADD      R3,SP,#+128
   \   0000003C   0xF833 0x3020      LDRH     R3,[R3, R0, LSL #+2]
   \   00000040   0x8053             STRH     R3,[R2, #+2]
   1495                  MONITC108[temp + 2] = EVENTMONXY[2*k + 1];     //Y坐标
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x0042             LSLS     R2,R0,#+1
   \   00000046   0xAB20             ADD      R3,SP,#+128
   \   00000048   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000004C   0x8852             LDRH     R2,[R2, #+2]
   \   0000004E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000050   0xAB00             ADD      R3,SP,#+0
   \   00000052   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   00000056   0x809A             STRH     R2,[R3, #+4]
   1496                  MONITC108[temp + 3] = 0xffff;         //白色，下为黑色
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0xAA00             ADD      R2,SP,#+0
   \   0000005C   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000060   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000064   0x80D3             STRH     R3,[R2, #+6]
   1497                  MONITC108[temp + 4] = 0x0000;
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0xAA00             ADD      R2,SP,#+0
   \   0000006A   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000006E   0x2300             MOVS     R3,#+0
   \   00000070   0x8113             STRH     R3,[R2, #+8]
   1498                  MONITC108[temp + 5] =0;
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0xAA00             ADD      R2,SP,#+0
   \   00000076   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000007A   0x2300             MOVS     R3,#+0
   \   0000007C   0x8153             STRH     R3,[R2, #+10]
   1499                  MONITC108[temp + 6] =0;
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0xAA00             ADD      R2,SP,#+0
   \   00000082   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x818A             STRH     R2,[R1, #+12]
   1500              }
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_EventMonitor_0:
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x2809             CMP      R0,#+9
   \   00000090   0xD3C5             BCC.N    ??GUI_EventMonitor_1
   1501              YADA_C0(EventMonLAddr, MONITC108, 63);
   \   00000092   0x223F             MOVS     R2,#+63
   \   00000094   0xA900             ADD      R1,SP,#+0
   \   00000096   0xF640 0x3051      MOVW     R0,#+2897
   \   0000009A   0x.... 0x....      BL       YADA_C0
   1502              YADA_C108(EventMonLAddr, 9);   //写入事件，每次10个
   \   0000009E   0x2109             MOVS     R1,#+9
   \   000000A0   0xF640 0x3051      MOVW     R0,#+2897
   \   000000A4   0x.... 0x....      BL       YADA_C108
   1503          }
   \   000000A8   0xB029             ADD      SP,SP,#+164
   \   000000AA   0xBD00             POP      {PC}             ;; return
   1504          /*******************************************************************************
   1505          * 函  数  名      : GUI_EventList
   1506          * 描      述      : 事件列表显示，从nandflash中读取。
   1507          * 输      入      : 无
   1508          * 返      回      : 无
   1509          *******************************************************************************/
   1510          //void GUI_EventList(void)
   1511          //{
   1512          //    U16 EVELSTXY[]= {30,40,35,63,30,70,35,93,30,98,35,121,30,125,35,148,30,152,35,175,30,179,35,202,30,206,
   1513          //                     35,229,30,233,35,256,30,262,35,285,30,288,35,311,30,316,35,339,30,342,35,365,30,370,35,393,30,396,35,419
   1514          //                    };
   1515          //    U8 EVECONTENT[14][35]= {0},i,temp=0;
   1516          //    YADA_40(0x0000,0xfc00);//前景色为黑色，背景色为橙色 set only once
   1517          //    if(EVEfunflg==1)  //功能键发生标志置一
   1518          //    {
   1519          //        YADA_5B(&EVELSTXY[EventOldIndex*4],4);//擦除前一处
   1520          //        YADA_5A(&EVELSTXY[EVEline*4],4);    //背景色填充相所在的矩形区域
   1521          //        EventOldIndex=EVEline;
   1522          //        EVEfunflg=0;
   1523          //    }
   1524          //   for(i=14*EVEpage; i<14*EVEpage+14; i++)
   1525          //    {
   1526          //      temp=14*EVEpage;
   1527          //        PageRead(NBlock[i],NPage[i],EVECONTENT[i-temp]); //从nandflash中把事件基本情况读到EVECONTENT
   1528          //        delay_us(1);
   1529          //        YADA_98(40, EVELSTXY[(i-temp)*4+1], 0x22, 0x81, 0x02, 0xffff, 0x0000, EVECONTENT[i-temp], numsize);
   1530          //        _NOP();
   1531          //    } 
   1532          //}
   1533          /*******************************************************************************
   1534          * 函  数  名      : GUI_EventWave
   1535          * 描      述      : 事件波形显示
   1536          * 输      入      : 无
   1537          * 返      回      : 无
   1538          *******************************************************************************/
   1539          //void GUI_EventWave(U8 U_DISK)
   1540          //{
   1541          //  if(U_DISK==1)
   1542          //  {
   1543          //    //LCD暂存缓冲区多次写入一次读出显示,或者调整为分次读取分次显示，是否能增加一次读取的点数？？
   1544          //    U32 filesize=0;
   1545          //    U16 bufsize=1600;
   1546          //    U8 readnum=0;//读取次数
   1547          //    U8 linenum=0;//csv中每行6个数据，每一通道可画点数，bufsize为3200时，linenum大概为80左右.
   1548          //    //C0发送数据个数与linenum有关，linenum应小于120.亦涉及到EVEUI数组大小
   1549          //    U16 totalline=0;
   1550          //    U8 lastrestflt=0;//上一次读取剩余未画线的点数0-5，浮点数个数
   1551          //    U16 Coord_UI[]= {14,68,614,225,273,429};   //剪切及原点坐标
   1552          ////    int EVEUI[50*6]= {0};  //int *EveUI;
   1553          //    U16 EVEUI[50*6]= {0};  //int *EveUI;  // modified by wk 
   1554          //    U8 EveWav[80*20]= {0}; //*EveWav;
   1555          //    U8 buf[20],LEN[2],length,s;
   1556          //    float Evefloat[50*6]= {0}; //留有一定余量
   1557          //   
   1558          //    sprintf(buf, "/FAULTRD/%d.CSV" ,EVEnum-EVEline*EVEpage);
   1559          //    s = CH376FileOpenPath( buf );  //直接打开多级目录下的文件,这是CH376FileOpenPath子程序内部由多次逐级打开组合而成
   1560          //    //???当文件不存在时？
   1561          //    s = CH376ByteLocate( 0 );
   1562          //    s=CH376ByteRead(LEN,4,NULL);
   1563          //    length=atoi(LEN);
   1564          //    filesize= CH376GetFileSize();//读取文件大小必须紧接对filesize的操作
   1565          //    readnum=(filesize-length-4)/bufsize+1;
   1566          //    U16 j=0;
   1567          //    char txt[9],k=0;
   1568          //    for(U8 lv_num=0; lv_num<readnum; lv_num++)
   1569          //    {
   1570          //        s=CH376ByteLocate(length+4+bufsize*lv_num);
   1571          //        if(lv_num!=readnum-1)
   1572          //        {
   1573          //            bufsize=1600;
   1574          //        }
   1575          //        else
   1576          //        {
   1577          //            bufsize=filesize-length-4-(readnum-1)*1600;    //最后一次读取可能只需读取小于1600的数据量
   1578          //        }
   1579          //        //EveWav=(U8 *) malloc(bufsize * sizeof(U8));
   1580          //        s=CH376ByteRead(EveWav,bufsize,NULL);//EVEUILEN*16
   1581          //        for(U16 i=0; i<bufsize; i++)
   1582          //        {
   1583          //            txt[k]=EveWav[i];
   1584          //            k++;
   1585          //            if((EveWav[i]==',')||EveWav[i]==0x0d)
   1586          //            {
   1587          //                Evefloat[j]=atof(txt);
   1588          //                k=0;
   1589          //                j++;
   1590          //            }
   1591          //        }
   1592          //        //free(EveWav);
   1593          //        linenum=j/6;
   1594          //        lastrestflt=j%6;
   1595          //        FLTOINT_UI(Evefloat,EVEUI,linenum);//把U盘里的浮点数转化为需要的int数据做曲线
   1596          //        YADA_C0 (0x0000+totalline,EVEUI,linenum);
   1597          //        YADA_C0 (0x0280+totalline,&EVEUI[linenum],linenum);//,UB_addr
   1598          //        YADA_C0 (0x0640+totalline,&EVEUI[linenum*2],linenum);
   1599          //        //将所有采样数据写入触摸屏,分次写入。不需要擦除，不动的，不用104指令。
   1600          //        for(U8 m=0; m<lastrestflt; m++)
   1601          //        {
   1602          //            Evefloat[m]=Evefloat[linenum*6+m];
   1603          //        }
   1604          //        j=lastrestflt;
   1605          //        totalline=linenum+totalline;
   1606          //    }
   1607          //    YADA_C103 (0x0000,14,Coord_UI[3],totalline-1,1,3,16,COLOR[0]);
   1608          //    YADA_C103 (0x0280,14,Coord_UI[3],totalline-1,1,3,16,COLOR[1]);
   1609          //    YADA_C103 (0x0640,14,Coord_UI[3],totalline-1,1,3,16,COLOR[2]);
   1610          //    s = CH376FileClose( TRUE );  //关闭文件,自动更新文件长度 /
   1611          //  }
   1612          //    
   1613          //}
   1614          /*******************************************************************************
   1615          * 函  数  名      : EventSave
   1616          * 描      述      : 事件存储
   1617          * 输      入      :
   1618          * 返      回      : 无
   1619          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1620          void EventSave(U8 U_DISK)
   1621          {
   \                     EventSave:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xF5AD 0x6D81      SUB      SP,SP,#+1032
   1622              if(USB_Flg==1) // ==1 时插入
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable14_11
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xF040 0x80DC      BNE.W    ??EventSave_0
   1623              {
   1624                    SHELL_CONTEXT_PTR    shell_ptr;
   1625                    shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000012   0xF44F 0x70F2      MOV      R0,#+484
   \   00000016   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000001A   0x0004             MOVS     R4,R0
   1626                    _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000001C   0xF245 0x0101      MOVW     R1,#+20481
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       _lwmem_set_type
   1627                    static   char_ptr file_name="12345678.csv",dir_name,monthDir_name;
   1628                    static uint_16 year_old=0,month_old=0;
   1629                    uint_32 file_size;
   1630                    
   1631                    TIME_STRUCT             time_sf;
   1632                    DATE_STRUCT             date_sf;     
   1633                    _time_get(&time_sf);
   \   00000026   0xA805             ADD      R0,SP,#+20
   \   00000028   0x.... 0x....      BL       _time_get
   1634                    _time_to_date(&time_sf,&date_sf);
   \   0000002C   0xA900             ADD      R1,SP,#+0
   \   0000002E   0xA805             ADD      R0,SP,#+20
   \   00000030   0x.... 0x....      BL       _time_to_date
   1635              
   1636                    shell_ptr->ARGC = 2;
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0x6220             STR      R0,[R4, #+32]
   1637                    shell_ptr->ARGV[0]="cd";
   \   00000038   0x....             ADR.N    R0,??DataTable12_7  ;; 0x63, 0x64, 0x00, 0x00
   \   0000003A   0x6020             STR      R0,[R4, #+0]
   1638                    shell_ptr->ARGV[1]="u:\\event"; 
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable14_12
   \   00000040   0x6060             STR      R0,[R4, #+4]
   1639                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                           ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0x6A20             LDR      R0,[R4, #+32]
   \   00000046   0x.... 0x....      BL       Shell_cd
   1640                  
   1641                    if(year_old!=date_sf.YEAR) // wk --> creata a dir named of year
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable14_13
   \   0000004E   0x8800             LDRH     R0,[R0, #+0]
   \   00000050   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000054   0x4288             CMP      R0,R1
   \   00000056   0xD01A             BEQ.N    ??EventSave_1
   1642                    {
   1643                      dir_name=num2string(date_sf.YEAR,4,0);
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2104             MOVS     R1,#+4
   \   0000005C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000060   0x.... 0x....      BL       num2string
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable14_14
   \   00000068   0x6008             STR      R0,[R1, #+0]
   1644                      year_old=date_sf.YEAR;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable14_13
   \   0000006E   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000072   0x8001             STRH     R1,[R0, #+0]
   1645                      
   1646                      shell_ptr->ARGC = 2;
   \   00000074   0x2002             MOVS     R0,#+2
   \   00000076   0x6220             STR      R0,[R4, #+32]
   1647                      shell_ptr->ARGV[0]="mkdir";
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   0000007C   0x6020             STR      R0,[R4, #+0]
   1648                      shell_ptr->ARGV[1]=dir_name; 
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x6060             STR      R0,[R4, #+4]
   1649                      Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
                             ^
Warning[Pe223]: function "Shell_mkdir" declared implicitly
   \   00000086   0x0021             MOVS     R1,R4
   \   00000088   0x6A20             LDR      R0,[R4, #+32]
   \   0000008A   0x.... 0x....      BL       Shell_mkdir
   1650                    }
   1651                    
   1652                    shell_ptr->ARGC = 2;
   \                     ??EventSave_1:
   \   0000008E   0x2002             MOVS     R0,#+2
   \   00000090   0x6220             STR      R0,[R4, #+32]
   1653                    shell_ptr->ARGV[0]="cd";
   \   00000092   0x....             ADR.N    R0,??DataTable12_7  ;; 0x63, 0x64, 0x00, 0x00
   \   00000094   0x6020             STR      R0,[R4, #+0]
   1654                    shell_ptr->ARGV[1]=dir_name; 
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x6060             STR      R0,[R4, #+4]
   1655                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000009E   0x0021             MOVS     R1,R4
   \   000000A0   0x6A20             LDR      R0,[R4, #+32]
   \   000000A2   0x.... 0x....      BL       Shell_cd
   1656                    if(month_old!=date_sf.MONTH)
   \   000000A6   0x....             LDR.N    R0,??DataTable14_16
   \   000000A8   0x8800             LDRH     R0,[R0, #+0]
   \   000000AA   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000000AE   0x4288             CMP      R0,R1
   \   000000B0   0xD016             BEQ.N    ??EventSave_2
   1657                    {
   1658                      monthDir_name=num2string(date_sf.YEAR,2,0);
   \   000000B2   0x2200             MOVS     R2,#+0
   \   000000B4   0x2102             MOVS     R1,#+2
   \   000000B6   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000BA   0x.... 0x....      BL       num2string
   \   000000BE   0x....             LDR.N    R1,??DataTable14_17
   \   000000C0   0x6008             STR      R0,[R1, #+0]
   1659                      month_old=date_sf.MONTH;
   \   000000C2   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000C6   0x....             LDR.N    R1,??DataTable14_16
   \   000000C8   0x8008             STRH     R0,[R1, #+0]
   1660                      
   1661                      shell_ptr->ARGC = 2;
   \   000000CA   0x2002             MOVS     R0,#+2
   \   000000CC   0x6220             STR      R0,[R4, #+32]
   1662                      shell_ptr->ARGV[0]="mkdir";
   \   000000CE   0x....             LDR.N    R0,??DataTable14_15
   \   000000D0   0x6020             STR      R0,[R4, #+0]
   1663                      shell_ptr->ARGV[1]=monthDir_name; 
   \   000000D2   0x....             LDR.N    R0,??DataTable14_17
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x6060             STR      R0,[R4, #+4]
   1664                      Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
                             ^
Warning[Pe223]: function "Shell_mkdir" declared implicitly
   \   000000D8   0x0021             MOVS     R1,R4
   \   000000DA   0x6A20             LDR      R0,[R4, #+32]
   \   000000DC   0x.... 0x....      BL       Shell_mkdir
   1665                    }
   1666                    shell_ptr->ARGC = 2;
   \                     ??EventSave_2:
   \   000000E0   0x2002             MOVS     R0,#+2
   \   000000E2   0x6220             STR      R0,[R4, #+32]
   1667                    shell_ptr->ARGV[0]="cd";
   \   000000E4   0x....             ADR.N    R0,??DataTable12_7  ;; 0x63, 0x64, 0x00, 0x00
   \   000000E6   0x6020             STR      R0,[R4, #+0]
   1668                    shell_ptr->ARGV[1]=monthDir_name; 
   \   000000E8   0x....             LDR.N    R0,??DataTable14_17
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x6060             STR      R0,[R4, #+4]
   1669                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000000EE   0x0021             MOVS     R1,R4
   \   000000F0   0x6A20             LDR      R0,[R4, #+32]
   \   000000F2   0x.... 0x....      BL       Shell_cd
   1670                    
   1671                    if(file_name=="12345678.csv")
   \   000000F6   0x....             LDR.N    R0,??DataTable14_18
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x....             LDR.N    R1,??DataTable14_19
   \   000000FC   0x4288             CMP      R0,R1
   \   000000FE   0xD119             BNE.N    ??EventSave_3
   1672                    {
   1673                      file_name=num2string(date_sf.DAY*1000000+date_sf.HOUR*10000+date_sf.MINUTE*100+
   1674                                           date_sf.SECOND,8,1);       
   \   00000100   0x2201             MOVS     R2,#+1
   \   00000102   0x2108             MOVS     R1,#+8
   \   00000104   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000108   0x....             LDR.N    R3,??DataTable14_20  ;; 0xf4240
   \   0000010A   0xF8BD 0x5006      LDRH     R5,[SP, #+6]
   \   0000010E   0xF242 0x7610      MOVW     R6,#+10000
   \   00000112   0x4375             MULS     R5,R6,R5
   \   00000114   0xFB03 0x5000      MLA      R0,R3,R0,R5
   \   00000118   0xF8BD 0x3008      LDRH     R3,[SP, #+8]
   \   0000011C   0x2564             MOVS     R5,#+100
   \   0000011E   0xFB05 0x0003      MLA      R0,R5,R3,R0
   \   00000122   0xF8BD 0x300A      LDRH     R3,[SP, #+10]
   \   00000126   0xFA10 0xF083      UXTAH    R0,R0,R3
   \   0000012A   0x.... 0x....      BL       num2string
   \   0000012E   0x....             LDR.N    R1,??DataTable14_18
   \   00000130   0x6008             STR      R0,[R1, #+0]
   \   00000132   0xE028             B.N      ??EventSave_4
   1675                    }
   1676                    else
   1677                    {
   1678                      shell_ptr->ARGC = 2;
   \                     ??EventSave_3:
   \   00000134   0x2002             MOVS     R0,#+2
   \   00000136   0x6220             STR      R0,[R4, #+32]
   1679                      shell_ptr->ARGV[0]="df_s";
   \   00000138   0x....             LDR.N    R0,??DataTable14_21
   \   0000013A   0x6020             STR      R0,[R4, #+0]
   1680                      shell_ptr->ARGV[1]=file_name;   //wk --> 注意：查找的文件名暂时必须要是大写
   \   0000013C   0x....             LDR.N    R0,??DataTable14_18
   \   0000013E   0x6800             LDR      R0,[R0, #+0]
   \   00000140   0x6060             STR      R0,[R4, #+4]
   1681                      Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,&file_size);
                             ^
Warning[Pe223]: function "Shell_search_file_r1" declared implicitly
   \   00000142   0xAA04             ADD      R2,SP,#+16
   \   00000144   0x0021             MOVS     R1,R4
   \   00000146   0x6A20             LDR      R0,[R4, #+32]
   \   00000148   0x.... 0x....      BL       Shell_search_file_r1
   1682                      
   1683                      if(file_size>134217728)  // wk --> 128M = 128*1024*1024 bytes
   \   0000014C   0x9804             LDR      R0,[SP, #+16]
   \   0000014E   0xF1B0 0x6F00      CMP      R0,#+134217728
   \   00000152   0xD918             BLS.N    ??EventSave_4
   1684                      {
   1685                        file_name=num2string(date_sf.DAY*1000000+date_sf.HOUR*10000+date_sf.MINUTE*100+
   1686                                             date_sf.SECOND,8,1); 
   \   00000154   0x2201             MOVS     R2,#+1
   \   00000156   0x2108             MOVS     R1,#+8
   \   00000158   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000015C   0x....             LDR.N    R3,??DataTable14_20  ;; 0xf4240
   \   0000015E   0xF8BD 0x5006      LDRH     R5,[SP, #+6]
   \   00000162   0xF242 0x7610      MOVW     R6,#+10000
   \   00000166   0x4375             MULS     R5,R6,R5
   \   00000168   0xFB03 0x5000      MLA      R0,R3,R0,R5
   \   0000016C   0xF8BD 0x3008      LDRH     R3,[SP, #+8]
   \   00000170   0x2564             MOVS     R5,#+100
   \   00000172   0xFB05 0x0003      MLA      R0,R5,R3,R0
   \   00000176   0xF8BD 0x300A      LDRH     R3,[SP, #+10]
   \   0000017A   0xFA10 0xF083      UXTAH    R0,R0,R3
   \   0000017E   0x.... 0x....      BL       num2string
   \   00000182   0x....             LDR.N    R1,??DataTable14_18
   \   00000184   0x6008             STR      R0,[R1, #+0]
   1687                      }
   1688                    }
   1689                    
   1690                    shell_ptr->ARGC=4;
   \                     ??EventSave_4:
   \   00000186   0x2004             MOVS     R0,#+4
   \   00000188   0x6220             STR      R0,[R4, #+32]
   1691                    shell_ptr->ARGV[0]="write";
   \   0000018A   0x....             LDR.N    R0,??DataTable14_22
   \   0000018C   0x6020             STR      R0,[R4, #+0]
   1692                    shell_ptr->ARGV[1]=file_name;
   \   0000018E   0x....             LDR.N    R0,??DataTable14_18
   \   00000190   0x6800             LDR      R0,[R0, #+0]
   \   00000192   0x6060             STR      R0,[R4, #+4]
   1693                    shell_ptr->ARGV[2]="current";
   \   00000194   0x....             LDR.N    R0,??DataTable14_23
   \   00000196   0x60A0             STR      R0,[R4, #+8]
   1694                    shell_ptr->ARGV[3]="0";
   \   00000198   0x....             ADR.N    R0,??DataTable14_3  ;; "0"
   \   0000019A   0x60E0             STR      R0,[R4, #+12]
   1695                    Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,7,&date_sf);
                           ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   0000019C   0xAB00             ADD      R3,SP,#+0
   \   0000019E   0x2207             MOVS     R2,#+7
   \   000001A0   0x0021             MOVS     R1,R4
   \   000001A2   0x6A20             LDR      R0,[R4, #+32]
   \   000001A4   0x.... 0x....      BL       Shell_write_binary
   1696                    
   1697                    uchar test[1000]={0,1,2,3,4,5,6,7,8,9,10};
   \   000001A8   0xA807             ADD      R0,SP,#+28
   \   000001AA   0x....             LDR.N    R1,??DataTable14_24
   \   000001AC   0xF44F 0x727A      MOV      R2,#+1000
   \   000001B0   0x.... 0x....      BL       __aeabi_memcpy4
   1698              //      shell_ptr->ARGC=4;
   1699              //      shell_ptr->ARGV[0]="write";
   1700              //      shell_ptr->ARGV[1]=file_name;
   1701              //      shell_ptr->ARGV[2]="current";
   1702              //      shell_ptr->ARGV[3]="0";
   1703                    Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,1000,test);
   \   000001B4   0xAB07             ADD      R3,SP,#+28
   \   000001B6   0xF44F 0x727A      MOV      R2,#+1000
   \   000001BA   0x0021             MOVS     R1,R4
   \   000001BC   0x6A20             LDR      R0,[R4, #+32]
   \   000001BE   0x.... 0x....      BL       Shell_write_binary
   1704              
   1705                   _mem_free(shell_ptr);  // wk @130403 --> important
   \   000001C2   0x0020             MOVS     R0,R4
   \   000001C4   0x.... 0x....      BL       _lwmem_free
   \   000001C8   0xE002             B.N      ??EventSave_5
   1706              }
   1707              else
   1708              {
   1709                printf("\nATTENTION:USB is DETACHED\n");
   \                     ??EventSave_0:
   \   000001CA   0x....             LDR.N    R0,??DataTable14_25
   \   000001CC   0x.... 0x....      BL       _io_printf
   1710              }
   1711          }
   \                     ??EventSave_5:
   \   000001D0   0xF50D 0x6D81      ADD      SP,SP,#+1032
   \   000001D4   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .data, align 4
   \                     ??file_name:
   \   00000000   0x........         DC32 `?<Constant "12345678.csv">`

   \                                 In section .bss, align 4
   \                     ??dir_name:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??monthDir_name:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
   \                     ??year_old:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ??month_old:
   \   00000000                      DS8 2
   1712          /*******************************************************************************
   1713          * 函  数  名      : PowerSave
   1714          * 描      述      : 电能数据存储
   1715          * 输      入      : 无
   1716          * 返      回      : 无
   1717          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1718          void PowerSave(void)
   1719          {
   \                     PowerSave:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   1720            if(USB_Flg==1)
   \   00000004   0x....             LDR.N    R0,??DataTable14_11
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xF040 0x8096      BNE.W    ??PowerSave_0
   1721            {
   1722                SHELL_CONTEXT_PTR    shell_ptr;
   1723                shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   0000000E   0xF44F 0x70F2      MOV      R0,#+484
   \   00000012   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000016   0x0004             MOVS     R4,R0
   1724                _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   00000018   0xF245 0x0101      MOVW     R1,#+20481
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0x.... 0x....      BL       _lwmem_set_type
   1725                uint_32 file_size;
   1726                static   char_ptr file_name="123456.csv",dir_name="1000";
   1727                static uint_16 year_old=0;
   1728                TIME_STRUCT             time_sf;
   1729                DATE_STRUCT             date_sf;
   1730                
   1731                _time_get(&time_sf);
   \   00000022   0xA805             ADD      R0,SP,#+20
   \   00000024   0x.... 0x....      BL       _time_get
   1732                _time_to_date(&time_sf,&date_sf);
   \   00000028   0xA900             ADD      R1,SP,#+0
   \   0000002A   0xA805             ADD      R0,SP,#+20
   \   0000002C   0x.... 0x....      BL       _time_to_date
   1733                
   1734          //      printf("Y=%d\tM=%d\tD=%d\tH=%d\tM=%d\tS=%d\n",date_sf.YEAR,date_sf.MONTH,date_sf.DAY,date_sf.HOUR,date_sf.MINUTE,date_sf.SECOND);
   1735                
   1736                shell_ptr->ARGC = 2;
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x6220             STR      R0,[R4, #+32]
   1737                shell_ptr->ARGV[0]="cd";
   \   00000034   0x....             ADR.N    R0,??DataTable14_6  ;; 0x63, 0x64, 0x00, 0x00
   \   00000036   0x6020             STR      R0,[R4, #+0]
   1738                shell_ptr->ARGV[1]="u:\\power"; 
   \   00000038   0x....             LDR.N    R0,??DataTable14_26
   \   0000003A   0x6060             STR      R0,[R4, #+4]
   1739                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
                       ^
Warning[Pe223]: function "Shell_cd" declared implicitly
   \   0000003C   0x0021             MOVS     R1,R4
   \   0000003E   0x6A20             LDR      R0,[R4, #+32]
   \   00000040   0x.... 0x....      BL       Shell_cd
   1740                
   1741                if(year_old!=date_sf.YEAR) // wk --> creata a dir named of year
   \   00000044   0x....             LDR.N    R0,??DataTable14_27
   \   00000046   0x8800             LDRH     R0,[R0, #+0]
   \   00000048   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000004C   0x4288             CMP      R0,R1
   \   0000004E   0xD012             BEQ.N    ??PowerSave_1
   1742                {
   1743                  dir_name=num2string((uint_32)date_sf.YEAR,4,0);
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x2104             MOVS     R1,#+4
   \   00000054   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000058   0x.... 0x....      BL       num2string
   \   0000005C   0x....             LDR.N    R1,??DataTable14_28
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   1744          //        dir_name=num2string_s((uint_32)date_sf.YEAR,4);
   1745          //        dir_name="2013";
   1746                  year_old=date_sf.YEAR;
   \   00000060   0x....             LDR.N    R0,??DataTable14_27
   \   00000062   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000066   0x8001             STRH     R1,[R0, #+0]
   1747                  
   1748          //        shell_ptr->ARGC = 2;
   1749          //        shell_ptr->ARGV[0]="mkdir";
   1750                  shell_ptr->ARGV[1]=dir_name; 
   \   00000068   0x....             LDR.N    R0,??DataTable14_28
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x6060             STR      R0,[R4, #+4]
   1751                  Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
                         ^
Warning[Pe223]: function "Shell_mkdir" declared implicitly
   \   0000006E   0x0021             MOVS     R1,R4
   \   00000070   0x6A20             LDR      R0,[R4, #+32]
   \   00000072   0x.... 0x....      BL       Shell_mkdir
   1752                }
   1753                
   1754          //      shell_ptr->ARGC = 2;  //WK --> 进入 dir_name 下面
   1755          //      shell_ptr->ARGV[0]="cd";
   1756                shell_ptr->ARGV[1]=dir_name; 
   \                     ??PowerSave_1:
   \   00000076   0x....             LDR.N    R0,??DataTable14_28
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x6060             STR      R0,[R4, #+4]
   1757                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000007C   0x0021             MOVS     R1,R4
   \   0000007E   0x6A20             LDR      R0,[R4, #+32]
   \   00000080   0x.... 0x....      BL       Shell_cd
   1758                
   1759                if(file_name=="123456.csv")
   \   00000084   0x....             LDR.N    R0,??DataTable14_29
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x....             LDR.N    R1,??DataTable14_30
   \   0000008A   0x4288             CMP      R0,R1
   \   0000008C   0xD114             BNE.N    ??PowerSave_2
   1760                {
   1761                 file_name=num2string(date_sf.MONTH*10000+date_sf.DAY*100+date_sf.MINUTE,6,1);
   \   0000008E   0x2201             MOVS     R2,#+1
   \   00000090   0x2106             MOVS     R1,#+6
   \   00000092   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000096   0xF242 0x7310      MOVW     R3,#+10000
   \   0000009A   0xF8BD 0x5004      LDRH     R5,[SP, #+4]
   \   0000009E   0x2664             MOVS     R6,#+100
   \   000000A0   0x4375             MULS     R5,R6,R5
   \   000000A2   0xFB03 0x5000      MLA      R0,R3,R0,R5
   \   000000A6   0xF8BD 0x3008      LDRH     R3,[SP, #+8]
   \   000000AA   0xFA10 0xF083      UXTAH    R0,R0,R3
   \   000000AE   0x.... 0x....      BL       num2string
   \   000000B2   0x....             LDR.N    R1,??DataTable14_29
   \   000000B4   0x6008             STR      R0,[R1, #+0]
   \   000000B6   0xE01F             B.N      ??PowerSave_3
   1762                }
   1763                else
   1764                {
   1765          //        shell_ptr->ARGC = 2;
   1766          //        shell_ptr->ARGV[0]="df_s";
   1767                  shell_ptr->ARGV[1]=file_name;   //wk --> 注意：查找的文件名暂时必须要是大写
   \                     ??PowerSave_2:
   \   000000B8   0x....             LDR.N    R0,??DataTable14_29
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x6060             STR      R0,[R4, #+4]
   1768                  Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,&file_size);
                         ^
Warning[Pe223]: function "Shell_search_file_r1" declared implicitly
   \   000000BE   0xAA04             ADD      R2,SP,#+16
   \   000000C0   0x0021             MOVS     R1,R4
   \   000000C2   0x6A20             LDR      R0,[R4, #+32]
   \   000000C4   0x.... 0x....      BL       Shell_search_file_r1
   1769                  
   1770                  if(file_size>134217728)  // wk --> 128M = 128*1024*1024 bytes
   \   000000C8   0x9804             LDR      R0,[SP, #+16]
   \   000000CA   0xF1B0 0x6F00      CMP      R0,#+134217728
   \   000000CE   0xD913             BLS.N    ??PowerSave_3
   1771                  {
   1772                    file_name=num2string(date_sf.MONTH*10000+date_sf.DAY*100+date_sf.MINUTE,6,1);
   \   000000D0   0x2201             MOVS     R2,#+1
   \   000000D2   0x2106             MOVS     R1,#+6
   \   000000D4   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000D8   0xF242 0x7310      MOVW     R3,#+10000
   \   000000DC   0xF8BD 0x5004      LDRH     R5,[SP, #+4]
   \   000000E0   0x2664             MOVS     R6,#+100
   \   000000E2   0x4375             MULS     R5,R6,R5
   \   000000E4   0xFB03 0x5000      MLA      R0,R3,R0,R5
   \   000000E8   0xF8BD 0x3008      LDRH     R3,[SP, #+8]
   \   000000EC   0xFA10 0xF083      UXTAH    R0,R0,R3
   \   000000F0   0x.... 0x....      BL       num2string
   \   000000F4   0x....             LDR.N    R1,??DataTable14_29
   \   000000F6   0x6008             STR      R0,[R1, #+0]
   1773                  }
   1774                }
   1775                
   1776                shell_ptr->ARGC=4;
   \                     ??PowerSave_3:
   \   000000F8   0x2004             MOVS     R0,#+4
   \   000000FA   0x6220             STR      R0,[R4, #+32]
   1777                shell_ptr->ARGV[0]="write";
   \   000000FC   0x....             LDR.N    R0,??DataTable14_22
   \   000000FE   0x6020             STR      R0,[R4, #+0]
   1778                shell_ptr->ARGV[1]=file_name;
   \   00000100   0x....             LDR.N    R0,??DataTable14_29
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0x6060             STR      R0,[R4, #+4]
   1779                shell_ptr->ARGV[2]="current";
   \   00000106   0x....             LDR.N    R0,??DataTable14_23
   \   00000108   0x60A0             STR      R0,[R4, #+8]
   1780                shell_ptr->ARGV[3]="0";
   \   0000010A   0x....             ADR.N    R0,??DataTable14_3  ;; "0"
   \   0000010C   0x60E0             STR      R0,[R4, #+12]
   1781                Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,7,&date_sf);
                       ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   0000010E   0xAB00             ADD      R3,SP,#+0
   \   00000110   0x2207             MOVS     R2,#+7
   \   00000112   0x0021             MOVS     R1,R4
   \   00000114   0x6A20             LDR      R0,[R4, #+32]
   \   00000116   0x.... 0x....      BL       Shell_write_binary
   1782                
   1783                uchar test[]={0,1,2,3,4,5,6,7,8,9,10};
   \   0000011A   0xA807             ADD      R0,SP,#+28
   \   0000011C   0x....             LDR.N    R1,??DataTable14_31
   \   0000011E   0xC92C             LDM      R1!,{R2,R3,R5}
   \   00000120   0xC02C             STM      R0!,{R2,R3,R5}
   \   00000122   0x390C             SUBS     R1,R1,#+12
   \   00000124   0x380C             SUBS     R0,R0,#+12
   1784          //      shell_ptr->ARGC=4;
   1785          //      shell_ptr->ARGV[0]="write";
   1786          //      shell_ptr->ARGV[1]=file_name;
   1787          //      shell_ptr->ARGV[2]="current";
   1788          //      shell_ptr->ARGV[3]="0";
   1789                Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,100,test);
   \   00000126   0xAB07             ADD      R3,SP,#+28
   \   00000128   0x2264             MOVS     R2,#+100
   \   0000012A   0x0021             MOVS     R1,R4
   \   0000012C   0x6A20             LDR      R0,[R4, #+32]
   \   0000012E   0x.... 0x....      BL       Shell_write_binary
   1790          
   1791               _mem_free(shell_ptr);  // wk @130403 --> important
   \   00000132   0x0020             MOVS     R0,R4
   \   00000134   0x.... 0x....      BL       _lwmem_free
   \   00000138   0xE002             B.N      ??PowerSave_4
   1792            }
   1793            else
   1794            {
   1795              printf("\nATTENTION:USB is DETACHED\n");
   \                     ??PowerSave_0:
   \   0000013A   0x....             LDR.N    R0,??DataTable14_25
   \   0000013C   0x.... 0x....      BL       _io_printf
   1796            }
   1797               
   1798          }
   \                     ??PowerSave_4:
   \   00000140   0xB00A             ADD      SP,SP,#+40
   \   00000142   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .data, align 4
   \                     ??file_name_1:
   \   00000000   0x........         DC32 `?<Constant "123456.csv">`

   \                                 In section .data, align 4
   \                     ??dir_name_1:
   \   00000000   0x........         DC32 `?<Constant "1000">`

   \                                 In section .bss, align 2
   \                     ??year_old_1:
   \   00000000                      DS8 2
   1799          
   1800          /*******************************************************************************
   1801          ** Function Name	：num2string
   1802          ** Input		： type =0 文件夹，=1 .CSV文件
   1803          ** Return		：
   1804          ** Author		：
   1805          ** Version	：
   1806          ** Date		：
   1807          ** Dessription	： 将 32 位整数转换成字符串
   1808          ** Reverse	：
   1809          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1810          char_ptr num2string(int_32 num,uchar len,uchar type) // wk --> len <= 13-4-1=8
   1811          {
   \                     num2string:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4680             MOV      R8,R0
   \   00000008   0x000C             MOVS     R4,R1
   \   0000000A   0x0017             MOVS     R7,R2
   1812            char_ptr name;
   1813            name = _mem_alloc_zero( len+5 );
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x1D60             ADDS     R0,R4,#+5
   \   00000010   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000014   0x0005             MOVS     R5,R0
   1814            uchar sep_data[9];uint_32 temp;
   1815            for(int i=0;i<len;i++)
   \   00000016   0x2600             MOVS     R6,#+0
   \   00000018   0xE014             B.N      ??num2string_0
   1816            {
   1817              temp=(uint_32)pow(10,i);
   \                     ??num2string_1:
   \   0000001A   0x0030             MOVS     R0,R6
   \   0000001C   0x.... 0x....      BL       __aeabi_i2d
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0x000B             MOVS     R3,R1
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable14_32  ;; 0x40240000
   \   00000028   0x.... 0x....      BL       pow
   \   0000002C   0x.... 0x....      BL       __aeabi_d2uiz
   1818              sep_data[i]=(num/temp)%10;
   \   00000030   0xFBB8 0xF0F0      UDIV     R0,R8,R0
   \   00000034   0x210A             MOVS     R1,#+10
   \   00000036   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000003A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000003E   0xA900             ADD      R1,SP,#+0
   \   00000040   0x5470             STRB     R0,[R6, R1]
   1819            }
   \   00000042   0x1C76             ADDS     R6,R6,#+1
   \                     ??num2string_0:
   \   00000044   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000046   0x42A6             CMP      R6,R4
   \   00000048   0xDBE7             BLT.N    ??num2string_1
   1820            
   1821            for(int i=0;i<len;i++)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0xE007             B.N      ??num2string_2
   1822            {
   1823              *(name+i)=(uchar)(0x30+sep_data[len-1-i]);
   \                     ??num2string_3:
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0x1E61             SUBS     R1,R4,#+1
   \   00000052   0x1A09             SUBS     R1,R1,R0
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x5C89             LDRB     R1,[R1, R2]
   \   00000058   0x3130             ADDS     R1,R1,#+48
   \   0000005A   0x5541             STRB     R1,[R0, R5]
   1824            }
   \   0000005C   0x1C40             ADDS     R0,R0,#+1
   \                     ??num2string_2:
   \   0000005E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000060   0x42A0             CMP      R0,R4
   \   00000062   0xDBF4             BLT.N    ??num2string_3
   1825            if(type==0)
   \   00000064   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000066   0x2F00             CMP      R7,#+0
   \   00000068   0xD103             BNE.N    ??num2string_4
   1826            {
   1827              *(name+len)='\0';
   \   0000006A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x5560             STRB     R0,[R4, R5]
   \   00000070   0xE012             B.N      ??num2string_5
   1828            }
   1829            else
   1830            {
   1831              *(name+len)=0x2e; // .
   \                     ??num2string_4:
   \   00000072   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000074   0x202E             MOVS     R0,#+46
   \   00000076   0x5560             STRB     R0,[R4, R5]
   1832              *(name+len+1)=0x43; // C
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x1960             ADDS     R0,R4,R5
   \   0000007C   0x2143             MOVS     R1,#+67
   \   0000007E   0x7041             STRB     R1,[R0, #+1]
   1833              *(name+len+2)=0x53; // S
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0x1960             ADDS     R0,R4,R5
   \   00000084   0x2153             MOVS     R1,#+83
   \   00000086   0x7081             STRB     R1,[R0, #+2]
   1834              *(name+len+3)=0x56; // V
   \   00000088   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008A   0x1960             ADDS     R0,R4,R5
   \   0000008C   0x2156             MOVS     R1,#+86
   \   0000008E   0x70C1             STRB     R1,[R0, #+3]
   1835              *(name+len+4)='\0';
   \   00000090   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000092   0x1960             ADDS     R0,R4,R5
   \   00000094   0x2100             MOVS     R1,#+0
   \   00000096   0x7101             STRB     R1,[R0, #+4]
   1836            }
   1837            return name;
   \                     ??num2string_5:
   \   00000098   0x0028             MOVS     R0,R5
   \   0000009A   0xB004             ADD      SP,SP,#+16
   \   0000009C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1838          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     `?<Constant {14, 68, 614, 225, 273, 429}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     PowRxchar+0x874

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     COLOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     COLOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     PowRxchar+0x964

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     `?<Constant {"Ua", "Ub", "Uc", "Ia", "Ib", "Ic"`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     PowRxchar+0x794

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x51EB851F         DC32     0x51eb851f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x40091EB8         DC32     0x40091eb8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x40668000         DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x4064A000         DC32     0x4064a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x40654000         DC32     0x40654000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x406D8000         DC32     0x406d8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x55 0x00          DC8      "U",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x49 0x00          DC8      "I",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     PowRxchar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     PowRxchar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     `?<Constant {"\\265\\33201-26\\264\\316", "\\265\\332`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     `?<Constant {8196, 310, 78, 65535, 0, 0, 0, 819`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     HarmoGraphUorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     HarmoGraphIorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     HarmoGraphPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     HarmoGraphRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0xC1F00000         DC32     0xc1f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x1A9FBE77         DC32     0x1a9fbe77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x3FC4DD2F         DC32     0x3fc4dd2f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x40640000         DC32     0x40640000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x40400001         DC32     0x40400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x0624DD2F         DC32     0x624dd2f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x402D5581         DC32     0x402d5581

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x406F0000         DC32     0x406f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0xC0080000         DC32     0xc0080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0xE147AE14         DC32     0xe147ae14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x3FFA147A         DC32     0x3ffa147a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x40698000         DC32     0x40698000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0xDF3B645A         DC32     0xdf3b645a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x40038D4F         DC32     0x40038d4f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x4075A000         DC32     0x4075a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x435C0000         DC32     0x435c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x43D90000         DC32     0x43d90000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0xBFC99999         DC32     0xbfc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0xFBE76C8B         DC32     0xfbe76c8b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x403871A9         DC32     0x403871a9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x40786000         DC32     0x40786000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x........         DC32     HarmoInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x........         DC32     HarmoListPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0x........         DC32     HarmoListUorI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     HarmoListAmporRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     HarmoInfo+0x18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     HarmoListRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x77 0x00          DC8      "w",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     HarmoInfo+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     `?<Constant {"V", "A"}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x........         DC32     COLOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     `?<Constant {"\\277\\252\\306\\364", "\\271\\330\\261\\`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x........         DC32     `?<Constant {450, 50, 450, 80, 450, 112, 377, 1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x........         DC32     `?<Constant {445, 48, 448, 73, 445, 80, 448, 10`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x........         DC32     SysSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x........         DC32     `?<Constant "sysset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x........         DC32     `?<Constant "read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x........         DC32     `?<Constant "sysset.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x........         DC32     `?<Constant "begin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x........         DC32     SysFlashDataT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x........         DC32     SysParaOldIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0x........         DC32     `?<Constant {0, 0, 0, 65535, 0}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0x........         DC32     ??flg_sys

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     SysFlashData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x77 0x00          DC8      "w",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     `?<Constant "update">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     `?<Constant "flush">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     `?<Constant {155, 97, 155, 133, 155, 169, 155, `

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     `?<Constant {150, 96, 153, 122, 150, 132, 153, `

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     `?<Constant "sysset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     `?<Constant "read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     `?<Constant "sysevent.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     `?<Constant "begin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     SysFlashDataT+0x19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     SysSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     SysFlashDataT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     SysEventOldIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0xC2400000         DC32     0xc2400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     `?<Constant {20996, 0, 0, 65535, 0}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     ??flg_event

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     DotWave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \   00000000   0x........         DC32     SysFlashData+0x19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \   00000000   0x........         DC32     `?<Constant {181, 127, 181, 174, 181, 219, 181,`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \   00000000   0x........         DC32     USB_Flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \   00000000   0x........         DC32     `?<Constant "u:\\\\event">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \   00000000   0x........         DC32     ??year_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_14:
   \   00000000   0x........         DC32     ??dir_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_15:
   \   00000000   0x........         DC32     `?<Constant "mkdir">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_16:
   \   00000000   0x........         DC32     ??month_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_17:
   \   00000000   0x........         DC32     ??monthDir_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_18:
   \   00000000   0x........         DC32     ??file_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_19:
   \   00000000   0x........         DC32     `?<Constant "12345678.csv">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_20:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_21:
   \   00000000   0x........         DC32     `?<Constant "df_s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_22:
   \   00000000   0x........         DC32     `?<Constant "write">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_23:
   \   00000000   0x........         DC32     `?<Constant "current">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_24:
   \   00000000   0x........         DC32     `?<Constant {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_25:
   \   00000000   0x........         DC32     `?<Constant "\\nATTENTION:USB is DET...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_26:
   \   00000000   0x........         DC32     `?<Constant "u:\\\\power">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_27:
   \   00000000   0x........         DC32     ??year_old_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_28:
   \   00000000   0x........         DC32     ??dir_name_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_29:
   \   00000000   0x........         DC32     ??file_name_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_30:
   \   00000000   0x........         DC32     `?<Constant "123456.csv">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_31:
   \   00000000   0x........         DC32     `?<Constant {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}>_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_32:
   \   00000000   0x40240000         DC32     0x40240000

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 68, 614, 225, 273, 429}>`:
   \   00000000   0x000E 0x0044      DC16 14, 68, 614, 225, 273, 429
   \              0x0266 0x00E1
   \              0x0111 0x01AD

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000182   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000192   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000202   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000212   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000222   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000232   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000242   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000252   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000262   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000272   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000282   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000292   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000302   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000312   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000322   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000332   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000342   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000352   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000362   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000372   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000382   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000392   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000402   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000412   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000422   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000432   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000442   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000452   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000462   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000472   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000482   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000492   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000182   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000192   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000202   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000212   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000222   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000232   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000242   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4`:
   \   00000000   0x000E 0x0056      DC16 14, 86, 614, 174, 212, 295, 330, 415
   \              0x0266 0x00AE
   \              0x00D4 0x0127
   \              0x014A 0x019F

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000182   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000192   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000202   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000212   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000222   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000232   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000242   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4_1`:
   \   00000000   0x000E 0x0056      DC16 14, 86, 614, 174, 212, 295, 330, 415
   \              0x0266 0x00AE
   \              0x00D4 0x0127
   \              0x014A 0x019F

   \                                 In section .rodata, align 4
   \                     `?<Constant {"Ua", "Ub", "Uc", "Ia", "Ib", "Ic"`:
   \   00000000   0x55 0x61          DC8 "Ua"
   \              0x00         
   \   00000003   0x55 0x62          DC8 "Ub"
   \              0x00         
   \   00000006   0x55 0x63          DC8 "Uc"
   \              0x00         
   \   00000009   0x49 0x61          DC8 "Ia"
   \              0x00         
   \   0000000C   0x49 0x62          DC8 "Ib"
   \              0x00         
   \   0000000F   0x49 0x63          DC8 "Ic"
   \              0x00         
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {"\\265\\33201-26\\264\\316", "\\265\\332`:
   \   00000000   0xB5 0xDA          DC8 "\265\33201-26\264\316"
   \              0x30 0x31    
   \              0x2D 0x32    
   \              0x36 0xB4    
   \              0xCE 0x00    
   \   0000000A   0xB5 0xDA          DC8 "\265\33225-50\264\316"
   \              0x32 0x35    
   \              0x2D 0x35    
   \              0x30 0xB4    
   \              0xCE 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {8196, 310, 78, 65535, 0, 0, 0, 819`:
   \   00000000   0x2004 0x0136      DC16 8196, 310, 78, 65535, 0, 0, 0, 8196, 310, 265, 65535, 0, 0, 0
   \              0x004E 0xFFFF
   \              0x0000 0x0000
   \              0x0000 0x2004
   \              0x0136 0x0109
   \              0xFFFF 0x0000
   \              0x0000 0x0000
   \   0000001C   0x3304 0x01FC      DC16 13060, 508, 78, 65535, 0, 0, 0, 13060, 512, 264, 65535, 0
   \              0x004E 0xFFFF
   \              0x0000 0x0000
   \              0x0000 0x3304
   \              0x0200 0x0108
   \              0xFFFF 0x0000
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x55 0x00          DC8 "U"

   \                                 In section .rodata, align 2
   \   00000000   0x49 0x00          DC8 "I"

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {"V", "A"}>`:
   \   00000000   0x56 0x00          DC8 "V"
   \   00000002   0x41 0x00          DC8 "A"

   \                                 In section .rodata, align 4
   \                     `?<Constant {"\\277\\252\\306\\364", "\\271\\330\\261\\`:
   \   00000000   0xBF 0xAA          DC8 0BFH, 0AAH, 0C6H, 0F4H
   \              0xC6 0xF4    
   \   00000004   0xB9 0xD8          DC8 0B9H, 0D8H, 0B1H, 0D5H
   \              0xB1 0xD5    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {450, 50, 450, 80, 450, 112, 377, 1`:
   \   00000000   0x01C2 0x0032      DC16 450, 50, 450, 80, 450, 112, 377, 146, 470, 146, 540, 146, 400, 178
   \              0x01C2 0x0050
   \              0x01C2 0x0070
   \              0x0179 0x0092
   \              0x01D6 0x0092
   \              0x021C 0x0092
   \              0x0190 0x00B2
   \   0000001C   0x01D6 0x00B2      DC16 470, 178, 540, 178
   \              0x021C 0x00B2

   \                                 In section .rodata, align 4
   \                     `?<Constant {445, 48, 448, 73, 445, 80, 448, 10`:
   \   00000000   0x01BD 0x0030      DC16 445, 48, 448, 73, 445, 80, 448, 105, 445, 110, 448, 135, 370, 145
   \              0x01C0 0x0049
   \              0x01BD 0x0050
   \              0x01C0 0x0069
   \              0x01BD 0x006E
   \              0x01C0 0x0087
   \              0x0172 0x0091
   \   0000001C   0x0175 0x00AA      DC16 373, 170, 460, 145, 463, 170, 530, 145, 533, 170, 370, 176, 373
   \              0x01CC 0x0091
   \              0x01CF 0x00AA
   \              0x0212 0x0091
   \              0x0215 0x00AA
   \              0x0172 0x00B0
   \              0x0175       
   \   00000036   0x00C9 0x01CC      DC16 201, 460, 176, 463, 201, 530, 176, 533, 201
   \              0x00B0 0x01CF
   \              0x00C9 0x0212
   \              0x00B0 0x0215
   \              0x00C9       

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x64          DC8 "cd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x66 0x3A          DC8 "f:\\"
   \              0x5C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysset">`:
   \   00000000   0x73 0x79          DC8 "sysset"
   \              0x73 0x73    
   \              0x65 0x74    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x70 0x77          DC8 "pwd"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "read">`:
   \   00000000   0x72 0x65          DC8 "read"
   \              0x61 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysset.txt">`:
   \   00000000   0x73 0x79          DC8 "sysset.txt"
   \              0x73 0x73    
   \              0x65 0x74    
   \              0x2E 0x74    
   \              0x78 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x32 0x35          DC8 "25"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "begin">`:
   \   00000000   0x62 0x65          DC8 "begin"
   \              0x67 0x69    
   \              0x6E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 65535, 0}>`:
   \   00000000   0x0000 0x0000      DC16 0, 0, 0, 65535, 0
   \              0x0000 0xFFFF
   \              0x0000       
   \   0000000A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x77 0x00          DC8 "w"

   \                                 In section .rodata, align 4
   \                     `?<Constant "update">`:
   \   00000000   0x75 0x70          DC8 "update"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "flush">`:
   \   00000000   0x66 0x6C          DC8 "flush"
   \              0x75 0x73    
   \              0x68 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {155, 97, 155, 133, 155, 169, 155, `:
   \   00000000   0x009B 0x0061      DC16 155, 97, 155, 133, 155, 169, 155, 205, 155, 241, 155, 278, 155
   \              0x009B 0x0085
   \              0x009B 0x00A9
   \              0x009B 0x00CD
   \              0x009B 0x00F1
   \              0x009B 0x0116
   \              0x009B       
   \   0000001A   0x013B 0x01E1      DC16 315, 481, 97, 481, 133, 481, 169, 481, 205
   \              0x0061 0x01E1
   \              0x0085 0x01E1
   \              0x00A9 0x01E1
   \              0x00CD       

   \                                 In section .rodata, align 4
   \                     `?<Constant {150, 96, 153, 122, 150, 132, 153, `:
   \   00000000   0x0096 0x0060      DC16 150, 96, 153, 122, 150, 132, 153, 158, 150, 168, 153, 194, 150
   \              0x0099 0x007A
   \              0x0096 0x0084
   \              0x0099 0x009E
   \              0x0096 0x00A8
   \              0x0099 0x00C2
   \              0x0096       
   \   0000001A   0x00CC 0x0099      DC16 204, 153, 230, 150, 240, 153, 266, 150, 276, 153, 304, 150, 314
   \              0x00E6 0x0096
   \              0x00F0 0x0099
   \              0x010A 0x0096
   \              0x0114 0x0099
   \              0x0130 0x0096
   \              0x013A       
   \   00000034   0x0099 0x0154      DC16 153, 340, 476, 96, 479, 122, 476, 132, 479, 158, 476, 168, 479
   \              0x01DC 0x0060
   \              0x01DF 0x007A
   \              0x01DC 0x0084
   \              0x01DF 0x009E
   \              0x01DC 0x00A8
   \              0x01DF       
   \   0000004E   0x00C2 0x01DC      DC16 194, 476, 204, 479, 230
   \              0x00CC 0x01DF
   \              0x00E6       

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysevent.txt">`:
   \   00000000   0x73 0x79          DC8 "sysevent.txt"
   \              0x73 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x2E 0x74    
   \              0x78 0x74    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x34 0x34          DC8 "44"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {20996, 0, 0, 65535, 0}>`:
   \   00000000   0x5204 0x0000      DC16 20996, 0, 0, 65535, 0
   \              0x0000 0xFFFF
   \              0x0000       
   \   0000000A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {181, 127, 181, 174, 181, 219, 181,`:
   \   00000000   0x00B5 0x007F      DC16 181, 127, 181, 174, 181, 219, 181, 265, 181, 310, 505, 127, 505
   \              0x00B5 0x00AE
   \              0x00B5 0x00DB
   \              0x00B5 0x0109
   \              0x00B5 0x0136
   \              0x01F9 0x007F
   \              0x01F9       
   \   0000001A   0x00AE 0x01F9      DC16 174, 505, 219, 505, 265
   \              0x00DB 0x01F9
   \              0x0109       

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "u:\\\\event">`:
   \   00000000   0x75 0x3A          DC8 "u:\\event"
   \              0x5C 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mkdir">`:
   \   00000000   0x6D 0x6B          DC8 "mkdir"
   \              0x64 0x69    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "12345678.csv">`:
   \   00000000   0x31 0x32          DC8 "12345678.csv"
   \              0x33 0x34    
   \              0x35 0x36    
   \              0x37 0x38    
   \              0x2E 0x63    
   \              0x73 0x76    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "df_s">`:
   \   00000000   0x64 0x66          DC8 "df_s"
   \              0x5F 0x73    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "write">`:
   \   00000000   0x77 0x72          DC8 "write"
   \              0x69 0x74    
   \              0x65 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "current">`:
   \   00000000   0x63 0x75          DC8 "current"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}>`:
   \   00000000   0x00 0x01          DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x02 0x03    
   \              0x04 0x05    
   \              0x06 0x07    
   \              0x08 0x09    
   \              0x0A 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000013   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000023   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000033   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000043   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000053   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000063   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000073   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000083   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000093   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000103   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000113   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000123   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000133   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000143   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000153   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000163   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000173   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000183   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000193   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000203   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000213   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000223   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000233   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000243   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000253   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000263   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000273   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000283   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000293   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000303   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000313   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000323   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000333   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000343   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000353   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000363   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000373   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000383   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000393   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nATTENTION:USB is DET...">`:
   \   00000000   0x0A 0x41          DC8 "\012ATTENTION:USB is DETACHED\012"
   \              0x54 0x54    
   \              0x45 0x4E    
   \              0x54 0x49    
   \              0x4F 0x4E    
   \              0x3A 0x55    
   \              0x53 0x42    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x44 0x45    
   \              0x54 0x41    
   \              0x43 0x48    
   \              0x45 0x44    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "u:\\\\power">`:
   \   00000000   0x75 0x3A          DC8 "u:\\power"
   \              0x5C 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "123456.csv">`:
   \   00000000   0x31 0x32          DC8 "123456.csv"
   \              0x33 0x34    
   \              0x35 0x36    
   \              0x2E 0x63    
   \              0x73 0x76    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}>_1`:
   \   00000000   0x00 0x01          DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0
   \              0x02 0x03    
   \              0x04 0x05    
   \              0x06 0x07    
   \              0x08 0x09    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "1000">`:
   \   00000000   0x31 0x30          DC8 "1000"
   \              0x30 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     1048  EventSave
             1048 -> Shell_cd
             1048 -> Shell_mkdir
             1048 -> Shell_search_file_r1
             1048 -> Shell_write_binary
             1048 -> __aeabi_memcpy4
             1048 -> _io_printf
             1048 -> _lwmem_alloc_zero
             1048 -> _lwmem_free
             1048 -> _lwmem_set_type
             1048 -> _time_get
             1048 -> _time_to_date
             1048 -> num2string
      168  GUI_EventMonitor
              168 -> YADA_C0
              168 -> YADA_C108
              168 -> __aeabi_memclr4
              168 -> __aeabi_memcpy4
      368  GUI_SYS_EVENTSET
              368 -> Shell_cd
              368 -> Shell_pwd
              368 -> Shell_read_wk
              368 -> Shell_update
              368 -> Shell_write_binary
              368 -> YADA_40
              368 -> YADA_5A
              368 -> YADA_5B
              368 -> YADA_C0
              368 -> YADA_C108
              368 -> __aeabi_f2iz
              368 -> __aeabi_fadd
              368 -> __aeabi_fdiv
              368 -> __aeabi_fmul
              368 -> __aeabi_i2f
              368 -> __aeabi_memclr4
              368 -> __aeabi_memcpy4
              368 -> __aeabi_ui2f
              368 -> _lwmem_alloc_zero
              368 -> _lwmem_free
              368 -> _lwmem_set_type
      312  GUI_SYS_PARASET
              312 -> Shell_cd
              312 -> Shell_pwd
              312 -> Shell_read_wk
              312 -> Shell_update
              312 -> Shell_write_binary
              312 -> YADA_40
              312 -> YADA_5A
              312 -> YADA_5B
              312 -> YADA_71
              312 -> YADA_98
              312 -> YADA_C0
              312 -> YADA_C108
              312 -> __aeabi_memclr4
              312 -> __aeabi_memcpy4
              312 -> _lwmem_alloc_zero
              312 -> _lwmem_free
              312 -> _lwmem_set_type
              312 -> delay_us
      736  GUI_VIEW_HarmoGraph
              736 -> ChartoFloat
              736 -> YADA_40
              736 -> YADA_5B
              736 -> YADA_71
              736 -> YADA_98
              736 -> YADA_C0
              736 -> YADA_C108
              736 -> __aeabi_cfcmple
              736 -> __aeabi_cfrcmple
              736 -> __aeabi_d2iz
              736 -> __aeabi_dadd
              736 -> __aeabi_dmul
              736 -> __aeabi_dsub
              736 -> __aeabi_f2d
              736 -> __aeabi_f2iz
              736 -> __aeabi_fadd
              736 -> __aeabi_fmul
              736 -> __aeabi_fsub
              736 -> __aeabi_memclr4
              736 -> __aeabi_memcpy4
              736 -> delay_ms
      800  GUI_VIEW_HarmoList
              800 -> ChartoFloat
              800 -> UIValues2HR
              800 -> YADA_40
              800 -> YADA_98
              800 -> YADA_C0
              800 -> YADA_C108
              800 -> __aeabi_memclr4
              800 -> delay_ms
      640  GUI_VIEW_I
              640 -> CharToInt
              640 -> WR_WAVE_UI
              640 -> YADA_C104
              640 -> __aeabi_memclr4
              640 -> __aeabi_memcpy4
              640 -> delay_ms
              640 -> linemark
      312  GUI_VIEW_ListMeasure
              312 -> YADA_C0
              312 -> YADA_C108
              312 -> __aeabi_memclr4
              312 -> delay_ms
      264  GUI_VIEW_ListQuality
              264 -> YADA_C0
              264 -> YADA_C108
              264 -> delay_ms
      152  GUI_VIEW_ListQuality2
              152 -> YADA_C0
              152 -> YADA_C108
              152 -> __aeabi_memclr4
      640  GUI_VIEW_U
              640 -> CharToInt
              640 -> WR_WAVE_UI
              640 -> YADA_C104
              640 -> __aeabi_memclr4
              640 -> __aeabi_memcpy4
              640 -> delay_ms
              640 -> linemark
     1240  GUI_VIEW_UI
             1240 -> CharToInt
             1240 -> WR_WAVE_UI
             1240 -> YADA_C104
             1240 -> __aeabi_memclr4
             1240 -> delay_ms
             1240 -> linemark
      232  GUI_VIEW_VECT
              232 -> ChartoFloat
              232 -> PhaseShift
              232 -> YADA_40
              232 -> YADA_56
              232 -> YADA_71
              232 -> YADA_98
              232 -> YADA_C0
              232 -> YADA_C108
              232 -> __aeabi_d2iz
              232 -> __aeabi_dadd
              232 -> __aeabi_ddiv
              232 -> __aeabi_dmul
              232 -> __aeabi_dsub
              232 -> __aeabi_i2d
              232 -> __aeabi_memclr4
              232 -> __aeabi_memcpy4
              232 -> __aeabi_ui2d
              232 -> cos
              232 -> delay_ms
              232 -> sin
       56  PowerSave
               56 -> Shell_cd
               56 -> Shell_mkdir
               56 -> Shell_search_file_r1
               56 -> Shell_write_binary
               56 -> _io_printf
               56 -> _lwmem_alloc_zero
               56 -> _lwmem_free
               56 -> _lwmem_set_type
               56 -> _time_get
               56 -> _time_to_date
               56 -> num2string
       96  linemark
               96 -> Sig_Fiq
               96 -> YADA_98
               96 -> YADA_C0
               96 -> YADA_C108
               96 -> __aeabi_memclr4
               96 -> delay_ms
       40  num2string
               40 -> __aeabi_d2uiz
               40 -> __aeabi_i2d
               40 -> _lwmem_alloc_zero
               40 -> pow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant "0">
       8  ?<Constant "1000">
      12  ?<Constant "123456.csv">
      16  ?<Constant "12345678.csv">
       4  ?<Constant "25">
       4  ?<Constant "44">
       2  ?<Constant "I">
       2  ?<Constant "U">
      28  ?<Constant "\nATTENTION:USB is DET...">
       8  ?<Constant "begin">
       4  ?<Constant "cd">
       8  ?<Constant "current">
       8  ?<Constant "df_s">
       4  ?<Constant "f:\\">
       8  ?<Constant "flush">
       8  ?<Constant "mkdir">
       4  ?<Constant "pwd">
       8  ?<Constant "read">
      16  ?<Constant "sysevent.txt">
       8  ?<Constant "sysset">
      12  ?<Constant "sysset.txt">
      12  ?<Constant "u:\\event">
      12  ?<Constant "u:\\power">
       8  ?<Constant "update">
       2  ?<Constant "w">
       8  ?<Constant "write">
      20  ?<Constant {"Ua", "Ub", "Uc", "Ia", "Ib", "Ic"
       4  ?<Constant {"V", "A"}>
      20  ?<Constant {"\265\33201-26\264\316", "\265\332
       8  ?<Constant {"\277\252\306\364", "\271\330\261\
      24  ?<Constant {(0.0F)}>
     208  ?<Constant {(0.0F)}>_1
     200  ?<Constant {(0.0F)}>_2
      16  ?<Constant {0, 0, 0, 65535, 0}>
    1000  ?<Constant {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}>
      12  ?<Constant {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}>_1
    1200  ?<Constant {0}>
     600  ?<Constant {0}>_1
     364  ?<Constant {0}>_10
      44  ?<Constant {0}>_11
      12  ?<Constant {0}>_12
     128  ?<Constant {0}>_13
     196  ?<Constant {0}>_14
     128  ?<Constant {0}>_15
     600  ?<Constant {0}>_2
      84  ?<Constant {0}>_3
      12  ?<Constant {0}>_4
     296  ?<Constant {0}>_5
     140  ?<Constant {0}>_6
     208  ?<Constant {0}>_7
     208  ?<Constant {0}>_8
     200  ?<Constant {0}>_9
      12  ?<Constant {14, 68, 614, 225, 273, 429}>
      16  ?<Constant {14, 86, 614, 174, 212, 295, 330, 4
      16  ?<Constant {14, 86, 614, 174, 212, 295, 330, 4_1
      88  ?<Constant {150, 96, 153, 122, 150, 132, 153,
      44  ?<Constant {155, 97, 155, 133, 155, 169, 155,
      36  ?<Constant {181, 127, 181, 174, 181, 219, 181,
      16  ?<Constant {20996, 0, 0, 65535, 0}>
      72  ?<Constant {445, 48, 448, 73, 445, 80, 448, 10
      36  ?<Constant {450, 50, 450, 80, 450, 112, 377, 1
      56  ?<Constant {8196, 310, 78, 65535, 0, 0, 0, 819
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_2
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_14
       4  ??DataTable14_15
       4  ??DataTable14_16
       4  ??DataTable14_17
       4  ??DataTable14_18
       4  ??DataTable14_19
       4  ??DataTable14_2
       4  ??DataTable14_20
       4  ??DataTable14_21
       4  ??DataTable14_22
       4  ??DataTable14_23
       4  ??DataTable14_24
       4  ??DataTable14_25
       4  ??DataTable14_26
       4  ??DataTable14_27
       4  ??DataTable14_28
       4  ??DataTable14_29
       4  ??DataTable14_3
       4  ??DataTable14_30
       4  ??DataTable14_31
       4  ??DataTable14_32
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
       8  COLOR
       2  DotWave
       1  EVEnum_old
     400  EventAddr
      20  EventNum
       1  EventOldIndex
     470  EventSave
     172  GUI_EventMonitor
    2606  GUI_SYS_EVENTSET
    2018  GUI_SYS_PARASET
    1406  GUI_VIEW_HarmoGraph
    1028  GUI_VIEW_HarmoList
     212  GUI_VIEW_I
     458  GUI_VIEW_ListMeasure
     316  GUI_VIEW_ListQuality
     228  GUI_VIEW_ListQuality2
     212  GUI_VIEW_U
     362  GUI_VIEW_UI
     890  GUI_VIEW_VECT
      40  HarmoInfo
       4  NFBAddr
       4  NFPAddr
     324  PowerSave
       1  SysEventOldIndex
      84  SysFlashData
      84  SysFlashDataT
       1  SysParaOldIndex
       4  SysSetAddr
       1  USB_Flg
       4  dir_name
       4  dir_name
       4  file_name
       4  file_name
      12  flg_event
      12  flg_sys
     392  linemark
       4  monthDir_name
       2  month_old
     160  num2string
       2  year_old
       2  year_old

 
    645 bytes in section .bss
     52 bytes in section .data
  6 548 bytes in section .rodata
 11 754 bytes in section .text
 
 11 754 bytes of CODE  memory
  6 548 bytes of CONST memory
    697 bytes of DATA  memory

Errors: none
Warnings: 23
