###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     03/May/2013  20:12:16 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\Me #
#                    nuView.c                                                 #
#    Command line =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\Me #
#                    nuView.c -D _DEBUG=1 -lC "E:\Freescale\mqx_test\YD_PRJ_N #
#                    EW_20130323_git_\IAR\twrk60n512\Int Flash Debug\List\"   #
#                    -lA "E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\ #
#                    twrk60n512\Int Flash Debug\List\" --diag_suppress        #
#                    Pa039,Pa082,Pe186 -o "E:\Freescale\mqx_test\YD_PRJ_NEW_2 #
#                    0130323_git_\IAR\twrk60n512\Int Flash Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_20 #
#                    130323_git_\IAR\..\lib\twrk60n512.iar\bsp\ -I            #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\psp\ -I E:\Freescale\mqx_test\YD_PRJ_NE #
#                    W_20130323_git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_ #
#                    Code\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\ #
#                    IAR\..\lib\twrk60n512.iar\rtcs\ -I                       #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\mfs\ -I E:\Freescale\mqx_test\YD_PRJ_NE #
#                    W_20130323_git_\IAR\..\lib\twrk60n512.iar\usb\host\ -I   #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\li #
#                    b\twrk60n512.iar\shell\ -I E:\Freescale\mqx_test\YD_PRJ_ #
#                    NEW_20130323_git_\IAR\..\lib\twrk60n512.iar\usb\ -I      #
#                    E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\..\   #
#                    -I E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\.. #
#                    \Source\Source_MQX\ -I E:\Freescale\mqx_test\YD_PRJ_NEW_ #
#                    20130323_git_\IAR\..\Source\ -I "E:\Freescale\Freescale  #
#                    MQX 3.8\shell\source\include\" -Ol --use_c++_inline      #
#    List file    =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\twrk6 #
#                    0n512\Int Flash Debug\List\MenuView.lst                  #
#    Object file  =  E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\IAR\twrk6 #
#                    0n512\Int Flash Debug\Obj\MenuView.o                     #
#                                                                             #
#                                                                             #
###############################################################################

E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\MenuView.c
      1          /*******************************************************************************
      2          * File Name        : MenuView.c
      3          * Author             : LB&TX
      4          * Version            : V1.0.0
      5          * Date                :
      6          * Description        :LCD显示界面的数据显示页面
      7          *******************************************************************************/
      8          /***************************************************
      9          **
     10          ** Reverse by wk
     11          ** Date: 
     12          ** Description:  430  --> k60 
     13          ** 
     14          **************************************************/
     15          
     16          #include "includes.h"
     17          
     18          /* wk @130409 --> 变量定义 & 申明 */
     19          //extern volatile U8 EVEnum,send_ok;  // wk @130403 --> uncomment

   \                                 In section .bss, align 1
     20          U8 EVEnum=0,EveRdNum=1;
   \                     EVEnum:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
   \                     EveRdNum:
   \   00000000   0x01               DC8 1

   \                                 In section .rodata, align 4
     21          const U16 COLOR[] = {0xffe0,0x07E0,0xf800,0x0000};
   \                     COLOR:
   \   00000000   0xFFE0 0x07E0      DC16 65504, 2016, 63488, 0
   \              0xF800 0x0000

   \                                 In section .data, align 4
     22          U8 HarmoInfo[][8]= {"A","B","C","幅 值","含有率"};
   \                     HarmoInfo:
   \   00000000   0x41 0x00          DC8 "A"
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000008   0x42 0x00          DC8 "B"
   \   0000000A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x43 0x00          DC8 "C"
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000018   0xB7 0xF9          DC8 "\267\371 \326\265"
   \              0x20 0xD6    
   \              0xB5 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0
   \   00000020   0xBA 0xAC          DC8 "\272\254\323\320\302\312"
   \              0xD3 0xD0    
   \              0xC2 0xCA    
   \              0x00         
   \   00000027   0x00               DC8 0
     23          //U8 text[][3]= {"Ua","Ub","Uc","Ia","Ib","Ic"};//ColorF[9]= {0};

   \                                 In section .bss, align 1
     24          U8 SysParaOldIndex=0,SysEventOldIndex=0,EventOldIndex=0,EVEnum_old;
   \                     SysParaOldIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     SysEventOldIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     EventOldIndex:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     EVEnum_old:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     25          U8 SysFlashDataT[84];   //系统设置的数据的临时参数
   \                     SysFlashDataT:
   \   00000000                      DS8 84

   \                                 In section .bss, align 4
     26          U8 SysFlashData[84];   //wk @130326 -->写入Flash的系统设置参数
   \                     SysFlashData:
   \   00000000                      DS8 84

   \                                 In section .bss, align 4
     27          U8 EventNum[18];  // wk @130405 --> 9次事件发生次数保存，每个事件占2字节，能记录65535次
   \                     EventNum:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     28          U32 EventAddr[100]; // wk@130405 -->记录事件发生的时间：月、日、时、分、秒，每个占4字节
   \                     EventAddr:
   \   00000000                      DS8 400

   \                                 In section .bss, align 1
     29          U8 USB_Flg=0;  // wk @130407 --> USB 是否插入标志
   \                     USB_Flg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     30          U16 evntyear_old=0;
   \                     evntyear_old:
   \   00000000                      DS8 2
     31          
     32          extern U8 PowRxchar[],EvntRxchar[];
     33          //volatile U8 npage=0; // wk @130403 --> uncomment
     34          //volatile U16 nBlock=0,nBlock_old=1024; // wk @130403 --> uncomment
     35          
     36          /*******************************************************************************
     37          * 函  数  名      : GUI_VIEW_UI
     38          * 描      述      : 电流电压波形及有效值显示，颜色为黄绿红，采用C104指令可自动擦除。
     39          * 输      入      : 无
     40          * 返      回      : 无
     41          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     42          void GUI_VIEW_UI(void)
     43          {
   \                     GUI_VIEW_UI:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF5AD 0x6D9A      SUB      SP,SP,#+1232
     44              U16 Coord_UI[]= {14,68,614,225,273,429};   //剪切及原点坐标
   \   00000006   0xA804             ADD      R0,SP,#+16
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000000C   0xC91C             LDM      R1!,{R2-R4}
   \   0000000E   0xC01C             STM      R0!,{R2-R4}
   \   00000010   0x390C             SUBS     R1,R1,#+12
   \   00000012   0x380C             SUBS     R0,R0,#+12
     45              U16 WAVE_UI[6*size_UI]= {0};  // wk -->  size_UI = 100
   \   00000014   0xA807             ADD      R0,SP,#+28
   \   00000016   0xF44F 0x6196      MOV      R1,#+1200
   \   0000001A   0x.... 0x....      BL       __aeabi_memclr4
     46              CharToInt(&PowRxchar[WAVEUI_INDEX],WAVE_UI,6,75);   //将波形采样值扩充并赋给WAVE_UI数组
   \   0000001E   0x234B             MOVS     R3,#+75
   \   00000020   0x2206             MOVS     R2,#+6
   \   00000022   0xA907             ADD      R1,SP,#+28
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000028   0x.... 0x....      BL       CharToInt
     47              linemark(48,0); //电压电流图标注上面的电压有效值及单位
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x2030             MOVS     R0,#+48
   \   00000030   0x.... 0x....      BL       linemark
     48              delay_ms(5);
   \   00000034   0x2005             MOVS     R0,#+5
   \   00000036   0x.... 0x....      BL       delay_ms
     49              linemark(254,1);  //电压电流图标注下面的电流有效值及单位
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x20FE             MOVS     R0,#+254
   \   0000003E   0x.... 0x....      BL       linemark
     50              delay_ms(5);
   \   00000042   0x2005             MOVS     R0,#+5
   \   00000044   0x.... 0x....      BL       delay_ms
     51              WR_WAVE_UI(WAVE_UI,1,0);                      //将所有采样数据写入液晶屏的缓冲区
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0xA807             ADD      R0,SP,#+28
   \   0000004E   0x.... 0x....      BL       WR_WAVE_UI
     52              // wk -->                                  85          7              
     53              YADA_C104 (UA_addr,Coord_UI[0],Coord_UI[3],UI_LINE_NUM,UI_DX,COLOR[0],UA_addr + size_UI,COLOR[3]); 
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000056   0x88C0             LDRH     R0,[R0, #+6]
   \   00000058   0x9003             STR      R0,[SP, #+12]
   \   0000005A   0x2064             MOVS     R0,#+100
   \   0000005C   0x9002             STR      R0,[SP, #+8]
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000062   0x8800             LDRH     R0,[R0, #+0]
   \   00000064   0x9001             STR      R0,[SP, #+4]
   \   00000066   0x2007             MOVS     R0,#+7
   \   00000068   0x9000             STR      R0,[SP, #+0]
   \   0000006A   0x2355             MOVS     R3,#+85
   \   0000006C   0xF8BD 0x2016      LDRH     R2,[SP, #+22]
   \   00000070   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       YADA_C104
     54              YADA_C104 (UB_addr,Coord_UI[0],Coord_UI[3],UI_LINE_NUM,UI_DX,COLOR[1],UB_addr + size_UI,COLOR[3]);
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000007E   0x88C0             LDRH     R0,[R0, #+6]
   \   00000080   0x9003             STR      R0,[SP, #+12]
   \   00000082   0xF44F 0x7096      MOV      R0,#+300
   \   00000086   0x9002             STR      R0,[SP, #+8]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000008C   0x8840             LDRH     R0,[R0, #+2]
   \   0000008E   0x9001             STR      R0,[SP, #+4]
   \   00000090   0x2007             MOVS     R0,#+7
   \   00000092   0x9000             STR      R0,[SP, #+0]
   \   00000094   0x2355             MOVS     R3,#+85
   \   00000096   0xF8BD 0x2016      LDRH     R2,[SP, #+22]
   \   0000009A   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   0000009E   0x20C8             MOVS     R0,#+200
   \   000000A0   0x.... 0x....      BL       YADA_C104
     55              YADA_C104 (UC_addr,Coord_UI[0],Coord_UI[3],UI_LINE_NUM,UI_DX,COLOR[2],UC_addr + size_UI,COLOR[3]);
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000A8   0x88C0             LDRH     R0,[R0, #+6]
   \   000000AA   0x9003             STR      R0,[SP, #+12]
   \   000000AC   0xF44F 0x70FA      MOV      R0,#+500
   \   000000B0   0x9002             STR      R0,[SP, #+8]
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000B6   0x8880             LDRH     R0,[R0, #+4]
   \   000000B8   0x9001             STR      R0,[SP, #+4]
   \   000000BA   0x2007             MOVS     R0,#+7
   \   000000BC   0x9000             STR      R0,[SP, #+0]
   \   000000BE   0x2355             MOVS     R3,#+85
   \   000000C0   0xF8BD 0x2016      LDRH     R2,[SP, #+22]
   \   000000C4   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000C8   0xF44F 0x70C8      MOV      R0,#+400
   \   000000CC   0x.... 0x....      BL       YADA_C104
     56              YADA_C104 (IA_addr,Coord_UI[0],Coord_UI[5],UI_LINE_NUM,UI_DX,COLOR[0],IA_addr + size_UI,COLOR[3]);
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000D4   0x88C0             LDRH     R0,[R0, #+6]
   \   000000D6   0x9003             STR      R0,[SP, #+12]
   \   000000D8   0xF44F 0x702F      MOV      R0,#+700
   \   000000DC   0x9002             STR      R0,[SP, #+8]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000E2   0x8800             LDRH     R0,[R0, #+0]
   \   000000E4   0x9001             STR      R0,[SP, #+4]
   \   000000E6   0x2007             MOVS     R0,#+7
   \   000000E8   0x9000             STR      R0,[SP, #+0]
   \   000000EA   0x2355             MOVS     R3,#+85
   \   000000EC   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   000000F0   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000F4   0xF44F 0x7016      MOV      R0,#+600
   \   000000F8   0x.... 0x....      BL       YADA_C104
     57              YADA_C104 (IB_addr,Coord_UI[0],Coord_UI[5],UI_LINE_NUM,UI_DX,COLOR[1],IB_addr + size_UI,COLOR[3]);
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000100   0x88C0             LDRH     R0,[R0, #+6]
   \   00000102   0x9003             STR      R0,[SP, #+12]
   \   00000104   0xF44F 0x7061      MOV      R0,#+900
   \   00000108   0x9002             STR      R0,[SP, #+8]
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000010E   0x8840             LDRH     R0,[R0, #+2]
   \   00000110   0x9001             STR      R0,[SP, #+4]
   \   00000112   0x2007             MOVS     R0,#+7
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x2355             MOVS     R3,#+85
   \   00000118   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   0000011C   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000120   0xF44F 0x7048      MOV      R0,#+800
   \   00000124   0x.... 0x....      BL       YADA_C104
     58              YADA_C104 (IC_addr,Coord_UI[0],Coord_UI[5],UI_LINE_NUM,UI_DX,COLOR[2],IC_addr + size_UI,COLOR[3]);
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000012C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000012E   0x9003             STR      R0,[SP, #+12]
   \   00000130   0xF240 0x404C      MOVW     R0,#+1100
   \   00000134   0x9002             STR      R0,[SP, #+8]
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000013A   0x8880             LDRH     R0,[R0, #+4]
   \   0000013C   0x9001             STR      R0,[SP, #+4]
   \   0000013E   0x2007             MOVS     R0,#+7
   \   00000140   0x9000             STR      R0,[SP, #+0]
   \   00000142   0x2355             MOVS     R3,#+85
   \   00000144   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   00000148   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   0000014C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000150   0x.... 0x....      BL       YADA_C104
     59              delay_ms(5);
   \   00000154   0x2005             MOVS     R0,#+5
   \   00000156   0x.... 0x....      BL       delay_ms
     60              WR_WAVE_UI(WAVE_UI,1,1);                       //将所有原采样数据写入触摸屏的另一地址
   \   0000015A   0x2201             MOVS     R2,#+1
   \   0000015C   0x2101             MOVS     R1,#+1
   \   0000015E   0xA807             ADD      R0,SP,#+28
   \   00000160   0x.... 0x....      BL       WR_WAVE_UI
     61          }
   \   00000164   0xF50D 0x6D9A      ADD      SP,SP,#+1232
   \   00000168   0xBD10             POP      {R4,PC}          ;; return
     62          /*******************************************************************************
     63          * 函  数  名      : GUI_VIEW_U
     64          * 描      述      : 电压波形及有效值显示，颜色为黄绿红，采用C104指令可自动擦除。
     65          * 输      入      : 无
     66          * 返      回      : 无
     67          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     68          void GUI_VIEW_U(void)
     69          {
   \                     GUI_VIEW_U:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D1F      SUB      SP,SP,#+636
     70              U16 WAVE_U[3*size_UI]= {0};
   \   00000006   0xA808             ADD      R0,SP,#+32
   \   00000008   0xF44F 0x7116      MOV      R1,#+600
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
     71              U16 Coord_U[]= {14,86,614,174,212,295,330,415};    //剪切及原点坐标a
   \   00000010   0xA804             ADD      R0,SP,#+16
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000016   0x2210             MOVS     R2,#+16
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy4
     72              linemark(48,0);                                    //电压图标注上面的电压,及有效值
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x2030             MOVS     R0,#+48
   \   00000020   0x.... 0x....      BL       linemark
     73              delay_ms(5);
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x.... 0x....      BL       delay_ms
     74              CharToInt(&PowRxchar[WAVEUI_INDEX],WAVE_U,3,55);   //将波形采样值扩充并赋给WAVE_UI数组
   \   0000002A   0x2337             MOVS     R3,#+55
   \   0000002C   0x2203             MOVS     R2,#+3
   \   0000002E   0xA908             ADD      R1,SP,#+32
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000034   0x.... 0x....      BL       CharToInt
     75              WR_WAVE_UI(WAVE_U,2,0);                     //将所有采样数据写入触摸屏
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2102             MOVS     R1,#+2
   \   0000003C   0xA808             ADD      R0,SP,#+32
   \   0000003E   0x.... 0x....      BL       WR_WAVE_UI
     76              YADA_C104 (UA_addr,Coord_U[0],185,U_I_LINE_NUM,U_I_DX,COLOR[0],UA_addr + size_UI,COLOR[3]);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000046   0x88C0             LDRH     R0,[R0, #+6]
   \   00000048   0x9003             STR      R0,[SP, #+12]
   \   0000004A   0x2064             MOVS     R0,#+100
   \   0000004C   0x9002             STR      R0,[SP, #+8]
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000052   0x8800             LDRH     R0,[R0, #+0]
   \   00000054   0x9001             STR      R0,[SP, #+4]
   \   00000056   0x2006             MOVS     R0,#+6
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0x2363             MOVS     R3,#+99
   \   0000005C   0x22B9             MOVS     R2,#+185
   \   0000005E   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      BL       YADA_C104
     77              YADA_C104 (UB_addr,Coord_U[0],306,U_I_LINE_NUM,U_I_DX,COLOR[1],UB_addr + size_UI,COLOR[3]);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000006C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000006E   0x9003             STR      R0,[SP, #+12]
   \   00000070   0xF44F 0x7096      MOV      R0,#+300
   \   00000074   0x9002             STR      R0,[SP, #+8]
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000007A   0x8840             LDRH     R0,[R0, #+2]
   \   0000007C   0x9001             STR      R0,[SP, #+4]
   \   0000007E   0x2006             MOVS     R0,#+6
   \   00000080   0x9000             STR      R0,[SP, #+0]
   \   00000082   0x2363             MOVS     R3,#+99
   \   00000084   0xF44F 0x7299      MOV      R2,#+306
   \   00000088   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   0000008C   0x20C8             MOVS     R0,#+200
   \   0000008E   0x.... 0x....      BL       YADA_C104
     78              YADA_C104 (UC_addr,Coord_U[0],428,U_I_LINE_NUM,U_I_DX,COLOR[2],UC_addr + size_UI,COLOR[3]);
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000096   0x88C0             LDRH     R0,[R0, #+6]
   \   00000098   0x9003             STR      R0,[SP, #+12]
   \   0000009A   0xF44F 0x70FA      MOV      R0,#+500
   \   0000009E   0x9002             STR      R0,[SP, #+8]
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000A4   0x8880             LDRH     R0,[R0, #+4]
   \   000000A6   0x9001             STR      R0,[SP, #+4]
   \   000000A8   0x2006             MOVS     R0,#+6
   \   000000AA   0x9000             STR      R0,[SP, #+0]
   \   000000AC   0x2363             MOVS     R3,#+99
   \   000000AE   0xF44F 0x72D6      MOV      R2,#+428
   \   000000B2   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000B6   0xF44F 0x70C8      MOV      R0,#+400
   \   000000BA   0x.... 0x....      BL       YADA_C104
     79              delay_ms(5);
   \   000000BE   0x2005             MOVS     R0,#+5
   \   000000C0   0x.... 0x....      BL       delay_ms
     80              WR_WAVE_UI(WAVE_U,2,1);                      //将所有原采样数据写入触摸屏的另一地址
   \   000000C4   0x2201             MOVS     R2,#+1
   \   000000C6   0x2102             MOVS     R1,#+2
   \   000000C8   0xA808             ADD      R0,SP,#+32
   \   000000CA   0x.... 0x....      BL       WR_WAVE_UI
     81              // delay_ms(50);
     82          }
   \   000000CE   0xF50D 0x7D1F      ADD      SP,SP,#+636
   \   000000D2   0xBD00             POP      {PC}             ;; return
     83          /*******************************************************************************
     84          * 函  数  名      : GUI_VIEW_I
     85          * 描      述      : 电流波形及有效值显示，颜色为黄绿红，采用C104指令可自动擦除。
     86          * 输      入      : 无
     87          * 返      回      : 无
     88          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     89          void GUI_VIEW_I(void)
     90          {
   \                     GUI_VIEW_I:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D1F      SUB      SP,SP,#+636
     91              U16 WAVE_I[3*size_UI]= {0};
   \   00000006   0xA808             ADD      R0,SP,#+32
   \   00000008   0xF44F 0x7116      MOV      R1,#+600
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
     92              U16 Coord_I[]= {14,86,614,174,212,295,330,415};      //剪切及原点坐标
   \   00000010   0xA804             ADD      R0,SP,#+16
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000016   0x2210             MOVS     R2,#+16
   \   00000018   0x.... 0x....      BL       __aeabi_memcpy4
     93              linemark(48,1);                                      //电流图标注上面的电流,及有效值
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2030             MOVS     R0,#+48
   \   00000020   0x.... 0x....      BL       linemark
     94              delay_ms(5);
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x.... 0x....      BL       delay_ms
     95              CharToInt(&PowRxchar[WAVEUI_INDEX+240],WAVE_I,3,55);   //将波形采样值扩充并赋给WAVE_UI数组
   \   0000002A   0x2337             MOVS     R3,#+55
   \   0000002C   0x2203             MOVS     R2,#+3
   \   0000002E   0xA908             ADD      R1,SP,#+32
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000034   0x.... 0x....      BL       CharToInt
     96              WR_WAVE_UI(WAVE_I,3,0);                   //将所有采样数据写入触摸屏
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2103             MOVS     R1,#+3
   \   0000003C   0xA808             ADD      R0,SP,#+32
   \   0000003E   0x.... 0x....      BL       WR_WAVE_UI
     97              YADA_C104 (IA_addr,Coord_I[0],185,U_I_LINE_NUM,U_I_DX,COLOR[0],IA_addr + size_UI,COLOR[3]);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000046   0x88C0             LDRH     R0,[R0, #+6]
   \   00000048   0x9003             STR      R0,[SP, #+12]
   \   0000004A   0xF44F 0x702F      MOV      R0,#+700
   \   0000004E   0x9002             STR      R0,[SP, #+8]
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000054   0x8800             LDRH     R0,[R0, #+0]
   \   00000056   0x9001             STR      R0,[SP, #+4]
   \   00000058   0x2006             MOVS     R0,#+6
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2363             MOVS     R3,#+99
   \   0000005E   0x22B9             MOVS     R2,#+185
   \   00000060   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000064   0xF44F 0x7016      MOV      R0,#+600
   \   00000068   0x.... 0x....      BL       YADA_C104
     98              YADA_C104 (IB_addr,Coord_I[0],306,U_I_LINE_NUM,U_I_DX,COLOR[1],IB_addr + size_UI,COLOR[3]);
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000070   0x88C0             LDRH     R0,[R0, #+6]
   \   00000072   0x9003             STR      R0,[SP, #+12]
   \   00000074   0xF44F 0x7061      MOV      R0,#+900
   \   00000078   0x9002             STR      R0,[SP, #+8]
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000007E   0x8840             LDRH     R0,[R0, #+2]
   \   00000080   0x9001             STR      R0,[SP, #+4]
   \   00000082   0x2006             MOVS     R0,#+6
   \   00000084   0x9000             STR      R0,[SP, #+0]
   \   00000086   0x2363             MOVS     R3,#+99
   \   00000088   0xF44F 0x7299      MOV      R2,#+306
   \   0000008C   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   00000090   0xF44F 0x7048      MOV      R0,#+800
   \   00000094   0x.... 0x....      BL       YADA_C104
     99              YADA_C104 (IC_addr,Coord_I[0],428,U_I_LINE_NUM,U_I_DX,COLOR[2],IC_addr + size_UI,COLOR[3]);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable7
   \   0000009C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000009E   0x9003             STR      R0,[SP, #+12]
   \   000000A0   0xF240 0x404C      MOVW     R0,#+1100
   \   000000A4   0x9002             STR      R0,[SP, #+8]
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000AA   0x8880             LDRH     R0,[R0, #+4]
   \   000000AC   0x9001             STR      R0,[SP, #+4]
   \   000000AE   0x2006             MOVS     R0,#+6
   \   000000B0   0x9000             STR      R0,[SP, #+0]
   \   000000B2   0x2363             MOVS     R3,#+99
   \   000000B4   0xF44F 0x72D6      MOV      R2,#+428
   \   000000B8   0xF8BD 0x1010      LDRH     R1,[SP, #+16]
   \   000000BC   0xF44F 0x707A      MOV      R0,#+1000
   \   000000C0   0x.... 0x....      BL       YADA_C104
    100              WR_WAVE_UI(WAVE_I,3,1);                      //将所有原采样数据写入触摸屏的另一地址
   \   000000C4   0x2201             MOVS     R2,#+1
   \   000000C6   0x2103             MOVS     R1,#+3
   \   000000C8   0xA808             ADD      R0,SP,#+32
   \   000000CA   0x.... 0x....      BL       WR_WAVE_UI
    101              //delay_ms(50);
    102          }
   \   000000CE   0xF50D 0x7D1F      ADD      SP,SP,#+636
   \   000000D2   0xBD00             POP      {PC}             ;; return
    103          /*******************************************************************************
    104          * 函  数  名      : GUI_VIEW_VECT
    105          * 描      述      : 电流电压向量及相角显示，颜色为黄绿红，采用56指令画向量，C108
    106                              指令显示相角值。
    107          * 输      入      : 无
    108          * 返      回      : 无
    109          *
    110          * 修       改     : WK
    111          * 时       间     : 2013-03-13
    112          * 描       述     : 基于2013-03-08界面
    113          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    114          void GUI_VIEW_VECT(void)
    115          {
   \                     GUI_VIEW_VECT:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0B1             SUB      SP,SP,#+196
    116              U8 text[][3]= {"Ua","Ub","Uc","Ia","Ib","Ic"}; 
   \   00000006   0xA817             ADD      R0,SP,#+92
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   0000000C   0x2214             MOVS     R2,#+20
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy4
    117              U16 VI_line[4];                                 //一条向量的数组
    118              U16 C108Dat[42] = {0};                          //剪切及原点坐标
   \   00000012   0xA81C             ADD      R0,SP,#+112
   \   00000014   0x2154             MOVS     R1,#+84
   \   00000016   0x.... 0x....      BL       __aeabi_memclr4
    119              U16 VEC_ORIG_YCOORD=95;                        //相位的初始Y 坐标
   \   0000001A   0x205F             MOVS     R0,#+95
   \   0000001C   0xF8AD 0x0014      STRH     R0,[SP, #+20]
    120              U16 Vec_Angle1[6]= {0};
   \   00000020   0xA80E             ADD      R0,SP,#+56
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0xC00E             STM      R0!,{R1-R3}
   \   0000002A   0x380C             SUBS     R0,R0,#+12
    121              U8 temp1,Angle_DIS[24],temp2;
    122              float Vec_Anglefloat[6]= {0.0},temp;                   //向量的浮点型，调用方便
   \   0000002C   0xA811             ADD      R0,SP,#+68
   \   0000002E   0x2118             MOVS     R1,#+24
   \   00000030   0x.... 0x....      BL       __aeabi_memclr4
    123              YADA_71 (MenuViewVector,0,40,366,417,0,40);
   \   00000034   0x2028             MOVS     R0,#+40
   \   00000036   0x9002             STR      R0,[SP, #+8]
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x9001             STR      R0,[SP, #+4]
   \   0000003C   0xF240 0x10A1      MOVW     R0,#+417
   \   00000040   0x9000             STR      R0,[SP, #+0]
   \   00000042   0xF44F 0x73B7      MOV      R3,#+366
   \   00000046   0x2228             MOVS     R2,#+40
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x2017             MOVS     R0,#+23
   \   0000004C   0x.... 0x....      BL       YADA_71
    124              //电压电流各向量及标识
    125              ChartoFloat(&PowRxchar[VEC_INDEX],Vec_Anglefloat,6,10000);
   \   00000050   0xF242 0x7310      MOVW     R3,#+10000
   \   00000054   0x2206             MOVS     R2,#+6
   \   00000056   0xA911             ADD      R1,SP,#+68
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   0000005C   0x.... 0x....      BL       ChartoFloat
    126              PhaseShift(Vec_Anglefloat,Vec_Angle1,6,Angle_DIS);
   \   00000060   0xAB08             ADD      R3,SP,#+32
   \   00000062   0x2206             MOVS     R2,#+6
   \   00000064   0xA90E             ADD      R1,SP,#+56
   \   00000066   0xA811             ADD      R0,SP,#+68
   \   00000068   0x.... 0x....      BL       PhaseShift
    127              for(U8 j=0; j<3; j++)
   \   0000006C   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000070   0xE0C0             B.N      ??GUI_VIEW_VECT_0
    128              {
    129                  for(U8 i=0; i<2; i++)
    130                  {
    131                      temp=Vec_Angle1[i*3+j]*PI/180;
   \                     ??GUI_VIEW_VECT_1:
   \   00000072   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000074   0x2003             MOVS     R0,#+3
   \   00000076   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000007A   0xFB00 0xA006      MLA      R0,R0,R6,R10
   \   0000007E   0xA90E             ADD      R1,SP,#+56
   \   00000080   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   00000084   0x.... 0x....      BL       __aeabi_ui2d
   \   00000088   0x.... 0x....      LDR.W    R2,??DataTable7_5  ;; 0x51eb851f
   \   0000008C   0x.... 0x....      LDR.W    R3,??DataTable7_6  ;; 0x40091eb8
   \   00000090   0x.... 0x....      BL       __aeabi_dmul
   \   00000094   0x2200             MOVS     R2,#+0
   \   00000096   0x.... 0x....      LDR.W    R3,??DataTable7_7  ;; 0x40668000
   \   0000009A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000009E   0x.... 0x....      BL       __aeabi_d2f
   \   000000A2   0x0007             MOVS     R7,R0
    132                      YADA_40(COLOR[j],0x0000);
   \   000000A4   0x2100             MOVS     R1,#+0
   \   000000A6   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000AE   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   000000B2   0x.... 0x....      BL       YADA_40
    133                      VI_line[0]=Vec_X0;
   \   000000B6   0x20AA             MOVS     R0,#+170
   \   000000B8   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    134                      VI_line[1]=Vec_Y0;
   \   000000BC   0x20EC             MOVS     R0,#+236
   \   000000BE   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    135                      VI_line[2]=(U16)(Vec_X0+Vec_R0*cos(temp));
   \   000000C2   0x0038             MOVS     R0,R7
   \   000000C4   0x.... 0x....      BL       __aeabi_f2d
   \   000000C8   0x.... 0x....      BL       cos
   \   000000CC   0x2200             MOVS     R2,#+0
   \   000000CE   0x.... 0x....      LDR.W    R3,??DataTable7_8  ;; 0x4064a000
   \   000000D2   0x.... 0x....      BL       __aeabi_dmul
   \   000000D6   0x2200             MOVS     R2,#+0
   \   000000D8   0x.... 0x....      LDR.W    R3,??DataTable8  ;; 0x40654000
   \   000000DC   0x.... 0x....      BL       __aeabi_dadd
   \   000000E0   0x.... 0x....      BL       __aeabi_d2iz
   \   000000E4   0xF8AD 0x001C      STRH     R0,[SP, #+28]
    136                      VI_line[3]=(U16)(Vec_Y0-Vec_R0*sin(temp));
   \   000000E8   0x0038             MOVS     R0,R7
   \   000000EA   0x.... 0x....      BL       __aeabi_f2d
   \   000000EE   0x.... 0x....      BL       sin
   \   000000F2   0x2200             MOVS     R2,#+0
   \   000000F4   0x.... 0x....      LDR.W    R3,??DataTable7_8  ;; 0x4064a000
   \   000000F8   0x.... 0x....      BL       __aeabi_dmul
   \   000000FC   0x0002             MOVS     R2,R0
   \   000000FE   0x000B             MOVS     R3,R1
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable7_9  ;; 0x406d8000
   \   00000106   0x.... 0x....      BL       __aeabi_dsub
   \   0000010A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000010E   0xF8AD 0x001E      STRH     R0,[SP, #+30]
    137                      YADA_98((U16)(Vec_X0+(Vec_R0 - 30*i - 10)*cos(temp)),(U16)(Vec_Y0-(Vec_R0 - 30*i - 10)*sin(temp)),0x22,0x81,0x01,COLOR[j],0x0000,text[j+i*3],0);//16是根据显示文本的点阵大小确定的，使文本在背景范围内显示
   \   00000112   0x0038             MOVS     R0,R7
   \   00000114   0x.... 0x....      BL       __aeabi_f2d
   \   00000118   0x.... 0x....      BL       sin
   \   0000011C   0x0004             MOVS     R4,R0
   \   0000011E   0x000D             MOVS     R5,R1
   \   00000120   0x0038             MOVS     R0,R7
   \   00000122   0x.... 0x....      BL       __aeabi_f2d
   \   00000126   0x.... 0x....      BL       cos
   \   0000012A   0x4680             MOV      R8,R0
   \   0000012C   0x4689             MOV      R9,R1
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0x9004             STR      R0,[SP, #+16]
   \   00000132   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000134   0x2003             MOVS     R0,#+3
   \   00000136   0xFB00 0xF006      MUL      R0,R0,R6
   \   0000013A   0xFA50 0xF08A      UXTAB    R0,R0,R10
   \   0000013E   0x2103             MOVS     R1,#+3
   \   00000140   0xAA17             ADD      R2,SP,#+92
   \   00000142   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000146   0x9003             STR      R0,[SP, #+12]
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x9002             STR      R0,[SP, #+8]
   \   0000014C   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000154   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   00000158   0x9001             STR      R0,[SP, #+4]
   \   0000015A   0x2001             MOVS     R0,#+1
   \   0000015C   0x9000             STR      R0,[SP, #+0]
   \   0000015E   0x2381             MOVS     R3,#+129
   \   00000160   0x2222             MOVS     R2,#+34
   \   00000162   0x4693             MOV      R11,R2
   \   00000164   0x001F             MOVS     R7,R3
   \   00000166   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000168   0x201E             MOVS     R0,#+30
   \   0000016A   0xFB00 0xF006      MUL      R0,R0,R6
   \   0000016E   0xF1D0 0x009B      RSBS     R0,R0,#+155
   \   00000172   0x.... 0x....      BL       __aeabi_i2d
   \   00000176   0x0002             MOVS     R2,R0
   \   00000178   0x000B             MOVS     R3,R1
   \   0000017A   0x0020             MOVS     R0,R4
   \   0000017C   0x0029             MOVS     R1,R5
   \   0000017E   0x.... 0x....      BL       __aeabi_dmul
   \   00000182   0x0002             MOVS     R2,R0
   \   00000184   0x000B             MOVS     R3,R1
   \   00000186   0x2000             MOVS     R0,#+0
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable7_9  ;; 0x406d8000
   \   0000018C   0x.... 0x....      BL       __aeabi_dsub
   \   00000190   0x.... 0x....      BL       __aeabi_d2iz
   \   00000194   0x0001             MOVS     R1,R0
   \   00000196   0x003B             MOVS     R3,R7
   \   00000198   0x465A             MOV      R2,R11
   \   0000019A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000019C   0x000F             MOVS     R7,R1
   \   0000019E   0x0015             MOVS     R5,R2
   \   000001A0   0x001C             MOVS     R4,R3
   \   000001A2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001A4   0x201E             MOVS     R0,#+30
   \   000001A6   0xFB00 0xF006      MUL      R0,R0,R6
   \   000001AA   0xF1D0 0x009B      RSBS     R0,R0,#+155
   \   000001AE   0x.... 0x....      BL       __aeabi_i2d
   \   000001B2   0x4642             MOV      R2,R8
   \   000001B4   0x464B             MOV      R3,R9
   \   000001B6   0x.... 0x....      BL       __aeabi_dmul
   \   000001BA   0x0002             MOVS     R2,R0
   \   000001BC   0x000B             MOVS     R3,R1
   \   000001BE   0x2000             MOVS     R0,#+0
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40654000
   \   000001C4   0x.... 0x....      BL       __aeabi_dadd
   \   000001C8   0x.... 0x....      BL       __aeabi_d2iz
   \   000001CC   0x0023             MOVS     R3,R4
   \   000001CE   0x002A             MOVS     R2,R5
   \   000001D0   0x0039             MOVS     R1,R7
   \   000001D2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001D4   0x.... 0x....      BL       YADA_98
    138                      YADA_56(VI_line,4);//前景色划直线
   \   000001D8   0x2104             MOVS     R1,#+4
   \   000001DA   0xA806             ADD      R0,SP,#+24
   \   000001DC   0x.... 0x....      BL       YADA_56
    139                      delay_ms(2);
   \   000001E0   0x2002             MOVS     R0,#+2
   \   000001E2   0x.... 0x....      BL       delay_ms
    140                  }
   \   000001E6   0x1C76             ADDS     R6,R6,#+1
   \                     ??GUI_VIEW_VECT_2:
   \   000001E8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001EA   0x2E02             CMP      R6,#+2
   \   000001EC   0xF4FF 0xAF41      BCC.W    ??GUI_VIEW_VECT_1
   \   000001F0   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??GUI_VIEW_VECT_0:
   \   000001F4   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001F8   0xF1BA 0x0F03      CMP      R10,#+3
   \   000001FC   0xD201             BCS.N    ??GUI_VIEW_VECT_3
   \   000001FE   0x2600             MOVS     R6,#+0
   \   00000200   0xE7F2             B.N      ??GUI_VIEW_VECT_2
    141              }
    142              //Sig_Fiq(&PowRxchar[VEC_INDEX],Angle_DIS,1000,2);
    143              //电压电流各相角的实时数值显示
    144              for (U8 k = 0; k < 2; k++)
   \                     ??GUI_VIEW_VECT_3:
   \   00000202   0x2000             MOVS     R0,#+0
   \   00000204   0xE05C             B.N      ??GUI_VIEW_VECT_4
    145              {
    146                  for(U8 i=0; i<3; i++)
    147                  {
    148                      temp2=12*k+4*i;
   \                     ??GUI_VIEW_VECT_5:
   \   00000206   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000208   0x220C             MOVS     R2,#+12
   \   0000020A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000020C   0x008B             LSLS     R3,R1,#+2
   \   0000020E   0xFB02 0x3200      MLA      R2,R2,R0,R3
    149                      temp1=21*k + 7*i;
   \   00000212   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000214   0x2315             MOVS     R3,#+21
   \   00000216   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000218   0x2407             MOVS     R4,#+7
   \   0000021A   0xFB04 0xF401      MUL      R4,R4,R1
   \   0000021E   0xFB03 0x4300      MLA      R3,R3,R0,R4
    150                      C108Dat[temp1 + 0] = 0x3104;         //P  显示数据的模式
   \   00000222   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000224   0xAC1C             ADD      R4,SP,#+112
   \   00000226   0xF243 0x1504      MOVW     R5,#+12548
   \   0000022A   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
    151                      C108Dat[temp1 + 1] = 455;            //显示相位的X坐标
   \   0000022E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000230   0xAC1C             ADD      R4,SP,#+112
   \   00000232   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000236   0xF240 0x15C7      MOVW     R5,#+455
   \   0000023A   0x8065             STRH     R5,[R4, #+2]
    152                      C108Dat[temp1 + 2] = VEC_ORIG_YCOORD + i*44 + k*158;     //Y坐标
   \   0000023C   0xF8BD 0x4014      LDRH     R4,[SP, #+20]
   \   00000240   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000242   0x252C             MOVS     R5,#+44
   \   00000244   0xFB05 0xF501      MUL      R5,R5,R1
   \   00000248   0xFA15 0xF484      UXTAH    R4,R5,R4
   \   0000024C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000024E   0x259E             MOVS     R5,#+158
   \   00000250   0xFB05 0x4400      MLA      R4,R5,R0,R4
   \   00000254   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000256   0xAD1C             ADD      R5,SP,#+112
   \   00000258   0xEB15 0x0543      ADDS     R5,R5,R3, LSL #+1
   \   0000025C   0x80AC             STRH     R4,[R5, #+4]
    153                      C108Dat[temp1 + 3] = C108FC_W;         //白色，下为黑色
   \   0000025E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000260   0xAC1C             ADD      R4,SP,#+112
   \   00000262   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000266   0xF64F 0x75FF      MOVW     R5,#+65535
   \   0000026A   0x80E5             STRH     R5,[R4, #+6]
    154                      C108Dat[temp1 + 4] = 0x0000;
   \   0000026C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000026E   0xAC1C             ADD      R4,SP,#+112
   \   00000270   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000274   0x2500             MOVS     R5,#+0
   \   00000276   0x8125             STRH     R5,[R4, #+8]
    155                      C108Dat[temp1 + 5] = ((U16)(Angle_DIS[temp2])<<8)+((U16)Angle_DIS[temp2+1]);//两个字节转为一个字
   \   00000278   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000027A   0xAC08             ADD      R4,SP,#+32
   \   0000027C   0x5D14             LDRB     R4,[R2, R4]
   \   0000027E   0x0224             LSLS     R4,R4,#+8
   \   00000280   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000282   0xAD08             ADD      R5,SP,#+32
   \   00000284   0x1955             ADDS     R5,R2,R5
   \   00000286   0x786D             LDRB     R5,[R5, #+1]
   \   00000288   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   0000028C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000028E   0xAD1C             ADD      R5,SP,#+112
   \   00000290   0xEB15 0x0543      ADDS     R5,R5,R3, LSL #+1
   \   00000294   0x816C             STRH     R4,[R5, #+10]
    156                      C108Dat[temp1 + 6] = ((U16)(Angle_DIS[temp2+2])<<8)+((U16)Angle_DIS[temp2+3]);
   \   00000296   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000298   0xAC08             ADD      R4,SP,#+32
   \   0000029A   0x1914             ADDS     R4,R2,R4
   \   0000029C   0x78A4             LDRB     R4,[R4, #+2]
   \   0000029E   0x0224             LSLS     R4,R4,#+8
   \   000002A0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000002A2   0xAD08             ADD      R5,SP,#+32
   \   000002A4   0x1952             ADDS     R2,R2,R5
   \   000002A6   0x78D2             LDRB     R2,[R2, #+3]
   \   000002A8   0xFA54 0xF282      UXTAB    R2,R4,R2
   \   000002AC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002AE   0xAC1C             ADD      R4,SP,#+112
   \   000002B0   0xEB14 0x0343      ADDS     R3,R4,R3, LSL #+1
   \   000002B4   0x819A             STRH     R2,[R3, #+12]
    157                  }
   \   000002B6   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_VECT_6:
   \   000002B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002BA   0x2903             CMP      R1,#+3
   \   000002BC   0xD3A3             BCC.N    ??GUI_VIEW_VECT_5
   \   000002BE   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_VECT_4:
   \   000002C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C2   0x2802             CMP      R0,#+2
   \   000002C4   0xD201             BCS.N    ??GUI_VIEW_VECT_7
   \   000002C6   0x2100             MOVS     R1,#+0
   \   000002C8   0xE7F6             B.N      ??GUI_VIEW_VECT_6
    158              }
    159              YADA_C0(Vectoraddr,C108Dat,42);
   \                     ??GUI_VIEW_VECT_7:
   \   000002CA   0x222A             MOVS     R2,#+42
   \   000002CC   0xA91C             ADD      R1,SP,#+112
   \   000002CE   0xF640 0x1038      MOVW     R0,#+2360
   \   000002D2   0x.... 0x....      BL       YADA_C0
    160              YADA_C108(Vectoraddr,6);
   \   000002D6   0x2106             MOVS     R1,#+6
   \   000002D8   0xF640 0x1038      MOVW     R0,#+2360
   \   000002DC   0x.... 0x....      BL       YADA_C108
    161              delay_ms(5);  
   \   000002E0   0x2005             MOVS     R0,#+5
   \   000002E2   0x.... 0x....      BL       delay_ms
    162          }
   \   000002E6   0xB031             ADD      SP,SP,#+196
   \   000002E8   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    163          /*******************************************************************************
    164          * 函  数  名      : GUI_VIEW_ListMeasure
    165          * 描      述      : C108数据显示页下的数值列表-电能计量数据显示，三相的U,I,P,S,Q,
    166                              PF,F。
    167          * 输      入      : 无
    168          * 返      回      : 无
    169          *
    170          * 修       改     : WK
    171          * 时       间     : 2013-03-14
    172          * 描       述     : 基于2013-03-08界面 : 修改了 C108Data 数组存放数据顺序以及 显示的算法
    173          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    174          void GUI_VIEW_ListMeasure()   // wk --> 电能计量参数
    175          {
   \                     GUI_VIEW_ListMeasure:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0DF             SUB      SP,SP,#+380
    176          #if 0 // wk @130408--> revrese dot old
    177          //    U16 C108Data[147]= {0};//21个数据，存放顺序为U-P-Q-f-I-S-PF // wk -->
    178             /* WK --> */
    179                U16 C108Data[147]= {0};//21个数据，存放顺序为U-I-P-Q-S-PF-f
    180                
    181                for(int i=0;i<7;i++)
    182                {
    183                  for(int abc=0;abc<3;abc++)// wk --> 切换ABC
    184                  {
    185                    C108Data[21*i+7*abc+0]=C108Mode_64;//显示数据的模式
    186                    C108Data[21*i+7*abc+1]=164+abc*152;//左边列数据的X：79,右边X:434  148
    187                    C108Data[21*i+7*abc+2]=135+i*45;//Y坐标43
    188                    C108Data[21*i+7*abc+3]=C108FC_W;
    189                    C108Data[21*i+7*abc+4]=C108BC_Bk;
    190                    if(i<2)
    191                    {
    192                      C108Data[21*i+7*abc+5]=((U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX])<<8)+
    193                                             (U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX+1]);
    194                      C108Data[21*i+7*abc+6]=((U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX+2])<<8)+
    195                                             (U16)(PowRxchar[8*i+16*abc+UI_VIRTUAL_INDEX+3]);
    196                    }
    197                    else
    198                    {
    199                       C108Data[21*i+7*abc+6]=((U16)(PowRxchar[20*abc+i*4+PQSf_INDEX])<<8)+
    200                                                       (U16)(PowRxchar[20*abc+i*4+PQSf_INDEX+1]);
    201                       C108Data[21*i+7*abc+7]=((U16)(PowRxchar[20*abc+i*4+PQSf_INDEX+2])<<8)+
    202                                                       (U16)(PowRxchar[20*abc+i*4+PQSf_INDEX+3]);
    203                    }
    204                  }
    205                }
    206          #endif
    207                /* WK --> END */
    208          #if 1 // wk @130408--> revrese dot tx
    209              U16 C108Data[147]= {0};//21个数据，存放顺序为U-P-Q-f-I-S-PF
   \   00000004   0xA815             ADD      R0,SP,#+84
   \   00000006   0xF44F 0x7194      MOV      R1,#+296
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    210              U8 temp,temp1,DATA_DIS1[84]= {0};
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x2154             MOVS     R1,#+84
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
    211              Sig_Fiq(PowRxchar,DATA_DIS1,100,3);
   \   00000016   0x2303             MOVS     R3,#+3
   \   00000018   0x2264             MOVS     R2,#+100
   \   0000001A   0xA900             ADD      R1,SP,#+0
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   00000020   0x.... 0x....      BL       Sig_Fiq
    212              Sig_Fiq(&PowRxchar[I_VIRTUAL_INDEX],&DATA_DIS1[I_VIRTUAL_INDEX],10,3);
   \   00000024   0x2303             MOVS     R3,#+3
   \   00000026   0x220A             MOVS     R2,#+10
   \   00000028   0xA903             ADD      R1,SP,#+12
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000002E   0x.... 0x....      BL       Sig_Fiq
    213              Sig_Fiq(&PowRxchar[PQS_INDEX],&DATA_DIS1[PQS_INDEX],100,9);
   \   00000032   0x2309             MOVS     R3,#+9
   \   00000034   0x2264             MOVS     R2,#+100
   \   00000036   0xA906             ADD      R1,SP,#+24
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   0000003C   0x.... 0x....      BL       Sig_Fiq
    214              Sig_Fiq(&PowRxchar[PF_INDEX],&DATA_DIS1[PF_INDEX],1,3);
   \   00000040   0x2303             MOVS     R3,#+3
   \   00000042   0x2201             MOVS     R2,#+1
   \   00000044   0xA90F             ADD      R1,SP,#+60
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   0000004A   0x.... 0x....      BL       Sig_Fiq
    215              Sig_Fiq(&PowRxchar[F_INDEX],&DATA_DIS1[F_INDEX],10,3);
   \   0000004E   0x2303             MOVS     R3,#+3
   \   00000050   0x220A             MOVS     R2,#+10
   \   00000052   0xA912             ADD      R1,SP,#+72
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000058   0x.... 0x....      BL       Sig_Fiq
    216              for(U8 ui=0; ui<7; ui++) //切换UI
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0xE000             B.N      ??GUI_VIEW_ListMeasure_0
   \                     ??GUI_VIEW_ListMeasure_1:
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_ListMeasure_0:
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x2807             CMP      R0,#+7
   \   00000066   0xF080 0x8085      BCS.W    ??GUI_VIEW_ListMeasure_2
    217              {
    218                  for(U8 lcv_u=0; lcv_u<3; lcv_u++)//切换ABC
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0xE046             B.N      ??GUI_VIEW_ListMeasure_3
    219                  {
    220                      temp=21*ui+7*lcv_u;
    221                      temp1=12*ui+4*lcv_u;
    222                      if((ui==1)||(ui==6))
    223                      {
    224                          C108Data[temp+0]=C108Mode_63;//显示数据的模式
    225                          C108Data[temp+1]=179+lcv_u*153;//左边列数据的X：79,右边X:434
    226                      }
    227                      else if(ui==5)
    228                      {
    229                          C108Data[temp+0]=C108Mode_64;//显示数据的模式
    230                          C108Data[temp+1]=167+lcv_u*153;//左边列数据的X：79,右边X:434
    231                      }
    232                      else
    233                      {
    234                          C108Data[temp+0]=C108Mode_62;//显示数据的模式
   \                     ??GUI_VIEW_ListMeasure_4:
   \   0000006E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000070   0xAC15             ADD      R4,SP,#+84
   \   00000072   0xF246 0x2504      MOVW     R5,#+25092
   \   00000076   0xF824 0x5012      STRH     R5,[R4, R2, LSL #+1]
    235                          C108Data[temp+1]=191+lcv_u*153;//左边列数据的X：79,右边X:434
   \   0000007A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007C   0xAC15             ADD      R4,SP,#+84
   \   0000007E   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   00000082   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000084   0x2599             MOVS     R5,#+153
   \   00000086   0xFB05 0xF501      MUL      R5,R5,R1
   \   0000008A   0x35BF             ADDS     R5,R5,#+191
   \   0000008C   0x8065             STRH     R5,[R4, #+2]
    236                      }
    237                      //C108Data[temp+1]=167+lcv_u*153;//左边列数据的X：79,右边X:434
    238                      C108Data[temp+2]=135+ui*43;//Y坐标43
   \                     ??GUI_VIEW_ListMeasure_5:
   \   0000008E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000090   0xAC15             ADD      R4,SP,#+84
   \   00000092   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x252B             MOVS     R5,#+43
   \   0000009A   0xFB05 0xF500      MUL      R5,R5,R0
   \   0000009E   0x3587             ADDS     R5,R5,#+135
   \   000000A0   0x80A5             STRH     R5,[R4, #+4]
    239                      C108Data[temp+3]=C108FC_W;
   \   000000A2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A4   0xAC15             ADD      R4,SP,#+84
   \   000000A6   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   000000AA   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000AE   0x80E5             STRH     R5,[R4, #+6]
    240                      C108Data[temp+4]=C108BC_Bk;
   \   000000B0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B2   0xAC15             ADD      R4,SP,#+84
   \   000000B4   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   000000B8   0x2500             MOVS     R5,#+0
   \   000000BA   0x8125             STRH     R5,[R4, #+8]
    241                      C108Data[temp+5]=((U16)(DATA_DIS1[temp1])<<8)+(U16)(DATA_DIS1[temp1+1]);
   \   000000BC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000BE   0xAC00             ADD      R4,SP,#+0
   \   000000C0   0x5D1C             LDRB     R4,[R3, R4]
   \   000000C2   0x0224             LSLS     R4,R4,#+8
   \   000000C4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000C6   0xAD00             ADD      R5,SP,#+0
   \   000000C8   0x195D             ADDS     R5,R3,R5
   \   000000CA   0x786D             LDRB     R5,[R5, #+1]
   \   000000CC   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   000000D0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D2   0xAD15             ADD      R5,SP,#+84
   \   000000D4   0xEB15 0x0542      ADDS     R5,R5,R2, LSL #+1
   \   000000D8   0x816C             STRH     R4,[R5, #+10]
    242                      C108Data[temp+6]=((U16)(DATA_DIS1[temp1+2])<<8)+(U16)(DATA_DIS1[temp1+3]);
   \   000000DA   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000DC   0xAC00             ADD      R4,SP,#+0
   \   000000DE   0x191C             ADDS     R4,R3,R4
   \   000000E0   0x78A4             LDRB     R4,[R4, #+2]
   \   000000E2   0x0224             LSLS     R4,R4,#+8
   \   000000E4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000E6   0xAD00             ADD      R5,SP,#+0
   \   000000E8   0x195B             ADDS     R3,R3,R5
   \   000000EA   0x78DB             LDRB     R3,[R3, #+3]
   \   000000EC   0xFA54 0xF383      UXTAB    R3,R4,R3
   \   000000F0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000F2   0xAC15             ADD      R4,SP,#+84
   \   000000F4   0xEB14 0x0242      ADDS     R2,R4,R2, LSL #+1
   \   000000F8   0x8193             STRH     R3,[R2, #+12]
   \   000000FA   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_ListMeasure_3:
   \   000000FC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000FE   0x2903             CMP      R1,#+3
   \   00000100   0xD2AE             BCS.N    ??GUI_VIEW_ListMeasure_1
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x2215             MOVS     R2,#+21
   \   00000106   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000108   0x2307             MOVS     R3,#+7
   \   0000010A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000010E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000112   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000114   0x230C             MOVS     R3,#+12
   \   00000116   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000118   0x008C             LSLS     R4,R1,#+2
   \   0000011A   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   0000011E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000120   0x2801             CMP      R0,#+1
   \   00000122   0xD002             BEQ.N    ??GUI_VIEW_ListMeasure_6
   \   00000124   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000126   0x2806             CMP      R0,#+6
   \   00000128   0xD110             BNE.N    ??GUI_VIEW_ListMeasure_7
   \                     ??GUI_VIEW_ListMeasure_6:
   \   0000012A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000012C   0xAC15             ADD      R4,SP,#+84
   \   0000012E   0xF246 0x3504      MOVW     R5,#+25348
   \   00000132   0xF824 0x5012      STRH     R5,[R4, R2, LSL #+1]
   \   00000136   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000138   0xAC15             ADD      R4,SP,#+84
   \   0000013A   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   0000013E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000140   0x2599             MOVS     R5,#+153
   \   00000142   0xFB05 0xF501      MUL      R5,R5,R1
   \   00000146   0x35B3             ADDS     R5,R5,#+179
   \   00000148   0x8065             STRH     R5,[R4, #+2]
   \   0000014A   0xE7A0             B.N      ??GUI_VIEW_ListMeasure_5
   \                     ??GUI_VIEW_ListMeasure_7:
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x2805             CMP      R0,#+5
   \   00000150   0xD18D             BNE.N    ??GUI_VIEW_ListMeasure_4
   \   00000152   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000154   0xAC15             ADD      R4,SP,#+84
   \   00000156   0xF246 0x4504      MOVW     R5,#+25604
   \   0000015A   0xF824 0x5012      STRH     R5,[R4, R2, LSL #+1]
   \   0000015E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000160   0xAC15             ADD      R4,SP,#+84
   \   00000162   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   00000166   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000168   0x2599             MOVS     R5,#+153
   \   0000016A   0xFB05 0xF501      MUL      R5,R5,R1
   \   0000016E   0x35A7             ADDS     R5,R5,#+167
   \   00000170   0x8065             STRH     R5,[R4, #+2]
   \   00000172   0xE78C             B.N      ??GUI_VIEW_ListMeasure_5
    243                  }
    244              }
    245          #endif
    246              
    247              YADA_C0(DMMPowerInfoAdr,C108Data,84);
   \                     ??GUI_VIEW_ListMeasure_2:
   \   00000174   0x2254             MOVS     R2,#+84
   \   00000176   0xA915             ADD      R1,SP,#+84
   \   00000178   0xF44F 0x60A0      MOV      R0,#+1280
   \   0000017C   0x.... 0x....      BL       YADA_C0
    248              YADA_C108(DMMPowerInfoAdr,12);
   \   00000180   0x210C             MOVS     R1,#+12
   \   00000182   0xF44F 0x60A0      MOV      R0,#+1280
   \   00000186   0x.... 0x....      BL       YADA_C108
    249              delay_ms(5);
   \   0000018A   0x2005             MOVS     R0,#+5
   \   0000018C   0x.... 0x....      BL       delay_ms
    250              YADA_C0(DMMPowerInfoAdr+168,&C108Data[84],63);
   \   00000190   0x223F             MOVS     R2,#+63
   \   00000192   0xA93F             ADD      R1,SP,#+252
   \   00000194   0xF44F 0x60B5      MOV      R0,#+1448
   \   00000198   0x.... 0x....      BL       YADA_C0
    251              YADA_C108(DMMPowerInfoAdr+168,9);
   \   0000019C   0x2109             MOVS     R1,#+9
   \   0000019E   0xF44F 0x60B5      MOV      R0,#+1448
   \   000001A2   0x.... 0x....      BL       YADA_C108
    252              delay_ms(5);
   \   000001A6   0x2005             MOVS     R0,#+5
   \   000001A8   0x.... 0x....      BL       delay_ms
    253           
    254          }
   \   000001AC   0xB05F             ADD      SP,SP,#+380
   \   000001AE   0xBD30             POP      {R4,R5,PC}       ;; return
    255          /*******************************************************************************
    256          * 函  数  名      : GUI_VIEW_ListQuality
    257          * 描      述      : C108数据显示页下的数值列表-电能质量数据显示，三相的PST,PlT,
    258                              eu，ei,U_THD,I_THD。
    259          * 输      入      : 无
    260          * 返      回      : 无
    261          *
    262          * 修       改     : WK
    263          * 时       间     : 2013-03-14
    264          * 描       述     : 基于2013-03-08界面 : 修改了 ListQC108 数组存放数据顺序以及 显示的算法
    265                              &&&&&& 显示的电能质量数据还没有赋给数据 &&&&&&&&
    266          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    267          void GUI_VIEW_ListQuality() // wk --> 电能质量参数
    268          {
   \                     GUI_VIEW_ListQuality:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0D1             SUB      SP,SP,#+324
    269          #if 0 // wk @130408--> revrese dot old
    270              U8 temp1;
    271              U16 ListQC108[6*3*7];//24个数据 显示顺序：
    272              for(int num=0;num<6;num++) //数据类型切换 
    273                for(int abc=0;abc<3;abc++)//ABC切换
    274                {
    275                  temp1=8*num+16*abc;
    276                  ListQC108[num*21+abc*7]=C108Mode_64;//显示数据的模式
    277                  ListQC108[num*21+abc*7+1]=164+abc*152;//显示左边列数据的X坐标75
    278                  ListQC108[num*21+abc*7+2]=150+num*40;// Y轴坐标
    279                  ListQC108[num*21+abc*7+3]=C108FC_W;
    280                  ListQC108[num*21+abc*7+4]=C108BC_Bk;
    281                  /* wk --> 显示的电能质量数据*/
    282                   
    283                  ListQC108[num*21+abc*7+5]=((U16)(PowRxchar[temp1+Pst_INDEX])<<8)+(U16)(PowRxchar[temp1+Pst_INDEX+1]);// -----------------待补充
    284                  ListQC108[num*21+abc*7+6]=((U16)(PowRxchar[temp1+Pst_INDEX+2])<<8)+(U16)(PowRxchar[temp1+Pst_INDEX+3]);// -----------------待补充
    285                }
    286              
    287              YADA_C0(DMMPowerInfoAdr,ListQC108,9*7);
    288              YADA_C108(DMMPowerInfoAdr,9);
    289              delay_ms(5);
    290              YADA_C0(DMMPowerInfoAdr+168,&ListQC108[9*7],9*7);
    291              YADA_C108(DMMPowerInfoAdr+168,9);
    292              delay_ms(5);
    293          #endif //wk -->
    294              
    295          #if 1 // wk @130408--> revrese dot tx
    296                  U16 ListQC108[126];//14个数据,按Pst-Plt-e-THDU-THDI的顺序存放
    297              U8 temp,temp1,DATA_DIS2[72]= {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2148             MOVS     R1,#+72
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    298              Sig_Fiq(&PowRxchar[U_ERR_INDEX],DATA_DIS2,10,6);
   \   0000000C   0x2306             MOVS     R3,#+6
   \   0000000E   0x220A             MOVS     R2,#+10
   \   00000010   0xA900             ADD      R1,SP,#+0
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000016   0x.... 0x....      BL       Sig_Fiq
    299              Sig_Fiq(&PowRxchar[U_ERR_INDEX+24],&DATA_DIS2[24],100,6);
   \   0000001A   0x2306             MOVS     R3,#+6
   \   0000001C   0x2264             MOVS     R2,#+100
   \   0000001E   0xA906             ADD      R1,SP,#+24
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   00000024   0x.... 0x....      BL       Sig_Fiq
    300              Sig_Fiq(&PowRxchar[U_ERR_INDEX+48],&DATA_DIS2[48],10,6);
   \   00000028   0x2306             MOVS     R3,#+6
   \   0000002A   0x220A             MOVS     R2,#+10
   \   0000002C   0xA90C             ADD      R1,SP,#+48
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000032   0x.... 0x....      BL       Sig_Fiq
    301              for(U8 lcv_sl=0; lcv_sl<6; lcv_sl++)//先Pst后Plt
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0xE000             B.N      ??GUI_VIEW_ListQuality_0
   \                     ??GUI_VIEW_ListQuality_1:
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_ListQuality_0:
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x2806             CMP      R0,#+6
   \   00000040   0xD270             BCS.N    ??GUI_VIEW_ListQuality_2
    302              {
    303                  for(U8 lcv_slABC=0; lcv_slABC<3; lcv_slABC++)
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0xE046             B.N      ??GUI_VIEW_ListQuality_3
    304                  {
    305                      temp=21*lcv_sl+7*lcv_slABC;
    306                      temp1=12*lcv_sl+4*lcv_slABC;
    307                      if((lcv_sl==2)||(lcv_sl==3))
    308                      {
    309                          ListQC108[temp+0]=C108Mode_62;//显示数据的模式
    310                          ListQC108[temp+1]=191+152*lcv_slABC;//左边数据X:75
    311                      }
    312                      else
    313                      {
    314                          ListQC108[temp+0]=C108Mode_63;//显示数据的模式
   \                     ??GUI_VIEW_ListQuality_4:
   \   00000046   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000048   0xAC12             ADD      R4,SP,#+72
   \   0000004A   0xF246 0x3504      MOVW     R5,#+25348
   \   0000004E   0xF824 0x5012      STRH     R5,[R4, R2, LSL #+1]
    315                          ListQC108[temp+1]=179+152*lcv_slABC;//左边数据X:75
   \   00000052   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000054   0xAC12             ADD      R4,SP,#+72
   \   00000056   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0x2598             MOVS     R5,#+152
   \   0000005E   0xFB05 0xF501      MUL      R5,R5,R1
   \   00000062   0x35B3             ADDS     R5,R5,#+179
   \   00000064   0x8065             STRH     R5,[R4, #+2]
    316                      }
    317                      // ListQC108[temp+1]=167+152*lcv_slABC;//左边数据X:75
    318                      ListQC108[temp+2]=143+lcv_sl*41;//UY坐标43，IY坐标145
   \                     ??GUI_VIEW_ListQuality_5:
   \   00000066   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000068   0xAC12             ADD      R4,SP,#+72
   \   0000006A   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2529             MOVS     R5,#+41
   \   00000072   0xFB05 0xF500      MUL      R5,R5,R0
   \   00000076   0x358F             ADDS     R5,R5,#+143
   \   00000078   0x80A5             STRH     R5,[R4, #+4]
    319                      ListQC108[temp+3]=C108FC_W;
   \   0000007A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007C   0xAC12             ADD      R4,SP,#+72
   \   0000007E   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   00000082   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000086   0x80E5             STRH     R5,[R4, #+6]
    320                      ListQC108[temp+4]=C108BC_Bk;
   \   00000088   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000008A   0xAC12             ADD      R4,SP,#+72
   \   0000008C   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   00000090   0x2500             MOVS     R5,#+0
   \   00000092   0x8125             STRH     R5,[R4, #+8]
    321                      ListQC108[temp+5]=((U16)(DATA_DIS2[temp1])<<8)+(U16)(DATA_DIS2[temp1+1]);
   \   00000094   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000096   0xAC00             ADD      R4,SP,#+0
   \   00000098   0x5D1C             LDRB     R4,[R3, R4]
   \   0000009A   0x0224             LSLS     R4,R4,#+8
   \   0000009C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000009E   0xAD00             ADD      R5,SP,#+0
   \   000000A0   0x195D             ADDS     R5,R3,R5
   \   000000A2   0x786D             LDRB     R5,[R5, #+1]
   \   000000A4   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   000000A8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000AA   0xAD12             ADD      R5,SP,#+72
   \   000000AC   0xEB15 0x0542      ADDS     R5,R5,R2, LSL #+1
   \   000000B0   0x816C             STRH     R4,[R5, #+10]
    322                      ListQC108[temp+6]=((U16)(DATA_DIS2[temp1+2])<<8)+(U16)(DATA_DIS2[temp1+3]);
   \   000000B2   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B4   0xAC00             ADD      R4,SP,#+0
   \   000000B6   0x191C             ADDS     R4,R3,R4
   \   000000B8   0x78A4             LDRB     R4,[R4, #+2]
   \   000000BA   0x0224             LSLS     R4,R4,#+8
   \   000000BC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000BE   0xAD00             ADD      R5,SP,#+0
   \   000000C0   0x195B             ADDS     R3,R3,R5
   \   000000C2   0x78DB             LDRB     R3,[R3, #+3]
   \   000000C4   0xFA54 0xF383      UXTAB    R3,R4,R3
   \   000000C8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000CA   0xAC12             ADD      R4,SP,#+72
   \   000000CC   0xEB14 0x0242      ADDS     R2,R4,R2, LSL #+1
   \   000000D0   0x8193             STRH     R3,[R2, #+12]
   \   000000D2   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_ListQuality_3:
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x2903             CMP      R1,#+3
   \   000000D8   0xD2AF             BCS.N    ??GUI_VIEW_ListQuality_1
   \   000000DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DC   0x2215             MOVS     R2,#+21
   \   000000DE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E0   0x2307             MOVS     R3,#+7
   \   000000E2   0xFB03 0xF301      MUL      R3,R3,R1
   \   000000E6   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EC   0x230C             MOVS     R3,#+12
   \   000000EE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F0   0x008C             LSLS     R4,R1,#+2
   \   000000F2   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   000000F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F8   0x2802             CMP      R0,#+2
   \   000000FA   0xD002             BEQ.N    ??GUI_VIEW_ListQuality_6
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0x2803             CMP      R0,#+3
   \   00000100   0xD1A1             BNE.N    ??GUI_VIEW_ListQuality_4
   \                     ??GUI_VIEW_ListQuality_6:
   \   00000102   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000104   0xAC12             ADD      R4,SP,#+72
   \   00000106   0xF246 0x2504      MOVW     R5,#+25092
   \   0000010A   0xF824 0x5012      STRH     R5,[R4, R2, LSL #+1]
   \   0000010E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000110   0xAC12             ADD      R4,SP,#+72
   \   00000112   0xEB14 0x0442      ADDS     R4,R4,R2, LSL #+1
   \   00000116   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000118   0x2598             MOVS     R5,#+152
   \   0000011A   0xFB05 0xF501      MUL      R5,R5,R1
   \   0000011E   0x35BF             ADDS     R5,R5,#+191
   \   00000120   0x8065             STRH     R5,[R4, #+2]
   \   00000122   0xE7A0             B.N      ??GUI_VIEW_ListQuality_5
    323                  }
    324              }
    325              YADA_C0(ListQualityInfoAdr,ListQC108,63);
   \                     ??GUI_VIEW_ListQuality_2:
   \   00000124   0x223F             MOVS     R2,#+63
   \   00000126   0xA912             ADD      R1,SP,#+72
   \   00000128   0xF640 0x0074      MOVW     R0,#+2164
   \   0000012C   0x.... 0x....      BL       YADA_C0
    326              YADA_C108(ListQualityInfoAdr,9);
   \   00000130   0x2109             MOVS     R1,#+9
   \   00000132   0xF640 0x0074      MOVW     R0,#+2164
   \   00000136   0x.... 0x....      BL       YADA_C108
    327              delay_ms(5);
   \   0000013A   0x2005             MOVS     R0,#+5
   \   0000013C   0x.... 0x....      BL       delay_ms
    328              YADA_C0(ListQualityInfoAdr+126,&ListQC108[63],63);
   \   00000140   0x223F             MOVS     R2,#+63
   \   00000142   0xF10D 0x01C6      ADD      R1,SP,#+198
   \   00000146   0xF640 0x00F2      MOVW     R0,#+2290
   \   0000014A   0x.... 0x....      BL       YADA_C0
    329              YADA_C108(ListQualityInfoAdr+126,9);
   \   0000014E   0x2109             MOVS     R1,#+9
   \   00000150   0xF640 0x00F2      MOVW     R0,#+2290
   \   00000154   0x.... 0x....      BL       YADA_C108
    330              delay_ms(5);
   \   00000158   0x2005             MOVS     R0,#+5
   \   0000015A   0x.... 0x....      BL       delay_ms
    331          #endif
    332              
    333          }
   \   0000015E   0xB051             ADD      SP,SP,#+324
   \   00000160   0xBD30             POP      {R4,R5,PC}       ;; return
    334          
    335          /*******************************************************************************
    336          * 函  数  名      : GUI_VIEW_ListQuality2
    337          * 描      述      : 三相不平衡所有显示函数
    338          * 输      入      : 无
    339          * 返      回      : 无
    340          *
    341          * 修       改     : WK
    342          * 时       间     : 2013-03-14
    343          * 描       述     : 基于2013-03-08界面 : 修改了 C108Data 数组存放数据顺序以及 显示的算法
    344          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    345          void GUI_VIEW_ListQuality2(U8 U_DISK)
    346          {
   \                     GUI_VIEW_ListQuality2:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0AD             SUB      SP,SP,#+180
    347          #if 0 // wk @130408--> revrese dot old
    348            U16 BlockC108[5*2*7]={0};
    349            for(int num=0;num<5;num++)
    350              for(int ui=0;ui<2;ui++)
    351              {
    352                BlockC108[num*14+ui*7]=0x3404;
    353                BlockC108[num*14+ui*7+1]= 270+ui*210;
    354                BlockC108[num*14+ui*7+2]= 160+num*45;
    355                
    356                BlockC108[num*14+ui*7+3]=C108FC_W;
    357                BlockC108[num*14+ui*7+4]=C108BC_Bk;
    358                /* wk --> 显示的电能质量数据 */
    359                BlockC108[num*14+ui*7+5]=0;  // ----------------待补充
    360                BlockC108[num*14+ui*7+6]=0;  // ----------------待补充
    361              }
    362            YADA_C0(ListUnblanceAdr, BlockC108,10*7);
    363            YADA_C108(ListUnblanceAdr,10);
    364          #endif // wk --> end
    365          
    366          #if 1 // wk @130408--> revrese dot tx
    367            U8 j,k,index=0,DATA_DIS3[40]= {0};
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x2128             MOVS     R1,#+40
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    368              U16 BlockC108[70]= {0},temp=0;
   \   0000000E   0xA80A             ADD      R0,SP,#+40
   \   00000010   0x218C             MOVS     R1,#+140
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
   \   00000016   0x2400             MOVS     R4,#+0
    369              Sig_Fiq(&PowRxchar[UNBLA_INDEX],DATA_DIS3,100,10);
   \   00000018   0x230A             MOVS     R3,#+10
   \   0000001A   0x2264             MOVS     R2,#+100
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000022   0x.... 0x....      BL       Sig_Fiq
    370              for(j=0; j<5; j++)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xE057             B.N      ??GUI_VIEW_ListQuality2_0
    371                  for(k=0; k<2; k++)
    372                  {
    373                      temp=4*k+8*j;
   \                     ??GUI_VIEW_ListQuality2_1:
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x00C2             LSLS     R2,R0,#+3
   \   00000030   0xEB12 0x0481      ADDS     R4,R2,R1, LSL #+2
    374                      index=7*k+14*j;
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x2207             MOVS     R2,#+7
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x230E             MOVS     R3,#+14
   \   0000003C   0xFB03 0xF300      MUL      R3,R3,R0
   \   00000040   0xFB02 0x3501      MLA      R5,R2,R1,R3
    375                      BlockC108[index]=0x3204;//显示数据的模式
   \   00000044   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000046   0xAA0A             ADD      R2,SP,#+40
   \   00000048   0xF243 0x2304      MOVW     R3,#+12804
   \   0000004C   0xF822 0x3015      STRH     R3,[R2, R5, LSL #+1]
    376                      BlockC108[index+3]=C108FC_W;
   \   00000050   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000052   0xAA0A             ADD      R2,SP,#+40
   \   00000054   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000058   0xF64F 0x73FF      MOVW     R3,#+65535
   \   0000005C   0x80D3             STRH     R3,[R2, #+6]
    377                      BlockC108[index+4]=0x0000;
   \   0000005E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000060   0xAA0A             ADD      R2,SP,#+40
   \   00000062   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000066   0x2300             MOVS     R3,#+0
   \   00000068   0x8113             STRH     R3,[R2, #+8]
    378                      BlockC108[index+1]=241+k*212;//X +80*j
   \   0000006A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006C   0xAA0A             ADD      R2,SP,#+40
   \   0000006E   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0x23D4             MOVS     R3,#+212
   \   00000076   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000007A   0x33F1             ADDS     R3,R3,#+241
   \   0000007C   0x8053             STRH     R3,[R2, #+2]
    379                      BlockC108[index+2]=148+j*47;//Y坐标
   \   0000007E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000080   0xAA0A             ADD      R2,SP,#+40
   \   00000082   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000086   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000088   0x232F             MOVS     R3,#+47
   \   0000008A   0xFB03 0xF300      MUL      R3,R3,R0
   \   0000008E   0x3394             ADDS     R3,R3,#+148
   \   00000090   0x8093             STRH     R3,[R2, #+4]
    380                      BlockC108[index+5]=((U16)(DATA_DIS3[temp])<<8)+((U16)DATA_DIS3[temp+1]);
   \   00000092   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000094   0xAA00             ADD      R2,SP,#+0
   \   00000096   0x5CA2             LDRB     R2,[R4, R2]
   \   00000098   0x0212             LSLS     R2,R2,#+8
   \   0000009A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000009C   0xAB00             ADD      R3,SP,#+0
   \   0000009E   0x18E3             ADDS     R3,R4,R3
   \   000000A0   0x785B             LDRB     R3,[R3, #+1]
   \   000000A2   0xFA52 0xF283      UXTAB    R2,R2,R3
   \   000000A6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A8   0xAB0A             ADD      R3,SP,#+40
   \   000000AA   0xEB13 0x0345      ADDS     R3,R3,R5, LSL #+1
   \   000000AE   0x815A             STRH     R2,[R3, #+10]
    381                      BlockC108[index+6]=((U16)(DATA_DIS3[temp+2])<<8)+((U16)DATA_DIS3[temp+3]);
   \   000000B0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B2   0xAA00             ADD      R2,SP,#+0
   \   000000B4   0x18A2             ADDS     R2,R4,R2
   \   000000B6   0x7892             LDRB     R2,[R2, #+2]
   \   000000B8   0x0212             LSLS     R2,R2,#+8
   \   000000BA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000BC   0xAB00             ADD      R3,SP,#+0
   \   000000BE   0x18E3             ADDS     R3,R4,R3
   \   000000C0   0x78DB             LDRB     R3,[R3, #+3]
   \   000000C2   0xFA52 0xF283      UXTAB    R2,R2,R3
   \   000000C6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C8   0xAB0A             ADD      R3,SP,#+40
   \   000000CA   0xEB13 0x0345      ADDS     R3,R3,R5, LSL #+1
   \   000000CE   0x819A             STRH     R2,[R3, #+12]
    382                  }
   \   000000D0   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_ListQuality2_2:
   \   000000D2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D4   0x2902             CMP      R1,#+2
   \   000000D6   0xD3A8             BCC.N    ??GUI_VIEW_ListQuality2_1
   \   000000D8   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_VIEW_ListQuality2_0:
   \   000000DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DC   0x2805             CMP      R0,#+5
   \   000000DE   0xD201             BCS.N    ??GUI_VIEW_ListQuality2_3
   \   000000E0   0x2100             MOVS     R1,#+0
   \   000000E2   0xE7F6             B.N      ??GUI_VIEW_ListQuality2_2
    383              YADA_C0(ListUnblanceAdr, BlockC108,70);
   \                     ??GUI_VIEW_ListQuality2_3:
   \   000000E4   0x2246             MOVS     R2,#+70
   \   000000E6   0xA90A             ADD      R1,SP,#+40
   \   000000E8   0xF44F 0x4000      MOV      R0,#+32768
   \   000000EC   0x.... 0x....      BL       YADA_C0
    384              YADA_C108(ListUnblanceAdr,10);
   \   000000F0   0x210A             MOVS     R1,#+10
   \   000000F2   0xF44F 0x4000      MOV      R0,#+32768
   \   000000F6   0x.... 0x....      BL       YADA_C108
    385          #endif
    386          }
   \   000000FA   0xB02D             ADD      SP,SP,#+180
   \   000000FC   0xBD30             POP      {R4,R5,PC}       ;; return
    387          
    388          /*******************************************************************************
    389          * 函  数  名      : GUI_VIEW_ListQuality
    390          * 描      述      : 谐波柱状图显示函数。可通过移位键选择三相或者谐波总次数，
    391                              上下键来选择各单一次数，并显示其电流电压值
    392          * 输      入      : 无
    393          * 返      回      : 无
    394          *
    395          * 修       改     : WK
    396          * 时       间     : 2013-03-14
    397          * 描       述     : 基于2013-03-08界面 
    398          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    399          void GUI_VIEW_HarmoGraph() 
    400          {
   \                     GUI_VIEW_HarmoGraph:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xF5AD 0x7D37      SUB      SP,SP,#+732
    401          #if 1
    402              float Graphfloat[52]= {0};
   \   00000006   0xA882             ADD      R0,SP,#+520
   \   00000008   0x21D0             MOVS     R1,#+208
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    403              U16 UHarmoBarXY[104]= {0};//26次谐波，共26*4个点
   \   0000000E   0xA84E             ADD      R0,SP,#+312
   \   00000010   0x21D0             MOVS     R1,#+208
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
    404              U16 IHarmoBarXY[104]= {0}; 
   \   00000016   0xA81A             ADD      R0,SP,#+104
   \   00000018   0x21D0             MOVS     R1,#+208
   \   0000001A   0x.... 0x....      BL       __aeabi_memclr4
    405              U8 HarmoInfoZone[][10]= {"第01-26次","第25-50次"};//WK -->
   \   0000001E   0xA815             ADD      R0,SP,#+84
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable9_5
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
    406              U16 temp,temp1;
    407              U8 HARM_DIS[8]= {0};
   \   0000002A   0xA805             ADD      R0,SP,#+20
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0xC006             STM      R0!,{R1,R2}
   \   00000032   0x3808             SUBS     R0,R0,#+8
    408          //    U16 square[16]= {14,42,16,65,91,42,93,65,414,79,416,102,414,264,416,287}; //光标位置
    409              
    410              U16 HarmoUI[28]= {0x2004,310,78,0xffff,0x0000,0x0000,HarmoGraphUorder,  //0x03ae 表主体背景色
    411                                0x2004,310,265,0xffff,0x0000,0x0000,HarmoGraphIorder,
    412                                0x3304,0x01FC,0x004E,0xffff,0x0000,0x0000,0x0000,
    413                                0x3304,0x0200,0x0108,0xffff,0x0000
    414                               };//根据放大倍数控制格式
   \   00000034   0xA807             ADD      R0,SP,#+28
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable9_6
   \   0000003A   0x2238             MOVS     R2,#+56
   \   0000003C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0xF8AD 0x0028      STRH     R0,[SP, #+40]
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF8AD 0x0036      STRH     R0,[SP, #+54]
    415              /* wk --> 影响返回主界面，原因待进一步分析中。。。--> 已解决 */
    416              // wk @130408--> revrese dot old
    417          //    HarmoUI[19]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-604+Harmo_INDEX])<<8)
    418          //                +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-603+Harmo_INDEX]);
    419          //    HarmoUI[20]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-602+Harmo_INDEX])<<8)
    420          //                +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphUorder-601+Harmo_INDEX]);
    421          //    HarmoUI[26]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-404+Harmo_INDEX])<<8)
    422          //                +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-403+Harmo_INDEX]);
    423          //    HarmoUI[27]=((U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-402+Harmo_INDEX])<<8)
    424          //                +(U16)(PowRxchar[600*HarmoGraphPhase+4*HarmoGraphIorder-401+Harmo_INDEX]);
    425          //    ChartoFloat(&PowRxchar[600*(HarmoGraphPhase-1)+(HarmoGraphRange-1)*96+Harmo_INDEX], Graphfloat,26,1000);//转换电压数据，！放大倍数
    426          //    ChartoFloat(&PowRxchar[600*(HarmoGraphPhase-1)+(HarmoGraphRange-1)*96+Harmo_INDEX+200], &Graphfloat[26],26,1000);//转换电流数据
    427              // wk @130408--> revrese dot tx
    428              temp=600*HarmoGraphPhase+4*HarmoGraphUorder+Harmo_INDEX;
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0xF44F 0x7116      MOV      R1,#+600
   \   0000005E   0x.... 0x....      LDR.W    R2,??DataTable9_7
   \   00000062   0x7812             LDRB     R2,[R2, #+0]
   \   00000064   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000066   0x0092             LSLS     R2,R2,#+2
   \   00000068   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000006C   0xF110 0x04FC      ADDS     R4,R0,#+252
    429              Sig_Fiq(&PowRxchar[temp-604],HARM_DIS,100,1);
   \   00000070   0x2301             MOVS     R3,#+1
   \   00000072   0x2264             MOVS     R2,#+100
   \   00000074   0xA905             ADD      R1,SP,#+20
   \   00000076   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   0000007C   0x1820             ADDS     R0,R4,R0
   \   0000007E   0xF5B0 0x7017      SUBS     R0,R0,#+604
   \   00000082   0x.... 0x....      BL       Sig_Fiq
    430              Sig_Fiq(&PowRxchar[temp-404],&HARM_DIS[4],10,1);
   \   00000086   0x2301             MOVS     R3,#+1
   \   00000088   0x220A             MOVS     R2,#+10
   \   0000008A   0xA906             ADD      R1,SP,#+24
   \   0000008C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   00000092   0x1820             ADDS     R0,R4,R0
   \   00000094   0xF5B0 0x70CA      SUBS     R0,R0,#+404
   \   00000098   0x.... 0x....      BL       Sig_Fiq
    431              HarmoUI[19]=((U16)(HARM_DIS[0])<<8)
    432                          +(U16)(HARM_DIS[1]);
   \   0000009C   0xF89D 0x0014      LDRB     R0,[SP, #+20]
   \   000000A0   0x0200             LSLS     R0,R0,#+8
   \   000000A2   0xF89D 0x1015      LDRB     R1,[SP, #+21]
   \   000000A6   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000000AA   0xF8AD 0x0042      STRH     R0,[SP, #+66]
    433              HarmoUI[20]=((U16)(HARM_DIS[2])<<8)
    434                          +(U16)(HARM_DIS[3]);
   \   000000AE   0xF89D 0x0016      LDRB     R0,[SP, #+22]
   \   000000B2   0x0200             LSLS     R0,R0,#+8
   \   000000B4   0xF89D 0x1017      LDRB     R1,[SP, #+23]
   \   000000B8   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000000BC   0xF8AD 0x0044      STRH     R0,[SP, #+68]
    435              HarmoUI[26]=((U16)(HARM_DIS[4])<<8)
    436                          +(U16)(HARM_DIS[5]);
   \   000000C0   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   000000C4   0x0200             LSLS     R0,R0,#+8
   \   000000C6   0xF89D 0x1019      LDRB     R1,[SP, #+25]
   \   000000CA   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000000CE   0xF8AD 0x0050      STRH     R0,[SP, #+80]
    437              HarmoUI[27]=((U16)(HARM_DIS[6])<<8)
    438                          +(U16)(HARM_DIS[7]);
   \   000000D2   0xF89D 0x001A      LDRB     R0,[SP, #+26]
   \   000000D6   0x0200             LSLS     R0,R0,#+8
   \   000000D8   0xF89D 0x101B      LDRB     R1,[SP, #+27]
   \   000000DC   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000000E0   0xF8AD 0x0052      STRH     R0,[SP, #+82]
    439              temp1=600*(HarmoGraphPhase-1)+(HarmoGraphRange-1)*96+Harmo_INDEX;
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   000000E8   0x7800             LDRB     R0,[R0, #+0]
   \   000000EA   0xF44F 0x7116      MOV      R1,#+600
   \   000000EE   0x.... 0x....      LDR.W    R2,??DataTable9_10
   \   000000F2   0x7812             LDRB     R2,[R2, #+0]
   \   000000F4   0x2360             MOVS     R3,#+96
   \   000000F6   0x435A             MULS     R2,R3,R2
   \   000000F8   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000FC   0xF5B0 0x74DE      SUBS     R4,R0,#+444
    440              ChartoFloat(&PowRxchar[temp1], Graphfloat,26,10000);//转换电压数据，！放大倍数
   \   00000100   0xF242 0x7310      MOVW     R3,#+10000
   \   00000104   0x221A             MOVS     R2,#+26
   \   00000106   0xA982             ADD      R1,SP,#+520
   \   00000108   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   0000010E   0x1820             ADDS     R0,R4,R0
   \   00000110   0x.... 0x....      BL       ChartoFloat
    441              ChartoFloat(&PowRxchar[temp1+200], &Graphfloat[26],26,10000);//转换电流数据
   \   00000114   0xF242 0x7310      MOVW     R3,#+10000
   \   00000118   0x221A             MOVS     R2,#+26
   \   0000011A   0xA99C             ADD      R1,SP,#+624
   \   0000011C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   00000122   0x1820             ADDS     R0,R4,R0
   \   00000124   0x30C8             ADDS     R0,R0,#+200
   \   00000126   0x.... 0x....      BL       ChartoFloat
    442              // wk @130408--> revrese dot end
    443              
    444              /* wk --> end */
    445              //电压范围0~300,分三级显示0~3.0,3.0~300
    446              //循环构建柱状图的数组，每一个数据转换成矩形的（Xe，Ye）（Xs，Ys）
    447              for (U16 lcv_uho=0; lcv_uho < 26; lcv_uho++)
   \   0000012A   0x2400             MOVS     R4,#+0
   \   0000012C   0xE03A             B.N      ??GUI_VIEW_HarmoGraph_0
    448              {
    449                  UHarmoBarXY[4*lcv_uho]=91+20*lcv_uho;//Xe
    450                  if (Graphfloat[lcv_uho] <= 3 )//幅值小于2.4V
    451                  {
    452                      UHarmoBarXY[4*lcv_uho+1]=(U16)(248.0-Graphfloat[lcv_uho] *14.667);
    453                  }
    454                  else if(Graphfloat[lcv_uho]  > 3 && Graphfloat[lcv_uho] < 30)
    455                  {
    456                      UHarmoBarXY[4*lcv_uho+1]=(U16)(204.0-(Graphfloat[lcv_uho] -3.0)*1.63);
    457                  }
    458                  else if (Graphfloat[lcv_uho] >= 30)
   \                     ??GUI_VIEW_HarmoGraph_1:
   \   0000012E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000130   0xA882             ADD      R0,SP,#+520
   \   00000132   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable9_11  ;; 0x41f00000
   \   0000013A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000013E   0xD81E             BHI.N    ??GUI_VIEW_HarmoGraph_2
    459                  {
    460                      UHarmoBarXY[4*lcv_uho+1]=(U16)(160.0-(Graphfloat[lcv_uho] -30)*0.163);
   \   00000140   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000142   0x00A0             LSLS     R0,R4,#+2
   \   00000144   0xA94E             ADD      R1,SP,#+312
   \   00000146   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   0000014A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000014C   0xA882             ADD      R0,SP,#+520
   \   0000014E   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable9_12  ;; 0xc1f00000
   \   00000156   0x.... 0x....      BL       __aeabi_fadd
   \   0000015A   0x.... 0x....      BL       __aeabi_f2d
   \   0000015E   0x.... 0x....      LDR.W    R2,??DataTable9_13  ;; 0x1a9fbe77
   \   00000162   0x.... 0x....      LDR.W    R3,??DataTable9_14  ;; 0x3fc4dd2f
   \   00000166   0x.... 0x....      BL       __aeabi_dmul
   \   0000016A   0x0002             MOVS     R2,R0
   \   0000016C   0x000B             MOVS     R3,R1
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable9_15  ;; 0x40640000
   \   00000174   0x.... 0x....      BL       __aeabi_dsub
   \   00000178   0x.... 0x....      BL       __aeabi_d2iz
   \   0000017C   0x8068             STRH     R0,[R5, #+2]
    461                  }
    462                  UHarmoBarXY[4*lcv_uho+2]=104+20*lcv_uho;//Xs
   \                     ??GUI_VIEW_HarmoGraph_2:
   \   0000017E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000180   0x00A0             LSLS     R0,R4,#+2
   \   00000182   0xA94E             ADD      R1,SP,#+312
   \   00000184   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000188   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000018A   0x2114             MOVS     R1,#+20
   \   0000018C   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000190   0x3168             ADDS     R1,R1,#+104
   \   00000192   0x8081             STRH     R1,[R0, #+4]
    463                  UHarmoBarXY[4*lcv_uho+3]=248;//Ys
   \   00000194   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000196   0x00A0             LSLS     R0,R4,#+2
   \   00000198   0xA94E             ADD      R1,SP,#+312
   \   0000019A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000019E   0x21F8             MOVS     R1,#+248
   \   000001A0   0x80C1             STRH     R1,[R0, #+6]
   \   000001A2   0x1C64             ADDS     R4,R4,#+1
   \                     ??GUI_VIEW_HarmoGraph_0:
   \   000001A4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001A6   0x2C1A             CMP      R4,#+26
   \   000001A8   0xD261             BCS.N    ??GUI_VIEW_HarmoGraph_3
   \   000001AA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001AC   0xA84E             ADD      R0,SP,#+312
   \   000001AE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001B0   0x2114             MOVS     R1,#+20
   \   000001B2   0xFB01 0xF104      MUL      R1,R1,R4
   \   000001B6   0x315B             ADDS     R1,R1,#+91
   \   000001B8   0xF820 0x1034      STRH     R1,[R0, R4, LSL #+3]
   \   000001BC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001BE   0xA882             ADD      R0,SP,#+520
   \   000001C0   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable9_16  ;; 0x40400001
   \   000001C8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CC   0xD21B             BCS.N    ??GUI_VIEW_HarmoGraph_4
   \   000001CE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001D0   0x00A0             LSLS     R0,R4,#+2
   \   000001D2   0xA94E             ADD      R1,SP,#+312
   \   000001D4   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   000001D8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001DA   0xA882             ADD      R0,SP,#+520
   \   000001DC   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000001E0   0x.... 0x....      BL       __aeabi_f2d
   \   000001E4   0x.... 0x....      LDR.W    R2,??DataTable9_17  ;; 0x624dd2f
   \   000001E8   0x.... 0x....      LDR.W    R3,??DataTable9_18  ;; 0x402d5581
   \   000001EC   0x.... 0x....      BL       __aeabi_dmul
   \   000001F0   0x0002             MOVS     R2,R0
   \   000001F2   0x000B             MOVS     R3,R1
   \   000001F4   0x2000             MOVS     R0,#+0
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable9_19  ;; 0x406f0000
   \   000001FA   0x.... 0x....      BL       __aeabi_dsub
   \   000001FE   0x.... 0x....      BL       __aeabi_d2iz
   \   00000202   0x8068             STRH     R0,[R5, #+2]
   \   00000204   0xE7BB             B.N      ??GUI_VIEW_HarmoGraph_2
   \                     ??GUI_VIEW_HarmoGraph_4:
   \   00000206   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000208   0xA882             ADD      R0,SP,#+520
   \   0000020A   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable9_16  ;; 0x40400001
   \   00000212   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000216   0xD88A             BHI.N    ??GUI_VIEW_HarmoGraph_1
   \   00000218   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000021A   0xA882             ADD      R0,SP,#+520
   \   0000021C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable9_11  ;; 0x41f00000
   \   00000224   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000228   0xF4BF 0xAF81      BCS.W    ??GUI_VIEW_HarmoGraph_1
   \   0000022C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000022E   0x00A0             LSLS     R0,R4,#+2
   \   00000230   0xA94E             ADD      R1,SP,#+312
   \   00000232   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   00000236   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000238   0xA882             ADD      R0,SP,#+520
   \   0000023A   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000023E   0x.... 0x....      BL       __aeabi_f2d
   \   00000242   0x2200             MOVS     R2,#+0
   \   00000244   0x.... 0x....      LDR.W    R3,??DataTable9_20  ;; 0xc0080000
   \   00000248   0x.... 0x....      BL       __aeabi_dadd
   \   0000024C   0x.... 0x....      LDR.W    R2,??DataTable9_21  ;; 0xe147ae14
   \   00000250   0x.... 0x....      LDR.W    R3,??DataTable9_22  ;; 0x3ffa147a
   \   00000254   0x.... 0x....      BL       __aeabi_dmul
   \   00000258   0x0002             MOVS     R2,R0
   \   0000025A   0x000B             MOVS     R3,R1
   \   0000025C   0x2000             MOVS     R0,#+0
   \   0000025E   0x.... 0x....      LDR.W    R1,??DataTable9_23  ;; 0x40698000
   \   00000262   0x.... 0x....      BL       __aeabi_dsub
   \   00000266   0x.... 0x....      BL       __aeabi_d2iz
   \   0000026A   0x8068             STRH     R0,[R5, #+2]
   \   0000026C   0xE787             B.N      ??GUI_VIEW_HarmoGraph_2
    464              }
    465              //电流范围0~20A，分3级，0~0.2A，0.2~2A，2~20A
    466              for ( U16 lcv_iho=0; lcv_iho <26; lcv_iho++)
   \                     ??GUI_VIEW_HarmoGraph_3:
   \   0000026E   0x2400             MOVS     R4,#+0
   \   00000270   0xE03D             B.N      ??GUI_VIEW_HarmoGraph_5
    467              {
    468                  IHarmoBarXY[4*lcv_iho]=91+20*lcv_iho;//Xe
    469                  if (Graphfloat[lcv_iho+26]  <= 0.2 )//幅值小于0.2A
    470                  {
    471                      IHarmoBarXY[4*lcv_iho+1]=(U16)(434-Graphfloat[lcv_iho+26] *220);
    472                  }
    473                  else if (Graphfloat[lcv_iho+26] > 0.2 && Graphfloat[lcv_iho+26] < 2)
    474                  {
    475                      IHarmoBarXY[4*lcv_iho+1]=(U16)(390-(Graphfloat[lcv_iho+26] -0.2)*24.444);
    476                  }
    477                  else if (Graphfloat[lcv_iho+26] >= 2)
   \                     ??GUI_VIEW_HarmoGraph_6:
   \   00000272   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000274   0xA882             ADD      R0,SP,#+520
   \   00000276   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   0000027A   0x6E80             LDR      R0,[R0, #+104]
   \   0000027C   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000280   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000284   0xD81F             BHI.N    ??GUI_VIEW_HarmoGraph_7
    478                  {
    479                      IHarmoBarXY[4*lcv_iho+1]=(U16)(346-(Graphfloat[lcv_iho+26] -2)*2.444);
   \   00000286   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000288   0x00A0             LSLS     R0,R4,#+2
   \   0000028A   0xA91A             ADD      R1,SP,#+104
   \   0000028C   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   00000290   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000292   0xA882             ADD      R0,SP,#+520
   \   00000294   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000298   0x6E80             LDR      R0,[R0, #+104]
   \   0000029A   0xF05F 0x4140      MOVS     R1,#-1073741824
   \   0000029E   0x.... 0x....      BL       __aeabi_fadd
   \   000002A2   0x.... 0x....      BL       __aeabi_f2d
   \   000002A6   0x.... 0x....      LDR.W    R2,??DataTable9_24  ;; 0xdf3b645a
   \   000002AA   0x.... 0x....      LDR.W    R3,??DataTable9_25  ;; 0x40038d4f
   \   000002AE   0x.... 0x....      BL       __aeabi_dmul
   \   000002B2   0x0002             MOVS     R2,R0
   \   000002B4   0x000B             MOVS     R3,R1
   \   000002B6   0x2000             MOVS     R0,#+0
   \   000002B8   0x.... 0x....      LDR.W    R1,??DataTable9_26  ;; 0x4075a000
   \   000002BC   0x.... 0x....      BL       __aeabi_dsub
   \   000002C0   0x.... 0x....      BL       __aeabi_d2iz
   \   000002C4   0x8068             STRH     R0,[R5, #+2]
    480                  }
    481                  IHarmoBarXY[4*lcv_iho+2]=104+20*lcv_iho;
   \                     ??GUI_VIEW_HarmoGraph_7:
   \   000002C6   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002C8   0x00A0             LSLS     R0,R4,#+2
   \   000002CA   0xA91A             ADD      R1,SP,#+104
   \   000002CC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000002D0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002D2   0x2114             MOVS     R1,#+20
   \   000002D4   0xFB01 0xF104      MUL      R1,R1,R4
   \   000002D8   0x3168             ADDS     R1,R1,#+104
   \   000002DA   0x8081             STRH     R1,[R0, #+4]
    482                  IHarmoBarXY[4*lcv_iho+3]=434;
   \   000002DC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002DE   0x00A0             LSLS     R0,R4,#+2
   \   000002E0   0xA91A             ADD      R1,SP,#+104
   \   000002E2   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000002E6   0xF44F 0x71D9      MOV      R1,#+434
   \   000002EA   0x80C1             STRH     R1,[R0, #+6]
   \   000002EC   0x1C64             ADDS     R4,R4,#+1
   \                     ??GUI_VIEW_HarmoGraph_5:
   \   000002EE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002F0   0x2C1A             CMP      R4,#+26
   \   000002F2   0xD261             BCS.N    ??GUI_VIEW_HarmoGraph_8
   \   000002F4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002F6   0xA81A             ADD      R0,SP,#+104
   \   000002F8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000002FA   0x2114             MOVS     R1,#+20
   \   000002FC   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000300   0x315B             ADDS     R1,R1,#+91
   \   00000302   0xF820 0x1034      STRH     R1,[R0, R4, LSL #+3]
   \   00000306   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000308   0xA882             ADD      R0,SP,#+520
   \   0000030A   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   0000030E   0x6E80             LDR      R0,[R0, #+104]
   \   00000310   0x.... 0x....      LDR.W    R1,??DataTable9_27  ;; 0x3e4ccccd
   \   00000314   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000318   0xD216             BCS.N    ??GUI_VIEW_HarmoGraph_9
   \   0000031A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000031C   0x00A0             LSLS     R0,R4,#+2
   \   0000031E   0xA91A             ADD      R1,SP,#+104
   \   00000320   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   00000324   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000326   0xA882             ADD      R0,SP,#+520
   \   00000328   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   0000032C   0x6E80             LDR      R0,[R0, #+104]
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable9_28  ;; 0x435c0000
   \   00000332   0x.... 0x....      BL       __aeabi_fmul
   \   00000336   0x0001             MOVS     R1,R0
   \   00000338   0x.... 0x....      LDR.W    R0,??DataTable9_29  ;; 0x43d90000
   \   0000033C   0x.... 0x....      BL       __aeabi_fsub
   \   00000340   0x.... 0x....      BL       __aeabi_f2iz
   \   00000344   0x8068             STRH     R0,[R5, #+2]
   \   00000346   0xE7BE             B.N      ??GUI_VIEW_HarmoGraph_7
   \                     ??GUI_VIEW_HarmoGraph_9:
   \   00000348   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000034A   0xA882             ADD      R0,SP,#+520
   \   0000034C   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000350   0x6E80             LDR      R0,[R0, #+104]
   \   00000352   0x.... 0x....      LDR.W    R1,??DataTable9_27  ;; 0x3e4ccccd
   \   00000356   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000035A   0xD88A             BHI.N    ??GUI_VIEW_HarmoGraph_6
   \   0000035C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000035E   0xA882             ADD      R0,SP,#+520
   \   00000360   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000364   0x6E80             LDR      R0,[R0, #+104]
   \   00000366   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000036A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000036E   0xF4BF 0xAF80      BCS.W    ??GUI_VIEW_HarmoGraph_6
   \   00000372   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000374   0x00A0             LSLS     R0,R4,#+2
   \   00000376   0xA91A             ADD      R1,SP,#+104
   \   00000378   0xEB11 0x0540      ADDS     R5,R1,R0, LSL #+1
   \   0000037C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000037E   0xA882             ADD      R0,SP,#+520
   \   00000380   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   00000384   0x6E80             LDR      R0,[R0, #+104]
   \   00000386   0x.... 0x....      BL       __aeabi_f2d
   \   0000038A   0x.... 0x....      LDR.W    R2,??DataTable9_30  ;; 0x9999999a
   \   0000038E   0x.... 0x....      LDR.W    R3,??DataTable9_31  ;; 0xbfc99999
   \   00000392   0x.... 0x....      BL       __aeabi_dadd
   \   00000396   0x.... 0x....      LDR.W    R2,??DataTable9_32  ;; 0xfbe76c8b
   \   0000039A   0x.... 0x....      LDR.W    R3,??DataTable9_33  ;; 0x403871a9
   \   0000039E   0x.... 0x....      BL       __aeabi_dmul
   \   000003A2   0x0002             MOVS     R2,R0
   \   000003A4   0x000B             MOVS     R3,R1
   \   000003A6   0x2000             MOVS     R0,#+0
   \   000003A8   0x.... 0x....      LDR.W    R1,??DataTable9_34  ;; 0x40786000
   \   000003AC   0x.... 0x....      BL       __aeabi_dsub
   \   000003B0   0x.... 0x....      BL       __aeabi_d2iz
   \   000003B4   0x8068             STRH     R0,[R5, #+2]
   \   000003B6   0xE786             B.N      ??GUI_VIEW_HarmoGraph_7
    483              }
    484              
    485              YADA_71(MenuViewHarmoGraph1,18,39,63,67,18,39);  // wk --> ?
   \                     ??GUI_VIEW_HarmoGraph_8:
   \   000003B8   0x2027             MOVS     R0,#+39
   \   000003BA   0x9002             STR      R0,[SP, #+8]
   \   000003BC   0x2012             MOVS     R0,#+18
   \   000003BE   0x9001             STR      R0,[SP, #+4]
   \   000003C0   0x2043             MOVS     R0,#+67
   \   000003C2   0x9000             STR      R0,[SP, #+0]
   \   000003C4   0x233F             MOVS     R3,#+63
   \   000003C6   0x2227             MOVS     R2,#+39
   \   000003C8   0x2112             MOVS     R1,#+18
   \   000003CA   0x201B             MOVS     R0,#+27
   \   000003CC   0x.... 0x....      BL       YADA_71
    486              YADA_71(MenuViewHarmoGraph1,95,39,191,69,95,39);  // wk --> 清楚上一次显示的相位值
   \   000003D0   0x2027             MOVS     R0,#+39
   \   000003D2   0x9002             STR      R0,[SP, #+8]
   \   000003D4   0x205F             MOVS     R0,#+95
   \   000003D6   0x9001             STR      R0,[SP, #+4]
   \   000003D8   0x2045             MOVS     R0,#+69
   \   000003DA   0x9000             STR      R0,[SP, #+0]
   \   000003DC   0x23BF             MOVS     R3,#+191
   \   000003DE   0x2227             MOVS     R2,#+39
   \   000003E0   0x215F             MOVS     R1,#+95
   \   000003E2   0x201B             MOVS     R0,#+27
   \   000003E4   0x.... 0x....      BL       YADA_71
    487          
    488              YADA_98(165,40,0x22,0x81,0x02,0xffff,0x0000,HarmoInfoZone[HarmoGraphRange-1],0); //显示谐波区间
   \   000003E8   0x2000             MOVS     R0,#+0
   \   000003EA   0x9004             STR      R0,[SP, #+16]
   \   000003EC   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   000003F0   0x7800             LDRB     R0,[R0, #+0]
   \   000003F2   0x210A             MOVS     R1,#+10
   \   000003F4   0xAA15             ADD      R2,SP,#+84
   \   000003F6   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000003FA   0x380A             SUBS     R0,R0,#+10
   \   000003FC   0x9003             STR      R0,[SP, #+12]
   \   000003FE   0x2000             MOVS     R0,#+0
   \   00000400   0x9002             STR      R0,[SP, #+8]
   \   00000402   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000406   0x9001             STR      R0,[SP, #+4]
   \   00000408   0x2002             MOVS     R0,#+2
   \   0000040A   0x9000             STR      R0,[SP, #+0]
   \   0000040C   0x2381             MOVS     R3,#+129
   \   0000040E   0x2222             MOVS     R2,#+34
   \   00000410   0x2128             MOVS     R1,#+40
   \   00000412   0x20A5             MOVS     R0,#+165
   \   00000414   0x.... 0x....      BL       YADA_98
    489              YADA_98(95,40,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[HarmoGraphPhase-1],0);//显示相信息A、B、C. // HarmoGraphPhase默认值是 1
   \   00000418   0x2000             MOVS     R0,#+0
   \   0000041A   0x9004             STR      R0,[SP, #+16]
   \   0000041C   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000420   0x7800             LDRB     R0,[R0, #+0]
   \   00000422   0x.... 0x....      LDR.W    R1,??DataTable9_35
   \   00000426   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   0000042A   0x3808             SUBS     R0,R0,#+8
   \   0000042C   0x9003             STR      R0,[SP, #+12]
   \   0000042E   0x2000             MOVS     R0,#+0
   \   00000430   0x9002             STR      R0,[SP, #+8]
   \   00000432   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000436   0x9001             STR      R0,[SP, #+4]
   \   00000438   0x2002             MOVS     R0,#+2
   \   0000043A   0x9000             STR      R0,[SP, #+0]
   \   0000043C   0x2381             MOVS     R3,#+129
   \   0000043E   0x2222             MOVS     R2,#+34
   \   00000440   0x2128             MOVS     R1,#+40
   \   00000442   0x205F             MOVS     R0,#+95
   \   00000444   0x.... 0x....      BL       YADA_98
    490              
    491              YADA_C0(HarmoGraphInfoAdr,HarmoUI,28);
   \   00000448   0x221C             MOVS     R2,#+28
   \   0000044A   0xA907             ADD      R1,SP,#+28
   \   0000044C   0xF240 0x7092      MOVW     R0,#+1938
   \   00000450   0x.... 0x....      BL       YADA_C0
    492              YADA_C108(HarmoGraphInfoAdr,4);
   \   00000454   0x2104             MOVS     R1,#+4
   \   00000456   0xF240 0x7092      MOVW     R0,#+1938
   \   0000045A   0x.... 0x....      BL       YADA_C108
    493              delay_ms(5);
   \   0000045E   0x2005             MOVS     R0,#+5
   \   00000460   0x.... 0x....      BL       delay_ms
    494              YADA_40(0xf800,0x0000);
   \   00000464   0x2100             MOVS     R1,#+0
   \   00000466   0xF44F 0x4078      MOV      R0,#+63488
   \   0000046A   0x.... 0x....      BL       YADA_40
    495              YADA_71(MenuViewHarmoGraph1,85,114,616,251,85,114);//刷新电压柱状图显示区域
   \   0000046E   0x2072             MOVS     R0,#+114
   \   00000470   0x9002             STR      R0,[SP, #+8]
   \   00000472   0x2055             MOVS     R0,#+85
   \   00000474   0x9001             STR      R0,[SP, #+4]
   \   00000476   0x20FB             MOVS     R0,#+251
   \   00000478   0x9000             STR      R0,[SP, #+0]
   \   0000047A   0xF44F 0x731A      MOV      R3,#+616
   \   0000047E   0x2272             MOVS     R2,#+114
   \   00000480   0x2155             MOVS     R1,#+85
   \   00000482   0x201B             MOVS     R0,#+27
   \   00000484   0x.... 0x....      BL       YADA_71
    496              YADA_5B(UHarmoBarXY,104);//画电压柱状图
   \   00000488   0x2168             MOVS     R1,#+104
   \   0000048A   0xA84E             ADD      R0,SP,#+312
   \   0000048C   0x.... 0x....      BL       YADA_5B
    497              delay_ms(5);
   \   00000490   0x2005             MOVS     R0,#+5
   \   00000492   0x.... 0x....      BL       delay_ms
    498              YADA_71(MenuViewHarmoGraph1,85,300,616,480,85,300);//刷新电流柱状图显示区域
   \   00000496   0xF44F 0x7096      MOV      R0,#+300
   \   0000049A   0x9002             STR      R0,[SP, #+8]
   \   0000049C   0x2055             MOVS     R0,#+85
   \   0000049E   0x9001             STR      R0,[SP, #+4]
   \   000004A0   0xF44F 0x70F0      MOV      R0,#+480
   \   000004A4   0x9000             STR      R0,[SP, #+0]
   \   000004A6   0xF44F 0x731A      MOV      R3,#+616
   \   000004AA   0xF44F 0x7296      MOV      R2,#+300
   \   000004AE   0x2155             MOVS     R1,#+85
   \   000004B0   0x201B             MOVS     R0,#+27
   \   000004B2   0x.... 0x....      BL       YADA_71
    499              YADA_5B(IHarmoBarXY,104);//画电流柱状图
   \   000004B6   0x2168             MOVS     R1,#+104
   \   000004B8   0xA81A             ADD      R0,SP,#+104
   \   000004BA   0x.... 0x....      BL       YADA_5B
    500              delay_ms(5);
   \   000004BE   0x2005             MOVS     R0,#+5
   \   000004C0   0x.... 0x....      BL       delay_ms
    501          #endif    // #if 1
    502          }
   \   000004C4   0xF50D 0x7D37      ADD      SP,SP,#+732
   \   000004C8   0xBD30             POP      {R4,R5,PC}       ;; return
    503          
    504          /*******************************************************************************
    505          * 函  数  名      : GUI_VIEW_HarmoList
    506          * 描      述      : 谐波列表显示函数。可通过移位键选择三相或者谐波总次数
    507          * 输      入      : 无
    508          * 返      回      : 无
    509          *
    510          * 修       改     : WK
    511          * 时       间     : 2013-03-14
    512          * 描       述     : 基于2013-03-08界面 
    513          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    514          void GUI_VIEW_HarmoList()
    515          {
   \                     GUI_VIEW_HarmoList:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xF5AD 0x7D6E      SUB      SP,SP,#+952
    516          #if 0 // wk @130408--> revrese dot old
    517              U16 HRU16[100]= {0};
    518              U16 ListC108[182]= {0},IndexInit;
    519              float Listfloat[50]= {0};
    520                  
    521              YADA_98(58,42,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[HarmoListPhase-1],0);//显示相信息A、B、C.
    522              delay_ms(5);
    523              if(HarmoListUorI==1)
    524              {
    525                  YADA_98(205,42,0x22,0x81,0x02,0xffff,0x0000,"U",0);
    526              }
    527              else
    528              {
    529                  YADA_98(205,42,0x22,0x81,0x02,0xffff,0x0000,"I",0);
    530              }
    531                  
    532              delay_ms(5);
    533              if(HarmoListAmporRatio==1)//显示幅值时不需要转换
    534              {
    535                  YADA_98(330,41,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[3],0); // wk @130409 -->显示幅值
    536                  IndexInit=(HarmoListPhase-1)*600+(HarmoListUorI-1)*200+(HarmoListRange-1)*96+Harmo_INDEX;
    537                  for(U8 LorR=0; LorR<2; LorR++) //先左边列后右边列
    538                  {
    539                      for(U8 i=0; i<13; i++)
    540                      {
    541                          ListC108[7*i+91*LorR]=0x3304;//显示数据的模式
    542                          ListC108[7*i+91*LorR+1]=100+338*LorR;//显示左边列谐波数据的X为82,右边列谐波数据X为438
    543                          ListC108[7*i+91*LorR+2]=77+28*i;//Y坐标
    544                          ListC108[7*i+91*LorR+3]=0xffff;
    545                          ListC108[7*i+91*LorR+4]=0x0000;
    546                          ListC108[7*i+91*LorR+5]=((U16)(PowRxchar[IndexInit+8*i+LorR*4])<<8)+((U16)PowRxchar[IndexInit+8*i+LorR*4+1]);
    547                          ListC108[7*i+91*LorR+6]=((U16)(PowRxchar[IndexInit+8*i+LorR*4+2])<<8)+((U16)PowRxchar[IndexInit+8*i+LorR*4+3]);;
    548                          //delay_ms(1);
    549                      }
    550                  }
    551              }
    552              else//显示含有率
    553              {
    554                  YADA_98(330,41,0x22,0x81,0x02,0xffff,0x0000,HarmoInfo[4],0); // wk @130409 -->显示含有效
    555                  ChartoFloat(&PowRxchar[(HarmoListPhase-1)*600+(HarmoListUorI-1)*200+Harmo_INDEX], Listfloat,50,1000);
    556                  UIValues2HR(Listfloat,HRU16);//转换50次的值，若每次转换26次，则需记录第一次的值用于算25-50次的含有率
    557                  YADA_40(0xffe0,0x0000);/*黄色前景，黑色背景*/
    558                  for(U8 LorR=0; LorR<2; LorR++)//先左边列后右边列
    559                  {
    560                      for(U8 i=0; i<13; i++)
    561                      {
    562                          ListC108[7*i+91*LorR]=0x3304;//显示数据的模式，注意从显示4位小数切换到2位小数时，必须刷新页面
    563                          ListC108[7*i+91*LorR+1]=100+338*LorR;//显示左边列谐波数据的X为82,右边列谐波数据X为438
    564                          ListC108[7*i+91*LorR+2]=77+28*i;//Y坐标
    565                          ListC108[7*i+91*LorR+3]=0xffff;
    566                          ListC108[7*i+91*LorR+4]=0x0000;
    567                          ListC108[7*i+91*LorR+5]=*(HRU16+i*4+LorR*2+(HarmoListRange-1)*48);
    568                          ListC108[7*i+91*LorR+6]=*(HRU16+i*4+LorR*2+(HarmoListRange-1)*48+1);
    569                          //delay_ms(1);
    570                      }
    571                  }
    572              }
    573          #endif
    574              
    575              U16 HRU16[100]= {0},temp,temp1;
   \   00000006   0xA8BB             ADD      R0,SP,#+748
   \   00000008   0x21C8             MOVS     R1,#+200
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    576              U16 ListC108[182]= {0},IndexInit;
   \   0000000E   0xA860             ADD      R0,SP,#+384
   \   00000010   0xF44F 0x71B6      MOV      R1,#+364
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
    577              U8 LIST_DIS[104]= {0};
   \   00000018   0xA846             ADD      R0,SP,#+280
   \   0000001A   0x2168             MOVS     R1,#+104
   \   0000001C   0x.... 0x....      BL       __aeabi_memclr4
    578              float Listfloat[50]= {0};
   \   00000020   0xA814             ADD      R0,SP,#+80
   \   00000022   0x21C8             MOVS     R1,#+200
   \   00000024   0x.... 0x....      BL       __aeabi_memclr4
    579              U8 HarmoInfoZone[][10]= {"第1-26次","第25-50次","幅 值","含有率","U","I"};
   \   00000028   0xA805             ADD      R0,SP,#+20
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000002E   0x223C             MOVS     R2,#+60
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
    580              
    581              YADA_98(58,42,0x22,0x81,0x02,0xffe0,0x0000,HarmoInfo[HarmoListPhase-1],0);//显示相信息A、B、C.
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x9004             STR      R0,[SP, #+16]
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable9_35
   \   00000042   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   00000046   0x3808             SUBS     R0,R0,#+8
   \   00000048   0x9003             STR      R0,[SP, #+12]
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x9002             STR      R0,[SP, #+8]
   \   0000004E   0xF64F 0x70E0      MOVW     R0,#+65504
   \   00000052   0x9001             STR      R0,[SP, #+4]
   \   00000054   0x2002             MOVS     R0,#+2
   \   00000056   0x9000             STR      R0,[SP, #+0]
   \   00000058   0x2381             MOVS     R3,#+129
   \   0000005A   0x2222             MOVS     R2,#+34
   \   0000005C   0x212A             MOVS     R1,#+42
   \   0000005E   0x203A             MOVS     R0,#+58
   \   00000060   0x.... 0x....      BL       YADA_98
    582              delay_us(5);
   \   00000064   0x2005             MOVS     R0,#+5
   \   00000066   0x.... 0x....      BL       delay_us
    583              YADA_98(205,42,0x22,0x81,0x02,0xffe0,0x0000,HarmoInfoZone[3+HarmoListUorI],1);
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x9004             STR      R0,[SP, #+16]
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x210A             MOVS     R1,#+10
   \   00000076   0xAA05             ADD      R2,SP,#+20
   \   00000078   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000007C   0x301E             ADDS     R0,R0,#+30
   \   0000007E   0x9003             STR      R0,[SP, #+12]
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x9002             STR      R0,[SP, #+8]
   \   00000084   0xF64F 0x70E0      MOVW     R0,#+65504
   \   00000088   0x9001             STR      R0,[SP, #+4]
   \   0000008A   0x2002             MOVS     R0,#+2
   \   0000008C   0x9000             STR      R0,[SP, #+0]
   \   0000008E   0x2381             MOVS     R3,#+129
   \   00000090   0x2222             MOVS     R2,#+34
   \   00000092   0x212A             MOVS     R1,#+42
   \   00000094   0x20CD             MOVS     R0,#+205
   \   00000096   0x.... 0x....      BL       YADA_98
    584              delay_us(5);
   \   0000009A   0x2005             MOVS     R0,#+5
   \   0000009C   0x.... 0x....      BL       delay_us
    585              YADA_98(496,41,0x22,0x81,0x02,0xffe0,0x0000,HarmoInfoZone[HarmoListRange-1],0);
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x9004             STR      R0,[SP, #+16]
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable10_3
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x210A             MOVS     R1,#+10
   \   000000AC   0xAA05             ADD      R2,SP,#+20
   \   000000AE   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000B2   0x380A             SUBS     R0,R0,#+10
   \   000000B4   0x9003             STR      R0,[SP, #+12]
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x9002             STR      R0,[SP, #+8]
   \   000000BA   0xF64F 0x70E0      MOVW     R0,#+65504
   \   000000BE   0x9001             STR      R0,[SP, #+4]
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0x9000             STR      R0,[SP, #+0]
   \   000000C4   0x2381             MOVS     R3,#+129
   \   000000C6   0x2222             MOVS     R2,#+34
   \   000000C8   0x2129             MOVS     R1,#+41
   \   000000CA   0xF44F 0x70F8      MOV      R0,#+496
   \   000000CE   0x.... 0x....      BL       YADA_98
    586              delay_us(5);
   \   000000D2   0x2005             MOVS     R0,#+5
   \   000000D4   0x.... 0x....      BL       delay_us
    587              YADA_98(330,41,0x22,0x81,0x02,0xffe0,0x0000,HarmoInfoZone[1+HarmoListAmporRatio],6);
   \   000000D8   0x2006             MOVS     R0,#+6
   \   000000DA   0x9004             STR      R0,[SP, #+16]
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x210A             MOVS     R1,#+10
   \   000000E4   0xAA05             ADD      R2,SP,#+20
   \   000000E6   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000EA   0x300A             ADDS     R0,R0,#+10
   \   000000EC   0x9003             STR      R0,[SP, #+12]
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x9002             STR      R0,[SP, #+8]
   \   000000F2   0xF64F 0x70E0      MOVW     R0,#+65504
   \   000000F6   0x9001             STR      R0,[SP, #+4]
   \   000000F8   0x2002             MOVS     R0,#+2
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0x2381             MOVS     R3,#+129
   \   000000FE   0x2222             MOVS     R2,#+34
   \   00000100   0x2129             MOVS     R1,#+41
   \   00000102   0xF44F 0x70A5      MOV      R0,#+330
   \   00000106   0x.... 0x....      BL       YADA_98
    588              if(HarmoListAmporRatio==1)//显示幅值时不需要转换
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000010E   0x7800             LDRB     R0,[R0, #+0]
   \   00000110   0x2801             CMP      R0,#+1
   \   00000112   0xF040 0x8097      BNE.W    ??GUI_VIEW_HarmoList_0
    589              {
    590                  IndexInit=(HarmoListPhase-1)*600+(HarmoListUorI-1)*200+(HarmoListRange-1)*96+Harmo_INDEX;
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   0000011A   0x7800             LDRB     R0,[R0, #+0]
   \   0000011C   0xF44F 0x7116      MOV      R1,#+600
   \   00000120   0x.... 0x....      LDR.W    R2,??DataTable10_2
   \   00000124   0x7812             LDRB     R2,[R2, #+0]
   \   00000126   0x23C8             MOVS     R3,#+200
   \   00000128   0x435A             MULS     R2,R3,R2
   \   0000012A   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable10_3
   \   00000132   0x7809             LDRB     R1,[R1, #+0]
   \   00000134   0x2260             MOVS     R2,#+96
   \   00000136   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000013A   0xF5B0 0x7021      SUBS     R0,R0,#+644
    591                  if(HarmoListUorI==1)
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000142   0x7809             LDRB     R1,[R1, #+0]
   \   00000144   0x2901             CMP      R1,#+1
   \   00000146   0xD108             BNE.N    ??GUI_VIEW_HarmoList_1
    592                  {
    593                      Sig_Fiq(&PowRxchar[IndexInit],LIST_DIS,100,26);
   \   00000148   0x231A             MOVS     R3,#+26
   \   0000014A   0x2264             MOVS     R2,#+100
   \   0000014C   0xA946             ADD      R1,SP,#+280
   \   0000014E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000150   0x....             LDR.N    R4,??DataTable8_1
   \   00000152   0x1900             ADDS     R0,R0,R4
   \   00000154   0x.... 0x....      BL       Sig_Fiq
   \   00000158   0xE007             B.N      ??GUI_VIEW_HarmoList_2
    594                  }
    595                  else
    596                  {
    597                      Sig_Fiq(&PowRxchar[IndexInit],LIST_DIS,10,26);
   \                     ??GUI_VIEW_HarmoList_1:
   \   0000015A   0x231A             MOVS     R3,#+26
   \   0000015C   0x220A             MOVS     R2,#+10
   \   0000015E   0xA946             ADD      R1,SP,#+280
   \   00000160   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000162   0x....             LDR.N    R4,??DataTable8_1
   \   00000164   0x1900             ADDS     R0,R0,R4
   \   00000166   0x.... 0x....      BL       Sig_Fiq
    598                  }
    599                  for(U8 LorR=0; LorR<2; LorR++) //先左边列后右边列
   \                     ??GUI_VIEW_HarmoList_2:
   \   0000016A   0x2100             MOVS     R1,#+0
   \   0000016C   0xE000             B.N      ??GUI_VIEW_HarmoList_3
   \                     ??GUI_VIEW_HarmoList_4:
   \   0000016E   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_HarmoList_3:
   \   00000170   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000172   0x2902             CMP      R1,#+2
   \   00000174   0xF080 0x80E8      BCS.W    ??GUI_VIEW_HarmoList_5
    600                  {
    601                      for(U8 i=0; i<13; i++)
   \   00000178   0x2200             MOVS     R2,#+0
   \   0000017A   0xE047             B.N      ??GUI_VIEW_HarmoList_6
    602                      {
    603                          temp=7*i+91*LorR;
    604                          temp1=8*i+LorR*4;
    605                          if(HarmoListUorI==1)
    606                          {
    607                              ListC108[temp]=0x3204;//显示数据的模式
    608                          }
    609                          else
    610                          {
    611                              ListC108[temp]=0x3304;//显示数据的模式
   \                     ??GUI_VIEW_HarmoList_7:
   \   0000017C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000017E   0xAC60             ADD      R4,SP,#+384
   \   00000180   0xF243 0x3504      MOVW     R5,#+13060
   \   00000184   0xF824 0x5010      STRH     R5,[R4, R0, LSL #+1]
    612                          }
    613                          ListC108[temp+1]=100+338*LorR;//显示左边列谐波数据的X为82,右边列谐波数据X为438
   \                     ??GUI_VIEW_HarmoList_8:
   \   00000188   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000018A   0xAC60             ADD      R4,SP,#+384
   \   0000018C   0xEB14 0x0440      ADDS     R4,R4,R0, LSL #+1
   \   00000190   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000192   0xF44F 0x75A9      MOV      R5,#+338
   \   00000196   0xFB05 0xF501      MUL      R5,R5,R1
   \   0000019A   0x3564             ADDS     R5,R5,#+100
   \   0000019C   0x8065             STRH     R5,[R4, #+2]
    614                          ListC108[temp+2]=77+28*i;//Y坐标
   \   0000019E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001A0   0xAC60             ADD      R4,SP,#+384
   \   000001A2   0xEB14 0x0440      ADDS     R4,R4,R0, LSL #+1
   \   000001A6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001A8   0x251C             MOVS     R5,#+28
   \   000001AA   0xFB05 0xF502      MUL      R5,R5,R2
   \   000001AE   0x354D             ADDS     R5,R5,#+77
   \   000001B0   0x80A5             STRH     R5,[R4, #+4]
    615                          ListC108[temp+3]=C108FC_W;
   \   000001B2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001B4   0xAC60             ADD      R4,SP,#+384
   \   000001B6   0xEB14 0x0440      ADDS     R4,R4,R0, LSL #+1
   \   000001BA   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000001BE   0x80E5             STRH     R5,[R4, #+6]
    616                          ListC108[temp+4]=0x0000;
   \   000001C0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001C2   0xAC60             ADD      R4,SP,#+384
   \   000001C4   0xEB14 0x0440      ADDS     R4,R4,R0, LSL #+1
   \   000001C8   0x2500             MOVS     R5,#+0
   \   000001CA   0x8125             STRH     R5,[R4, #+8]
    617                          ListC108[temp+5]=((U16)(LIST_DIS[temp1])<<8)+((U16)LIST_DIS[temp1+1]);
   \   000001CC   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000001CE   0xAC46             ADD      R4,SP,#+280
   \   000001D0   0x5D1C             LDRB     R4,[R3, R4]
   \   000001D2   0x0224             LSLS     R4,R4,#+8
   \   000001D4   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000001D6   0xAD46             ADD      R5,SP,#+280
   \   000001D8   0x195D             ADDS     R5,R3,R5
   \   000001DA   0x786D             LDRB     R5,[R5, #+1]
   \   000001DC   0xFA54 0xF485      UXTAB    R4,R4,R5
   \   000001E0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001E2   0xAD60             ADD      R5,SP,#+384
   \   000001E4   0xEB15 0x0540      ADDS     R5,R5,R0, LSL #+1
   \   000001E8   0x816C             STRH     R4,[R5, #+10]
    618                          ListC108[temp+6]=((U16)(LIST_DIS[temp1+2])<<8)+((U16)LIST_DIS[temp1+3]);;
   \   000001EA   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000001EC   0xAC46             ADD      R4,SP,#+280
   \   000001EE   0x191C             ADDS     R4,R3,R4
   \   000001F0   0x78A4             LDRB     R4,[R4, #+2]
   \   000001F2   0x0224             LSLS     R4,R4,#+8
   \   000001F4   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000001F6   0xAD46             ADD      R5,SP,#+280
   \   000001F8   0x195B             ADDS     R3,R3,R5
   \   000001FA   0x78DB             LDRB     R3,[R3, #+3]
   \   000001FC   0xFA54 0xF383      UXTAB    R3,R4,R3
   \   00000200   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000202   0xAC60             ADD      R4,SP,#+384
   \   00000204   0xEB14 0x0040      ADDS     R0,R4,R0, LSL #+1
   \   00000208   0x8183             STRH     R3,[R0, #+12]
   \   0000020A   0x1C52             ADDS     R2,R2,#+1
   \                     ??GUI_VIEW_HarmoList_6:
   \   0000020C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000020E   0x2A0D             CMP      R2,#+13
   \   00000210   0xD2AD             BCS.N    ??GUI_VIEW_HarmoList_4
   \   00000212   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000214   0x2007             MOVS     R0,#+7
   \   00000216   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000218   0x235B             MOVS     R3,#+91
   \   0000021A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000021E   0xFB00 0x3002      MLA      R0,R0,R2,R3
   \   00000222   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000224   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000226   0x008B             LSLS     R3,R1,#+2
   \   00000228   0xEB13 0x03C2      ADDS     R3,R3,R2, LSL #+3
   \   0000022C   0x.... 0x....      LDR.W    R4,??DataTable10_2
   \   00000230   0x7824             LDRB     R4,[R4, #+0]
   \   00000232   0x2C01             CMP      R4,#+1
   \   00000234   0xD1A2             BNE.N    ??GUI_VIEW_HarmoList_7
   \   00000236   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000238   0xAC60             ADD      R4,SP,#+384
   \   0000023A   0xF243 0x2504      MOVW     R5,#+12804
   \   0000023E   0xF824 0x5010      STRH     R5,[R4, R0, LSL #+1]
   \   00000242   0xE7A1             B.N      ??GUI_VIEW_HarmoList_8
    619                      }
    620                  }
    621              }
    622              else//显示含有率
    623              {
    624                  ChartoFloat(&PowRxchar[(HarmoListPhase-1)*600+(HarmoListUorI-1)*200+Harmo_INDEX], Listfloat,50,100);
   \                     ??GUI_VIEW_HarmoList_0:
   \   00000244   0x2364             MOVS     R3,#+100
   \   00000246   0x2232             MOVS     R2,#+50
   \   00000248   0xA914             ADD      R1,SP,#+80
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   0000024E   0x7800             LDRB     R0,[R0, #+0]
   \   00000250   0xF44F 0x7416      MOV      R4,#+600
   \   00000254   0x.... 0x....      LDR.W    R5,??DataTable10_2
   \   00000258   0x782D             LDRB     R5,[R5, #+0]
   \   0000025A   0x26C8             MOVS     R6,#+200
   \   0000025C   0x4375             MULS     R5,R6,R5
   \   0000025E   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   00000262   0x....             LDR.N    R4,??DataTable8_1
   \   00000264   0x1900             ADDS     R0,R0,R4
   \   00000266   0xF5B0 0x7009      SUBS     R0,R0,#+548
   \   0000026A   0x.... 0x....      BL       ChartoFloat
    625                  UIValues2HR(Listfloat,HRU16);//转换50次的值，若每次转换26次，则需记录第一次的值用于算25-50次的含有率
   \   0000026E   0xA9BB             ADD      R1,SP,#+748
   \   00000270   0xA814             ADD      R0,SP,#+80
   \   00000272   0x.... 0x....      BL       UIValues2HR
    626                  YADA_40(0xffe0,0x0000);/*黄色前景，黑色背景*/
   \   00000276   0x2100             MOVS     R1,#+0
   \   00000278   0xF64F 0x70E0      MOVW     R0,#+65504
   \   0000027C   0x.... 0x....      BL       YADA_40
    627                  for(U8 LorR=0; LorR<2; LorR++)//先左边列后右边列
   \   00000280   0x2100             MOVS     R1,#+0
   \   00000282   0xE05C             B.N      ??GUI_VIEW_HarmoList_9
    628                  {
    629                      for(U8 i=0; i<13; i++)
    630                      {
    631                          temp=7*i+91*LorR;
   \                     ??GUI_VIEW_HarmoList_10:
   \   00000284   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000286   0x2007             MOVS     R0,#+7
   \   00000288   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000028A   0x235B             MOVS     R3,#+91
   \   0000028C   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000290   0xFB00 0x3002      MLA      R0,R0,R2,R3
    632                          ListC108[temp]=0x4204;//显示数据的模式，注意从显示4位小数切换到2位小数时，必须刷新页面
   \   00000294   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000296   0xAB60             ADD      R3,SP,#+384
   \   00000298   0xF244 0x2404      MOVW     R4,#+16900
   \   0000029C   0xF823 0x4010      STRH     R4,[R3, R0, LSL #+1]
    633                          ListC108[temp+1]=100+338*LorR;//显示左边列谐波数据的X为82,右边列谐波数据X为438
   \   000002A0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002A2   0xAB60             ADD      R3,SP,#+384
   \   000002A4   0xEB13 0x0340      ADDS     R3,R3,R0, LSL #+1
   \   000002A8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002AA   0xF44F 0x74A9      MOV      R4,#+338
   \   000002AE   0xFB04 0xF401      MUL      R4,R4,R1
   \   000002B2   0x3464             ADDS     R4,R4,#+100
   \   000002B4   0x805C             STRH     R4,[R3, #+2]
    634                          ListC108[temp+2]=77+28*i;//Y坐标
   \   000002B6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002B8   0xAB60             ADD      R3,SP,#+384
   \   000002BA   0xEB13 0x0340      ADDS     R3,R3,R0, LSL #+1
   \   000002BE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000002C0   0x241C             MOVS     R4,#+28
   \   000002C2   0xFB04 0xF402      MUL      R4,R4,R2
   \   000002C6   0x344D             ADDS     R4,R4,#+77
   \   000002C8   0x809C             STRH     R4,[R3, #+4]
    635                          ListC108[temp+3]=C108FC_W;
   \   000002CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002CC   0xAB60             ADD      R3,SP,#+384
   \   000002CE   0xEB13 0x0340      ADDS     R3,R3,R0, LSL #+1
   \   000002D2   0xF64F 0x74FF      MOVW     R4,#+65535
   \   000002D6   0x80DC             STRH     R4,[R3, #+6]
    636                          ListC108[temp+4]=0x0000;
   \   000002D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002DA   0xAB60             ADD      R3,SP,#+384
   \   000002DC   0xEB13 0x0340      ADDS     R3,R3,R0, LSL #+1
   \   000002E0   0x2400             MOVS     R4,#+0
   \   000002E2   0x811C             STRH     R4,[R3, #+8]
    637                          ListC108[temp+5]=*(HRU16+i*4+LorR*2+(HarmoListRange-1)*48);
   \   000002E4   0x.... 0x....      LDR.W    R3,??DataTable10_3
   \   000002E8   0x781B             LDRB     R3,[R3, #+0]
   \   000002EA   0x2460             MOVS     R4,#+96
   \   000002EC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002EE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000002F0   0xADBB             ADD      R5,SP,#+748
   \   000002F2   0xEB15 0x05C2      ADDS     R5,R5,R2, LSL #+3
   \   000002F6   0xEB15 0x0581      ADDS     R5,R5,R1, LSL #+2
   \   000002FA   0xFB04 0x5303      MLA      R3,R4,R3,R5
   \   000002FE   0xF833 0x3C60      LDRH     R3,[R3, #-96]
   \   00000302   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000304   0xAC60             ADD      R4,SP,#+384
   \   00000306   0xEB14 0x0440      ADDS     R4,R4,R0, LSL #+1
   \   0000030A   0x8163             STRH     R3,[R4, #+10]
    638                          ListC108[temp+6]=*(HRU16+i*4+LorR*2+(HarmoListRange-1)*48+1);
   \   0000030C   0x.... 0x....      LDR.W    R3,??DataTable10_3
   \   00000310   0x781B             LDRB     R3,[R3, #+0]
   \   00000312   0x2460             MOVS     R4,#+96
   \   00000314   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000316   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000318   0xADBB             ADD      R5,SP,#+748
   \   0000031A   0xEB15 0x05C2      ADDS     R5,R5,R2, LSL #+3
   \   0000031E   0xEB15 0x0581      ADDS     R5,R5,R1, LSL #+2
   \   00000322   0xFB04 0x5303      MLA      R3,R4,R3,R5
   \   00000326   0xF833 0x3C5E      LDRH     R3,[R3, #-94]
   \   0000032A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000032C   0xAC60             ADD      R4,SP,#+384
   \   0000032E   0xEB14 0x0040      ADDS     R0,R4,R0, LSL #+1
   \   00000332   0x8183             STRH     R3,[R0, #+12]
    639                      }
   \   00000334   0x1C52             ADDS     R2,R2,#+1
   \                     ??GUI_VIEW_HarmoList_11:
   \   00000336   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000338   0x2A0D             CMP      R2,#+13
   \   0000033A   0xD3A3             BCC.N    ??GUI_VIEW_HarmoList_10
   \   0000033C   0x1C49             ADDS     R1,R1,#+1
   \                     ??GUI_VIEW_HarmoList_9:
   \   0000033E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000340   0x2902             CMP      R1,#+2
   \   00000342   0xD201             BCS.N    ??GUI_VIEW_HarmoList_5
   \   00000344   0x2200             MOVS     R2,#+0
   \   00000346   0xE7F6             B.N      ??GUI_VIEW_HarmoList_11
    640                  }
    641              }
    642              
    643              delay_ms(5);
   \                     ??GUI_VIEW_HarmoList_5:
   \   00000348   0x2005             MOVS     R0,#+5
   \   0000034A   0x.... 0x....      BL       delay_ms
    644              YADA_C0(HarmoListInfoAdr,ListC108,91);
   \   0000034E   0x225B             MOVS     R2,#+91
   \   00000350   0xA960             ADD      R1,SP,#+384
   \   00000352   0xF240 0x6026      MOVW     R0,#+1574
   \   00000356   0x.... 0x....      BL       YADA_C0
    645              YADA_C108(HarmoListInfoAdr,13);
   \   0000035A   0x210D             MOVS     R1,#+13
   \   0000035C   0xF240 0x6026      MOVW     R0,#+1574
   \   00000360   0x.... 0x....      BL       YADA_C108
    646              delay_ms(5);
   \   00000364   0x2005             MOVS     R0,#+5
   \   00000366   0x.... 0x....      BL       delay_ms
    647              YADA_C0(HarmoListInfoAdr+182,&ListC108[91],91);
   \   0000036A   0x225B             MOVS     R2,#+91
   \   0000036C   0xA98D             ADD      R1,SP,#+564
   \   0000036E   0x1C89             ADDS     R1,R1,#+2
   \   00000370   0xF240 0x60DC      MOVW     R0,#+1756
   \   00000374   0x.... 0x....      BL       YADA_C0
    648              YADA_C108(HarmoListInfoAdr+182,13);
   \   00000378   0x210D             MOVS     R1,#+13
   \   0000037A   0xF240 0x60DC      MOVW     R0,#+1756
   \   0000037E   0x.... 0x....      BL       YADA_C108
    649              delay_ms(5);
   \   00000382   0x2005             MOVS     R0,#+5
   \   00000384   0x.... 0x....      BL       delay_ms
    650          }
   \   00000388   0xF50D 0x7D6E      ADD      SP,SP,#+952
   \   0000038C   0xBD70             POP      {R4-R6,PC}       ;; return
    651          
    652          /*******************************************************************************
    653          * 函  数  名      : linemark
    654          * 描      述      : 压电流标注函数。显示通过U_I判断电压\电流有效值
    655          * 输      入      : Y_COORD为Y坐标；U_I=0，则表示标注电压，U_I=1，则表示标注电流，
    656          * 返      回      : 无
    657          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    658          void linemark(U16 Y_COORD, U16 UorI)
    659          {
   \                     linemark:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB094             SUB      SP,SP,#+80
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    660          #if 0  // wk @130405-->修改显示位数之前
    661              U16 C108Dat[21]= {0};
    662              U8 UORI[][2]= {"V","A"};
    663              for(U8 k=0; k<3; k++)
    664              {
    665                  C108Dat[7*k + 0] = 0x3403;//P  显示数据的模式
    666                  C108Dat[7*k + 1] = 118+200*k;//显示左边列谐波数据的X坐标118 318,518
    667                  C108Dat[7*k + 2] = Y_COORD;//Y坐标
    668                  C108Dat[7*k + 3] = COLOR[k];
    669                  C108Dat[7*k + 4] = 0x0000;
    670                  /* wk --> 显示的出来的数据 = C108[5]* 65536 + C108[6] */
    671                  C108Dat[7*k + 5] = ((U16)(PowRxchar[UI_VIRTUAL_INDEX + 16*k + UorI*8]) << 8) + (U16)(PowRxchar[UI_VIRTUAL_INDEX + 1 + 16*k + UorI*8]);//两个字节转为一个字
    672                  C108Dat[7*k + 6] = ((U16)(PowRxchar[UI_VIRTUAL_INDEX + 2 + 16*k + UorI*8]) << 8) + (U16)(PowRxchar[UI_VIRTUAL_INDEX + 3 + 16*k + UorI*8]);
    673                  YADA_98(198+200*k, Y_COORD, 0x22, 0x81, 0x01, COLOR[k], 0x0000, UORI[UorI], 0);  //标注电压或电流的单位
    674              }
    675              delay_ms(5);
    676              YADA_C0(WAVEUIaddr + UorI*42, C108Dat, 21);  
    677              YADA_C108(WAVEUIaddr + UorI*42, 3);   //写入有效值，每次3个
    678          #endif
    679              
    680              U16 C108Dat[21]= {0};
   \   00000008   0xA809             ADD      R0,SP,#+36
   \   0000000A   0x212C             MOVS     R1,#+44
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    681              U8 VI_DIS[12]={0};
   \   00000010   0xA806             ADD      R0,SP,#+24
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2300             MOVS     R3,#+0
   \   00000018   0xC00E             STM      R0!,{R1-R3}
   \   0000001A   0x380C             SUBS     R0,R0,#+12
    682              U8 UORI[][2]= {"V","A"},temp,temp1,k;
   \   0000001C   0xA805             ADD      R0,SP,#+20
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable10_9
   \   00000022   0x680A             LDR      R2,[R1, #0]
   \   00000024   0x6002             STR      R2,[R0, #+0]
    683              for(k=0; k<3; k++)
   \   00000026   0x2600             MOVS     R6,#+0
   \   00000028   0xE007             B.N      ??linemark_0
    684              {
    685                if(UorI==0)
    686                   // wk @130408--> revrese dot tx
    687          //        Sig_Fiq(&PowRxchar[UI_VIRTUAL_INDEX+8+16*k],&VI_DIS[4*k],10);   //数据显示为要求的有效数字
    688                {
    689          //      PowRxchar[0]=0x00;PowRxchar[1]=0x21;PowRxchar[2]=0x01;PowRxchar[3]=0x93;
    690                Sig_Fiq(PowRxchar,VI_DIS,100,3);
    691                }
    692                else
    693                   // wk @130408--> revrese dot tx
    694          //        Sig_Fiq(&PowRxchar[UI_VIRTUAL_INDEX+16*k],&VI_DIS[4*k],100); 
    695                 Sig_Fiq(&PowRxchar[I_VIRTUAL_INDEX],VI_DIS,10,3);
   \                     ??linemark_1:
   \   0000002A   0x2303             MOVS     R3,#+3
   \   0000002C   0x220A             MOVS     R2,#+10
   \   0000002E   0xA906             ADD      R1,SP,#+24
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable10_10
   \   00000034   0x.... 0x....      BL       Sig_Fiq
   \                     ??linemark_2:
   \   00000038   0x1C76             ADDS     R6,R6,#+1
   \                     ??linemark_0:
   \   0000003A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003C   0x2E03             CMP      R6,#+3
   \   0000003E   0xD20A             BCS.N    ??linemark_3
   \   00000040   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000042   0x2D00             CMP      R5,#+0
   \   00000044   0xD1F1             BNE.N    ??linemark_1
   \   00000046   0x2303             MOVS     R3,#+3
   \   00000048   0x2264             MOVS     R2,#+100
   \   0000004A   0xA906             ADD      R1,SP,#+24
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable10_11
   \   00000050   0x.... 0x....      BL       Sig_Fiq
   \   00000054   0xE7F0             B.N      ??linemark_2
    696              }
    697              for(k=0; k<3; k++)
   \                     ??linemark_3:
   \   00000056   0x2600             MOVS     R6,#+0
   \   00000058   0xE061             B.N      ??linemark_4
    698              {
    699                temp=7*k;
    700                temp1=k*4;
    701                if(UorI)
    702                {
    703                  C108Dat[temp + 0] = 0x3303;//P
    704                }
    705                else
    706                {
    707                   C108Dat[temp + 0] = 0x3203;//P  
   \                     ??linemark_5:
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0xAA09             ADD      R2,SP,#+36
   \   0000005E   0xF243 0x2303      MOVW     R3,#+12803
   \   00000062   0xF822 0x3010      STRH     R3,[R2, R0, LSL #+1]
    708                }
    709                  C108Dat[temp + 1] = 118+200*k;//显示左边列谐波数据的X坐标118 318,518
   \                     ??linemark_6:
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0xAA09             ADD      R2,SP,#+36
   \   0000006A   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   0000006E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000070   0x23C8             MOVS     R3,#+200
   \   00000072   0xFB03 0xF306      MUL      R3,R3,R6
   \   00000076   0x3376             ADDS     R3,R3,#+118
   \   00000078   0x8053             STRH     R3,[R2, #+2]
    710                  C108Dat[temp + 2] = Y_COORD;//Y坐标
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0xAA09             ADD      R2,SP,#+36
   \   0000007E   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   00000082   0x8094             STRH     R4,[R2, #+4]
    711                  C108Dat[temp + 3] = COLOR[k];
   \   00000084   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000086   0xAA09             ADD      R2,SP,#+36
   \   00000088   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   0000008C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008E   0x.... 0x....      LDR.W    R3,??DataTable10_12
   \   00000092   0xF833 0x3016      LDRH     R3,[R3, R6, LSL #+1]
   \   00000096   0x80D3             STRH     R3,[R2, #+6]
    712                  C108Dat[temp + 4] = 0x0000;
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0xAA09             ADD      R2,SP,#+36
   \   0000009C   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   000000A0   0x2300             MOVS     R3,#+0
   \   000000A2   0x8113             STRH     R3,[R2, #+8]
    713                  C108Dat[temp + 5] = ((U16)(VI_DIS[temp1]) << 8) + (U16)(VI_DIS[1 + temp1]);
   \   000000A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A6   0xAA06             ADD      R2,SP,#+24
   \   000000A8   0x5C8A             LDRB     R2,[R1, R2]
   \   000000AA   0x0212             LSLS     R2,R2,#+8
   \   000000AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AE   0xAB06             ADD      R3,SP,#+24
   \   000000B0   0x18CB             ADDS     R3,R1,R3
   \   000000B2   0x785B             LDRB     R3,[R3, #+1]
   \   000000B4   0xFA52 0xF283      UXTAB    R2,R2,R3
   \   000000B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BA   0xAB09             ADD      R3,SP,#+36
   \   000000BC   0xEB13 0x0340      ADDS     R3,R3,R0, LSL #+1
   \   000000C0   0x815A             STRH     R2,[R3, #+10]
    714                  C108Dat[temp + 6] = ((U16)(VI_DIS[temp1+2]) << 8) + (U16)(VI_DIS[3 + temp1]);
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0xAA06             ADD      R2,SP,#+24
   \   000000C6   0x188A             ADDS     R2,R1,R2
   \   000000C8   0x7892             LDRB     R2,[R2, #+2]
   \   000000CA   0x0212             LSLS     R2,R2,#+8
   \   000000CC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CE   0xAB06             ADD      R3,SP,#+24
   \   000000D0   0x18C9             ADDS     R1,R1,R3
   \   000000D2   0x78C9             LDRB     R1,[R1, #+3]
   \   000000D4   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0xAA09             ADD      R2,SP,#+36
   \   000000DC   0xEB12 0x0040      ADDS     R0,R2,R0, LSL #+1
   \   000000E0   0x8181             STRH     R1,[R0, #+12]
    715                  YADA_98(198+200*k, Y_COORD, 0x22, 0x81, 0x01, COLOR[k], 0x0000, UORI[UorI], 0);  //标注电压或电流的单位
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x9004             STR      R0,[SP, #+16]
   \   000000E6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E8   0xA805             ADD      R0,SP,#+20
   \   000000EA   0xEB10 0x0045      ADDS     R0,R0,R5, LSL #+1
   \   000000EE   0x9003             STR      R0,[SP, #+12]
   \   000000F0   0x2000             MOVS     R0,#+0
   \   000000F2   0x9002             STR      R0,[SP, #+8]
   \   000000F4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable10_12
   \   000000FA   0xF830 0x0016      LDRH     R0,[R0, R6, LSL #+1]
   \   000000FE   0x9001             STR      R0,[SP, #+4]
   \   00000100   0x2001             MOVS     R0,#+1
   \   00000102   0x9000             STR      R0,[SP, #+0]
   \   00000104   0x2381             MOVS     R3,#+129
   \   00000106   0x2222             MOVS     R2,#+34
   \   00000108   0x0021             MOVS     R1,R4
   \   0000010A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000010C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000010E   0x20C8             MOVS     R0,#+200
   \   00000110   0xFB00 0xF006      MUL      R0,R0,R6
   \   00000114   0x30C6             ADDS     R0,R0,#+198
   \   00000116   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000118   0x.... 0x....      BL       YADA_98
   \   0000011C   0x1C76             ADDS     R6,R6,#+1
   \                     ??linemark_4:
   \   0000011E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000120   0x2E03             CMP      R6,#+3
   \   00000122   0xD20E             BCS.N    ??linemark_7
   \   00000124   0x2007             MOVS     R0,#+7
   \   00000126   0xFB00 0xF006      MUL      R0,R0,R6
   \   0000012A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000012C   0x00B1             LSLS     R1,R6,#+2
   \   0000012E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000130   0x2D00             CMP      R5,#+0
   \   00000132   0xD092             BEQ.N    ??linemark_5
   \   00000134   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000136   0xAA09             ADD      R2,SP,#+36
   \   00000138   0xF243 0x3303      MOVW     R3,#+13059
   \   0000013C   0xF822 0x3010      STRH     R3,[R2, R0, LSL #+1]
   \   00000140   0xE791             B.N      ??linemark_6
    716              }
    717              
    718              delay_ms(5);
   \                     ??linemark_7:
   \   00000142   0x2005             MOVS     R0,#+5
   \   00000144   0x.... 0x....      BL       delay_ms
    719              YADA_C0(WAVEUIaddr + UorI*42, C108Dat, 21);
   \   00000148   0x2215             MOVS     R2,#+21
   \   0000014A   0xA909             ADD      R1,SP,#+36
   \   0000014C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000014E   0x202A             MOVS     R0,#+42
   \   00000150   0xFB00 0xF005      MUL      R0,R0,R5
   \   00000154   0xF600 0x108C      ADDW     R0,R0,#+2444
   \   00000158   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000015A   0x.... 0x....      BL       YADA_C0
    720              YADA_C108(WAVEUIaddr + UorI*42, 3);   //写入有效值，每次3个
   \   0000015E   0x2103             MOVS     R1,#+3
   \   00000160   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000162   0x202A             MOVS     R0,#+42
   \   00000164   0xFB00 0xF005      MUL      R0,R0,R5
   \   00000168   0xF600 0x108C      ADDW     R0,R0,#+2444
   \   0000016C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000016E   0x.... 0x....      BL       YADA_C108
    721          }
   \   00000172   0xB014             ADD      SP,SP,#+80
   \   00000174   0xBD70             POP      {R4-R6,PC}       ;; return
    722          /*******************************************************************************
    723          * 函  数  名      : GUI_SYS_PARASET
    724          * 描      述      : 系统参数设定。可通过移位键选择各项设置。数值输入的范围为0~99999，大于5位时清零
    725          *                   此页的时间设置没有处理输入是否在正确范围
    726          * 输      入      : 无
    727          * 返      回      : 无
    728          * 
    729          * 修       改     : WK
    730          * 时       间     : 2013-03-13
    731          * 描       述     : 基于2013-03-08界面
    732          *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    733          void GUI_SYS_PARASET(void)
    734          {
   \                     GUI_SYS_PARASET:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB0C7             SUB      SP,SP,#+284
    735              U8 OFF_ON[][4]= {"关闭","开启"},i,temp=0,temp1=0;
   \   00000006   0xA809             ADD      R0,SP,#+36
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable10_13
   \   0000000C   0xC90C             LDM      R1!,{R2,R3}
   \   0000000E   0xC00C             STM      R0!,{R2,R3}
   \   00000010   0x3908             SUBS     R1,R1,#+8
   \   00000012   0x3808             SUBS     R0,R0,#+8
   \   00000014   0x2500             MOVS     R5,#+0
   \   00000016   0x2600             MOVS     R6,#+0
    736              U16 ParaSetC108[63]= {0},PARA_y=0,string2U16=0;
   \   00000018   0xA814             ADD      R0,SP,#+80
   \   0000001A   0x2180             MOVS     R1,#+128
   \   0000001C   0x.... 0x....      BL       __aeabi_memclr4
   \   00000020   0xF05F 0x0900      MOVS     R9,#+0
   \   00000024   0x2700             MOVS     R7,#+0
    737              static U8 flg_sys[9]={0} ;// wk --设置参数超出了限制标志
    738              
    739               SHELL_CONTEXT_PTR    shell_ptr;
    740               shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000026   0xF44F 0x70F2      MOV      R0,#+484
   \   0000002A   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000002E   0x0004             MOVS     R4,R0
    741               _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   00000030   0xF245 0x0101      MOVW     R1,#+20481
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       _lwmem_set_type
    742              //U32 String2U32=0;
    743              U16 SysParaXY[18]= { 450, 50, 450, 80 , 450 ,112,
    744                                   377,146, 470,146 , 540,146,   // 年是4位显示的，因此X坐标小于时间（2位）的X坐标
    745                                   400,178, 470,178,  540,178
    746                                 };
   \   0000003A   0xA80B             ADD      R0,SP,#+44
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable10_14
   \   00000040   0x2224             MOVS     R2,#+36
   \   00000042   0x.... 0x....      BL       __aeabi_memcpy4
    747              U16 SysParaSetSq[36]= {445,48,448,73,  445,80,448,105, 445,110,448,135, 
    748                                     370,145,373,170, 460,145,463,170,  530,145,533,170, 
    749                                     370,176,373,201, 460,176,463,201,  530,176,533,201
    750                                     };
   \   00000046   0xA834             ADD      R0,SP,#+208
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable10_15
   \   0000004C   0x2248             MOVS     R2,#+72
   \   0000004E   0x.... 0x....      BL       __aeabi_memcpy4
    751              /* wk --> 光标 */
    752              if(SysSet.SwFlg) //初次进入时读取flash
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xF000 0x80F6      BEQ.W    ??GUI_SYS_PARASET_0
    753              {
    754                  YADA_40(0x0000,0xfc00);//前景色为黑色，背景色为橙色
   \   0000005E   0xF44F 0x417C      MOV      R1,#+64512
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      BL       YADA_40
    755                  YADA_5A(SysParaSetSq,4);  // WK --> 以背景色填充（148,265）、（148,296）的矩形
   \   00000068   0x2104             MOVS     R1,#+4
   \   0000006A   0xA834             ADD      R0,SP,#+208
   \   0000006C   0x.... 0x....      BL       YADA_5A
    756          #if 0 // wk --> 全部读取Flash中参数      
    757                  shell_ptr->ARGC = 2;
    758                  shell_ptr->ARGV[0]="cd";
    759                  shell_ptr->ARGV[1]="f:\\"; 
    760                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    761                  
    762                  shell_ptr->ARGC = 2;
    763                  shell_ptr->ARGV[0]="cd";
    764                  shell_ptr->ARGV[1]="sysset";
    765                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
    766                  
    767                  shell_ptr->ARGC=1;
    768                  shell_ptr->ARGV[0]="pwd";
    769                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
    770                  
    771                  shell_ptr->ARGC=5;
    772                  shell_ptr->ARGV[0]="read";
    773                  shell_ptr->ARGV[1]="sysset.txt";
    774                  shell_ptr->ARGV[2]="84";
    775                  shell_ptr->ARGV[3]="begin";
    776                  shell_ptr->ARGV[4]="0";
    777                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,SysFlashData);   
    778          #endif // wk --> 全部读取Flash中参数
    779                  
    780          #if 1 // wk --> 只读取Flash中系统参数      
    781                  shell_ptr->ARGC = 2;
   \   00000070   0x2002             MOVS     R0,#+2
   \   00000072   0x6220             STR      R0,[R4, #+32]
    782                  shell_ptr->ARGV[0]="cd";
   \   00000074   0xA0A5             ADR.N    R0,??GUI_SYS_PARASET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000076   0x6020             STR      R0,[R4, #+0]
    783                  shell_ptr->ARGV[1]="f:\\"; 
   \   00000078   0xA0A5             ADR.N    R0,??GUI_SYS_PARASET_1+0x4  ;; "f:\\"
   \   0000007A   0x6060             STR      R0,[R4, #+4]
    784                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000007C   0x0021             MOVS     R1,R4
   \   0000007E   0x6A20             LDR      R0,[R4, #+32]
   \   00000080   0x.... 0x....      BL       Shell_cd
    785                  
    786                  shell_ptr->ARGC = 2;
   \   00000084   0x2002             MOVS     R0,#+2
   \   00000086   0x6220             STR      R0,[R4, #+32]
    787                  shell_ptr->ARGV[0]="cd";
   \   00000088   0xA0A0             ADR.N    R0,??GUI_SYS_PARASET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   0000008A   0x6020             STR      R0,[R4, #+0]
    788                  shell_ptr->ARGV[1]="sysset";
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable10_17
   \   00000090   0x6060             STR      R0,[R4, #+4]
    789                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000092   0x0021             MOVS     R1,R4
   \   00000094   0x6A20             LDR      R0,[R4, #+32]
   \   00000096   0x.... 0x....      BL       Shell_cd
    790                  
    791                  shell_ptr->ARGC=1;
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0x6220             STR      R0,[R4, #+32]
    792                  shell_ptr->ARGV[0]="pwd";
   \   0000009E   0xA09D             ADR.N    R0,??GUI_SYS_PARASET_1+0x8  ;; "pwd"
   \   000000A0   0x6020             STR      R0,[R4, #+0]
    793                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000000A2   0x0021             MOVS     R1,R4
   \   000000A4   0x6A20             LDR      R0,[R4, #+32]
   \   000000A6   0x.... 0x....      BL       Shell_pwd
    794                  
    795                  shell_ptr->ARGC=5;
   \   000000AA   0x2005             MOVS     R0,#+5
   \   000000AC   0x6220             STR      R0,[R4, #+32]
    796                  shell_ptr->ARGV[0]="read";
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable10_18
   \   000000B2   0x6020             STR      R0,[R4, #+0]
    797                  shell_ptr->ARGV[1]="sysset.txt";
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable10_19
   \   000000B8   0x6060             STR      R0,[R4, #+4]
    798                  shell_ptr->ARGV[2]="25";
   \   000000BA   0xA097             ADR.N    R0,??GUI_SYS_PARASET_1+0xC  ;; 0x32, 0x35, 0x00, 0x00
   \   000000BC   0x60A0             STR      R0,[R4, #+8]
    799                  shell_ptr->ARGV[3]="begin";
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable10_20
   \   000000C2   0x60E0             STR      R0,[R4, #+12]
    800                  shell_ptr->ARGV[4]="0";
   \   000000C4   0xA095             ADR.N    R0,??GUI_SYS_PARASET_1+0x10  ;; "0"
   \   000000C6   0x6120             STR      R0,[R4, #+16]
    801                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,SysFlashDataT);   
   \   000000C8   0x.... 0x....      LDR.W    R2,??DataTable10_21
   \   000000CC   0x0021             MOVS     R1,R4
   \   000000CE   0x6A20             LDR      R0,[R4, #+32]
   \   000000D0   0x.... 0x....      BL       Shell_read_wk
    802          #endif //  wk --> 只读取Flash中系统参数
    803                  
    804                  //DISTIME(0);//显示当前的时间
    805                 // memcpy(SysFlashData,ParaSetC108,48);//从内部information memory中读取存储的参数
    806                  SysSet.SwFlg=0;
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x7001             STRB     R1,[R0, #+0]
    807                  
    808                  // wk --> 写入有效值  第一次全部写入
    809                  for(i=0;i<9;i++)
   \   000000DC   0xF05F 0x0800      MOVS     R8,#+0
   \   000000E0   0xE03F             B.N      ??GUI_SYS_PARASET_2
    810                  {
    811                    temp=2*i;
    812                    temp1=7*i;
    813                    if(i<3)
    814                    {
    815                      ParaSetC108[temp1 + 0] = 0x5004;            //显示相位的X坐标
    816                    }
    817                    else if(i==3)
    818                    {
    819                      ParaSetC108[temp1 + 0] = 0x4004;        //显示相位的X坐标  
    820                    }
    821                    else
    822                    {
    823                      ParaSetC108[temp1 + 0] = 0x2004;        //显示相位的X坐标  
   \                     ??GUI_SYS_PARASET_3:
   \   000000E2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E4   0xA814             ADD      R0,SP,#+80
   \   000000E6   0xF242 0x0104      MOVW     R1,#+8196
   \   000000EA   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
    824                    }
    825                    ParaSetC108[temp1 + 1] = SysParaXY[temp];            //显示相位的X坐标
   \                     ??GUI_SYS_PARASET_4:
   \   000000EE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F0   0xA814             ADD      R0,SP,#+80
   \   000000F2   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   000000F6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F8   0xA90B             ADD      R1,SP,#+44
   \   000000FA   0xF831 0x1015      LDRH     R1,[R1, R5, LSL #+1]
   \   000000FE   0x8041             STRH     R1,[R0, #+2]
    826                    ParaSetC108[temp1 + 2] = SysParaXY[temp + 1];     //Y坐标
   \   00000100   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000102   0xA814             ADD      R0,SP,#+80
   \   00000104   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000108   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000010A   0xA90B             ADD      R1,SP,#+44
   \   0000010C   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000110   0x8849             LDRH     R1,[R1, #+2]
   \   00000112   0x8081             STRH     R1,[R0, #+4]
    827                    ParaSetC108[temp1 + 3] = 0xffff;         //白色，下为黑色
   \   00000114   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000116   0xA814             ADD      R0,SP,#+80
   \   00000118   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000011C   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000120   0x80C1             STRH     R1,[R0, #+6]
    828                    ParaSetC108[temp1 + 4] = 0x0000;
   \   00000122   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000124   0xA814             ADD      R0,SP,#+80
   \   00000126   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000012A   0x2100             MOVS     R1,#+0
   \   0000012C   0x8101             STRH     R1,[R0, #+8]
    829                    ParaSetC108[temp1 + 5] = 0;         //白色，下为黑色
   \   0000012E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000130   0xA814             ADD      R0,SP,#+80
   \   00000132   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000136   0x2100             MOVS     R1,#+0
   \   00000138   0x8141             STRH     R1,[R0, #+10]
    830                    ParaSetC108[temp1 + 6] = (U16) (SysFlashDataT[temp+8]<<8)+(U16)(SysFlashDataT[temp+7]);
   \   0000013A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable10_21
   \   00000140   0x1828             ADDS     R0,R5,R0
   \   00000142   0x7A00             LDRB     R0,[R0, #+8]
   \   00000144   0x0200             LSLS     R0,R0,#+8
   \   00000146   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable10_21
   \   0000014C   0x1869             ADDS     R1,R5,R1
   \   0000014E   0x79C9             LDRB     R1,[R1, #+7]
   \   00000150   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000154   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000156   0xA914             ADD      R1,SP,#+80
   \   00000158   0xEB11 0x0146      ADDS     R1,R1,R6, LSL #+1
   \   0000015C   0x8188             STRH     R0,[R1, #+12]
   \   0000015E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_2:
   \   00000162   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000166   0xF1B8 0x0F09      CMP      R8,#+9
   \   0000016A   0xD21E             BCS.N    ??GUI_SYS_PARASET_5
   \   0000016C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000170   0xEA5F 0x0548      LSLS     R5,R8,#+1
   \   00000174   0x2007             MOVS     R0,#+7
   \   00000176   0xFB00 0xF608      MUL      R6,R0,R8
   \   0000017A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000017E   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000182   0xD206             BCS.N    ??GUI_SYS_PARASET_6
   \   00000184   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000186   0xA814             ADD      R0,SP,#+80
   \   00000188   0xF245 0x0104      MOVW     R1,#+20484
   \   0000018C   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   00000190   0xE7AD             B.N      ??GUI_SYS_PARASET_4
   \                     ??GUI_SYS_PARASET_6:
   \   00000192   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000196   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000019A   0xD1A2             BNE.N    ??GUI_SYS_PARASET_3
   \   0000019C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000019E   0xA814             ADD      R0,SP,#+80
   \   000001A0   0xF244 0x0104      MOVW     R1,#+16388
   \   000001A4   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   000001A8   0xE7A1             B.N      ??GUI_SYS_PARASET_4
    831                  }
    832                         
    833                  YADA_C0(ParaSetAddr, ParaSetC108, 63);  // WK --> 写暂存缓冲区
   \                     ??GUI_SYS_PARASET_5:
   \   000001AA   0x223F             MOVS     R2,#+63
   \   000001AC   0xA914             ADD      R1,SP,#+80
   \   000001AE   0xF44F 0x602B      MOV      R0,#+2736
   \   000001B2   0x.... 0x....      BL       YADA_C0
    834                  delay_us(10);
   \   000001B6   0x200A             MOVS     R0,#+10
   \   000001B8   0x.... 0x....      BL       delay_us
    835                  YADA_C108(ParaSetAddr, 9);   //写入有效值，每次10个
   \   000001BC   0x2109             MOVS     R1,#+9
   \   000001BE   0xF44F 0x602B      MOV      R0,#+2736
   \   000001C2   0x.... 0x....      BL       YADA_C108
    836                  delay_us(10);   
   \   000001C6   0x200A             MOVS     R0,#+10
   \   000001C8   0x.... 0x....      BL       delay_us
    837                  
    838                 for(i=0;i<7;i++)  // WK --> 向屏幕 7 个控制按钮写 “开 ”、“关 ”状态
   \   000001CC   0xF05F 0x0800      MOVS     R8,#+0
   \   000001D0   0xE036             B.N      ??GUI_SYS_PARASET_7
    839                 {
    840                    PARA_y=63+i*37;
   \                     ??GUI_SYS_PARASET_8:
   \   000001D2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001D6   0x2025             MOVS     R0,#+37
   \   000001D8   0xFB00 0xF008      MUL      R0,R0,R8
   \   000001DC   0xF110 0x093F      ADDS     R9,R0,#+63
    841                    /* WK --> 清除上一次的状态 */
    842                    YADA_71(MenuParaSET,148, PARA_y,240,PARA_y+24, 148, PARA_y);  //WK --> 剪切图标显示
   \   000001E0   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000001E4   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \   000001E8   0x2094             MOVS     R0,#+148
   \   000001EA   0x9001             STR      R0,[SP, #+4]
   \   000001EC   0xF119 0x0018      ADDS     R0,R9,#+24
   \   000001F0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001F2   0x9000             STR      R0,[SP, #+0]
   \   000001F4   0x23F0             MOVS     R3,#+240
   \   000001F6   0x464A             MOV      R2,R9
   \   000001F8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000001FA   0x2194             MOVS     R1,#+148
   \   000001FC   0x200A             MOVS     R0,#+10
   \   000001FE   0x.... 0x....      BL       YADA_71
    843                    YADA_98(152, PARA_y, 0x22, 0x81, 0x02, 0xffff, 0x0000, OFF_ON[SysFlashDataT[i]], 4);// WK -->字库选择
   \   00000202   0x2004             MOVS     R0,#+4
   \   00000204   0x9004             STR      R0,[SP, #+16]
   \   00000206   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable10_21
   \   0000020E   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000212   0xA909             ADD      R1,SP,#+36
   \   00000214   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000218   0x9003             STR      R0,[SP, #+12]
   \   0000021A   0x2000             MOVS     R0,#+0
   \   0000021C   0x9002             STR      R0,[SP, #+8]
   \   0000021E   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000222   0x9001             STR      R0,[SP, #+4]
   \   00000224   0x2002             MOVS     R0,#+2
   \   00000226   0x9000             STR      R0,[SP, #+0]
   \   00000228   0x2381             MOVS     R3,#+129
   \   0000022A   0x2222             MOVS     R2,#+34
   \   0000022C   0x4649             MOV      R1,R9
   \   0000022E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000230   0x2098             MOVS     R0,#+152
   \   00000232   0x.... 0x....      BL       YADA_98
    844                    delay_us(10);
   \   00000236   0x200A             MOVS     R0,#+10
   \   00000238   0x.... 0x....      BL       delay_us
    845                 }
   \   0000023C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_7:
   \   00000240   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000244   0xF1B8 0x0F07      CMP      R8,#+7
   \   00000248   0xD3C3             BCC.N    ??GUI_SYS_PARASET_8
    846              }
    847              
    848              if(SysSet.FuncFlg) //wk --> 上移 ，下移
   \                     ??GUI_SYS_PARASET_0:
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   0000024E   0x7840             LDRB     R0,[R0, #+1]
   \   00000250   0x2800             CMP      R0,#+0
   \   00000252   0xD01F             BEQ.N    ??GUI_SYS_PARASET_9
    849              {
    850                  //YADA_5B(&SysParaSetSq[SysParaOldIndex*4],4);  //擦除前一处
    851                  YADA_5B(&SysParaSetSq[SysParaOldIndex*4],4);   // 擦除前一处
   \   00000254   0x2104             MOVS     R1,#+4
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable10_22
   \   0000025A   0x7800             LDRB     R0,[R0, #+0]
   \   0000025C   0xAA34             ADD      R2,SP,#+208
   \   0000025E   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   00000262   0x.... 0x....      BL       YADA_5B
    852                  SysParaOldIndex=SysSet.ParaIndex;
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   0000026A   0x7980             LDRB     R0,[R0, #+6]
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable10_22
   \   00000270   0x7008             STRB     R0,[R1, #+0]
    853                  SysSet.FuncFlg=0;
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   00000276   0x2100             MOVS     R1,#+0
   \   00000278   0x7041             STRB     R1,[R0, #+1]
    854                  SysSet.DataCnt=0; //切换时键盘输入清零
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   0000027E   0x2100             MOVS     R1,#+0
   \   00000280   0x7201             STRB     R1,[R0, #+8]
    855                  YADA_5A(&SysParaSetSq[SysSet.ParaIndex*4],4);      //背景色填充相所在的矩形区域/**/
   \   00000282   0x2104             MOVS     R1,#+4
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   00000288   0x7980             LDRB     R0,[R0, #+6]
   \   0000028A   0xAA34             ADD      R2,SP,#+208
   \   0000028C   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   00000290   0x.... 0x....      BL       YADA_5A
    856                  //YADA_5A(&SysParaSetSq[SysSet.ParaIndex*4],4);    //背景色填充相所在的矩形区域/**/
    857              }
    858              
    859              if(SysSet.DataFlg)//清除时SysSet.DataFlg为1，但DatNumFlg为0
   \                     ??GUI_SYS_PARASET_9:
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   00000298   0x7880             LDRB     R0,[R0, #+2]
   \   0000029A   0x2800             CMP      R0,#+0
   \   0000029C   0xF000 0x8119      BEQ.W    ??GUI_SYS_PARASET_10
    860              {
    861                  if(SysSet.DataCnt==0)
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   000002A4   0x7A00             LDRB     R0,[R0, #+8]
   \   000002A6   0x2800             CMP      R0,#+0
   \   000002A8   0xD101             BNE.N    ??GUI_SYS_PARASET_11
    862                  {
    863                      string2U16=0;
   \   000002AA   0x2700             MOVS     R7,#+0
   \   000002AC   0xE019             B.N      ??GUI_SYS_PARASET_12
    864                  }
    865                  else
    866                  for(i=0; i<SysSet.DataCnt; i++) //利用输入数据个数
   \                     ??GUI_SYS_PARASET_11:
   \   000002AE   0xF05F 0x0800      MOVS     R8,#+0
   \   000002B2   0xE00F             B.N      ??GUI_SYS_PARASET_13
    867                  {
    868                          string2U16=string2U16*10+SysSet.Data[i]-'0';    //求整数部分
   \                     ??GUI_SYS_PARASET_14:
   \   000002B4   0x200A             MOVS     R0,#+10
   \   000002B6   0xFB00 0xF007      MUL      R0,R0,R7
   \   000002BA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable10_16
   \   000002C2   0xEB18 0x0101      ADDS     R1,R8,R1
   \   000002C6   0x7A49             LDRB     R1,[R1, #+9]
   \   000002C8   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000002CC   0xF1B0 0x0730      SUBS     R7,R0,#+48
    869                  }
   \   000002D0   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_13:
   \   000002D4   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   000002D8   0x7A00             LDRB     R0,[R0, #+8]
   \   000002DA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002DE   0x4580             CMP      R8,R0
   \   000002E0   0xD3E8             BCC.N    ??GUI_SYS_PARASET_14
    870                  
    871                       temp=(SysSet.ParaIndex)*2; //WK --> 
   \                     ??GUI_SYS_PARASET_12:
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   000002E6   0x7980             LDRB     R0,[R0, #+6]
   \   000002E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002EA   0x0045             LSLS     R5,R0,#+1
    872                       SysFlashDataT[temp+7]=(U8)(string2U16);
   \   000002EC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable10_21
   \   000002F2   0x1828             ADDS     R0,R5,R0
   \   000002F4   0x71C7             STRB     R7,[R0, #+7]
    873                       SysFlashDataT[temp+8]=(U8)(string2U16>>8);
   \   000002F6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable10_21
   \   000002FC   0x1828             ADDS     R0,R5,R0
   \   000002FE   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000300   0x0A39             LSRS     R1,R7,#+8
   \   00000302   0x7201             STRB     R1,[R0, #+8]
    874                       /*　WK --> 重新显示修改过的数据 */
    875                      U16 OneC108[7]= {SysSet.ParaIndex<3?0x5004:(SysSet.ParaIndex==3?0x4004:0x2004),
    876                                        SysParaXY[temp],SysParaXY[temp+1],0xffff,0x0000}; //0x0000 --> 黑
   \   00000304   0xA805             ADD      R0,SP,#+20
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable10_23
   \   0000030A   0xE009             B.N      ??GUI_SYS_PARASET_15
   \                     ??GUI_SYS_PARASET_1:
   \   0000030C   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    
   \   00000310   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    
   \   00000314   0x70 0x77          DC8      "pwd"
   \              0x64 0x00    
   \   00000318   0x32 0x35          DC8      0x32, 0x35, 0x00, 0x00
   \              0x00 0x00    
   \   0000031C   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    
   \                     ??GUI_SYS_PARASET_15:
   \   00000320   0x2210             MOVS     R2,#+16
   \   00000322   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   0000032A   0x7980             LDRB     R0,[R0, #+6]
   \   0000032C   0x2803             CMP      R0,#+3
   \   0000032E   0xD202             BCS.N    ??GUI_SYS_PARASET_16
   \   00000330   0xF245 0x0004      MOVW     R0,#+20484
   \   00000334   0xE009             B.N      ??GUI_SYS_PARASET_17
   \                     ??GUI_SYS_PARASET_16:
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   0000033A   0x7980             LDRB     R0,[R0, #+6]
   \   0000033C   0x2803             CMP      R0,#+3
   \   0000033E   0xD102             BNE.N    ??GUI_SYS_PARASET_18
   \   00000340   0xF244 0x0004      MOVW     R0,#+16388
   \   00000344   0xE001             B.N      ??GUI_SYS_PARASET_19
   \                     ??GUI_SYS_PARASET_18:
   \   00000346   0xF242 0x0004      MOVW     R0,#+8196
   \                     ??GUI_SYS_PARASET_19:
   \                     ??GUI_SYS_PARASET_17:
   \   0000034A   0xF8AD 0x0014      STRH     R0,[SP, #+20]
   \   0000034E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000350   0xA80B             ADD      R0,SP,#+44
   \   00000352   0xF830 0x0015      LDRH     R0,[R0, R5, LSL #+1]
   \   00000356   0xF8AD 0x0016      STRH     R0,[SP, #+22]
   \   0000035A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000035C   0xA80B             ADD      R0,SP,#+44
   \   0000035E   0xEB10 0x0045      ADDS     R0,R0,R5, LSL #+1
   \   00000362   0x8840             LDRH     R0,[R0, #+2]
   \   00000364   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    877                      OneC108[5] =0;
   \   00000368   0x2000             MOVS     R0,#+0
   \   0000036A   0xF8AD 0x001E      STRH     R0,[SP, #+30]
    878                      OneC108[6] =(U16) (SysFlashDataT[temp+8]<<8)+(U16)(SysFlashDataT[temp+7]);
   \   0000036E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000370   0x.... 0x....      LDR.W    R0,??DataTable10_21
   \   00000374   0x1828             ADDS     R0,R5,R0
   \   00000376   0x7A00             LDRB     R0,[R0, #+8]
   \   00000378   0x0200             LSLS     R0,R0,#+8
   \   0000037A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable10_21
   \   00000380   0x1869             ADDS     R1,R5,R1
   \   00000382   0x79C9             LDRB     R1,[R1, #+7]
   \   00000384   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000388   0xF8AD 0x0020      STRH     R0,[SP, #+32]
    879                      
    880                      switch(SysSet.ParaIndex) // WK --> 阈值判断
   \   0000038C   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   00000390   0x7980             LDRB     R0,[R0, #+6]
   \   00000392   0x2800             CMP      R0,#+0
   \   00000394   0xD00C             BEQ.N    ??GUI_SYS_PARASET_20
   \   00000396   0x2802             CMP      R0,#+2
   \   00000398   0xD024             BEQ.N    ??GUI_SYS_PARASET_21
   \   0000039A   0xD316             BCC.N    ??GUI_SYS_PARASET_22
   \   0000039C   0x2804             CMP      R0,#+4
   \   0000039E   0xD03D             BEQ.N    ??GUI_SYS_PARASET_23
   \   000003A0   0xD32D             BCC.N    ??GUI_SYS_PARASET_24
   \   000003A2   0x2806             CMP      R0,#+6
   \   000003A4   0xD054             BEQ.N    ??GUI_SYS_PARASET_25
   \   000003A6   0xD346             BCC.N    ??GUI_SYS_PARASET_26
   \   000003A8   0x2808             CMP      R0,#+8
   \   000003AA   0xD06B             BEQ.N    ??GUI_SYS_PARASET_27
   \   000003AC   0xD35D             BCC.N    ??GUI_SYS_PARASET_28
   \   000003AE   0xE076             B.N      ??GUI_SYS_PARASET_29
    881                      {
    882                      case 0:
    883                         if(OneC108[6]>200)
   \                     ??GUI_SYS_PARASET_20:
   \   000003B0   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003B4   0x28C9             CMP      R0,#+201
   \   000003B6   0xD307             BCC.N    ??GUI_SYS_PARASET_30
    884                        { 
    885                          OneC108[3]=0xf800;
   \   000003B8   0xF44F 0x4078      MOV      R0,#+63488
   \   000003BC   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    886                          flg_sys[0]=1; // 统计时间超限标志
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   000003C4   0x2101             MOVS     R1,#+1
   \   000003C6   0x7001             STRB     R1,[R0, #+0]
    887                        }
    888                         break;
   \                     ??GUI_SYS_PARASET_30:
   \   000003C8   0xE069             B.N      ??GUI_SYS_PARASET_31
    889                      case 1:
    890                         if(OneC108[6]>200)
   \                     ??GUI_SYS_PARASET_22:
   \   000003CA   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003CE   0x28C9             CMP      R0,#+201
   \   000003D0   0xD307             BCC.N    ??GUI_SYS_PARASET_32
    891                        { 
    892                          OneC108[3]=0xf800;
   \   000003D2   0xF44F 0x4078      MOV      R0,#+63488
   \   000003D6   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    893                          flg_sys[1]=1; // 存数时间超限标志
   \   000003DA   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   000003DE   0x2101             MOVS     R1,#+1
   \   000003E0   0x7041             STRB     R1,[R0, #+1]
    894                        }
    895                         break;
   \                     ??GUI_SYS_PARASET_32:
   \   000003E2   0xE05C             B.N      ??GUI_SYS_PARASET_31
    896                      case 2:
    897                        if(OneC108[6]>200)
   \                     ??GUI_SYS_PARASET_21:
   \   000003E4   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003E8   0x28C9             CMP      R0,#+201
   \   000003EA   0xD307             BCC.N    ??GUI_SYS_PARASET_33
    898                        { 
    899                          OneC108[3]=0xf800;
   \   000003EC   0xF44F 0x4078      MOV      R0,#+63488
   \   000003F0   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    900                          flg_sys[2]=1; //上传时间超限标志
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   000003F8   0x2101             MOVS     R1,#+1
   \   000003FA   0x7081             STRB     R1,[R0, #+2]
    901                        }
    902                         break;
   \                     ??GUI_SYS_PARASET_33:
   \   000003FC   0xE04F             B.N      ??GUI_SYS_PARASET_31
    903                      case 3:  // year
    904                        if(OneC108[6]>5000)  
   \                     ??GUI_SYS_PARASET_24:
   \   000003FE   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000402   0xF241 0x3189      MOVW     R1,#+5001
   \   00000406   0x4288             CMP      R0,R1
   \   00000408   0xD307             BCC.N    ??GUI_SYS_PARASET_34
    905                        {
    906                          OneC108[3]=0xf800;
   \   0000040A   0xF44F 0x4078      MOV      R0,#+63488
   \   0000040E   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    907                          flg_sys[3]=1; // 年超限标志
   \   00000412   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   00000416   0x2101             MOVS     R1,#+1
   \   00000418   0x70C1             STRB     R1,[R0, #+3]
    908                        }
    909                         break;
   \                     ??GUI_SYS_PARASET_34:
   \   0000041A   0xE040             B.N      ??GUI_SYS_PARASET_31
    910                      case 4:
    911                        if(OneC108[6]>12)  
   \                     ??GUI_SYS_PARASET_23:
   \   0000041C   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000420   0x280D             CMP      R0,#+13
   \   00000422   0xD307             BCC.N    ??GUI_SYS_PARASET_35
    912                        {
    913                          OneC108[3]=0xf800;
   \   00000424   0xF44F 0x4078      MOV      R0,#+63488
   \   00000428   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    914                          flg_sys[4]=1;// 月超限标志
   \   0000042C   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   00000430   0x2101             MOVS     R1,#+1
   \   00000432   0x7101             STRB     R1,[R0, #+4]
    915                        }
    916                         break;
   \                     ??GUI_SYS_PARASET_35:
   \   00000434   0xE033             B.N      ??GUI_SYS_PARASET_31
    917                      case 5:
    918                        if(OneC108[6]>30) 
   \                     ??GUI_SYS_PARASET_26:
   \   00000436   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000043A   0x281F             CMP      R0,#+31
   \   0000043C   0xD307             BCC.N    ??GUI_SYS_PARASET_36
    919                        {
    920                          OneC108[3]=0xf800;
   \   0000043E   0xF44F 0x4078      MOV      R0,#+63488
   \   00000442   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    921                          flg_sys[5] =1; // 日超限标志
   \   00000446   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   0000044A   0x2101             MOVS     R1,#+1
   \   0000044C   0x7141             STRB     R1,[R0, #+5]
    922                        }
    923                         break;
   \                     ??GUI_SYS_PARASET_36:
   \   0000044E   0xE026             B.N      ??GUI_SYS_PARASET_31
    924                      case 6:
    925                         if(OneC108[6]>24)
   \                     ??GUI_SYS_PARASET_25:
   \   00000450   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000454   0x2819             CMP      R0,#+25
   \   00000456   0xD307             BCC.N    ??GUI_SYS_PARASET_37
    926                         { OneC108[3]=0xf800;
   \   00000458   0xF44F 0x4078      MOV      R0,#+63488
   \   0000045C   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    927                           flg_sys[6]=1; //小时超限标志
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   00000464   0x2101             MOVS     R1,#+1
   \   00000466   0x7181             STRB     R1,[R0, #+6]
    928                         }
    929                         break;
   \                     ??GUI_SYS_PARASET_37:
   \   00000468   0xE019             B.N      ??GUI_SYS_PARASET_31
    930                      case 7:
    931                        if(OneC108[6]>60)
   \                     ??GUI_SYS_PARASET_28:
   \   0000046A   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000046E   0x283D             CMP      R0,#+61
   \   00000470   0xD307             BCC.N    ??GUI_SYS_PARASET_38
    932                        { OneC108[3]=0xf800;
   \   00000472   0xF44F 0x4078      MOV      R0,#+63488
   \   00000476   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    933                          flg_sys[7]=1; // 分超限标志
   \   0000047A   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   0000047E   0x2101             MOVS     R1,#+1
   \   00000480   0x71C1             STRB     R1,[R0, #+7]
    934                        }
    935                        break;
   \                     ??GUI_SYS_PARASET_38:
   \   00000482   0xE00C             B.N      ??GUI_SYS_PARASET_31
    936                      case 8:
    937                        if(OneC108[6]>60)
   \                     ??GUI_SYS_PARASET_27:
   \   00000484   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000488   0x283D             CMP      R0,#+61
   \   0000048A   0xD307             BCC.N    ??GUI_SYS_PARASET_39
    938                        { OneC108[3]=0xf800;
   \   0000048C   0xF44F 0x4078      MOV      R0,#+63488
   \   00000490   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    939                          flg_sys[8]=1; // 秒超限标志
   \   00000494   0x.... 0x....      LDR.W    R0,??DataTable10_24
   \   00000498   0x2101             MOVS     R1,#+1
   \   0000049A   0x7201             STRB     R1,[R0, #+8]
    940                        }
    941                        break;
   \                     ??GUI_SYS_PARASET_39:
   \   0000049C   0xE7FF             B.N      ??GUI_SYS_PARASET_31
    942                      default:
    943                        break;
    944                      }
    945                      YADA_C0(ParaSetAddr+SysSet.ParaIndex*7, OneC108, 7);//修改发生改变的数据项
   \                     ??GUI_SYS_PARASET_29:
   \                     ??GUI_SYS_PARASET_31:
   \   0000049E   0x2207             MOVS     R2,#+7
   \   000004A0   0xA905             ADD      R1,SP,#+20
   \   000004A2   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   000004A6   0x7980             LDRB     R0,[R0, #+6]
   \   000004A8   0x2307             MOVS     R3,#+7
   \   000004AA   0x4358             MULS     R0,R3,R0
   \   000004AC   0xF510 0x602B      ADDS     R0,R0,#+2736
   \   000004B0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000004B2   0x.... 0x....      BL       YADA_C0
    946                      YADA_C108(ParaSetAddr+SysSet.ParaIndex*7, 1);
   \   000004B6   0x2101             MOVS     R1,#+1
   \   000004B8   0x.... 0x....      LDR.W    R0,??DataTable10_16
   \   000004BC   0x7980             LDRB     R0,[R0, #+6]
   \   000004BE   0x2207             MOVS     R2,#+7
   \   000004C0   0x4350             MULS     R0,R2,R0
   \   000004C2   0xF510 0x602B      ADDS     R0,R0,#+2736
   \   000004C6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000004C8   0x.... 0x....      BL       YADA_C108
    947                       
    948                      SysSet.DataFlg=0;
   \   000004CC   0x....             LDR.N    R0,??DataTable10_16
   \   000004CE   0x2100             MOVS     R1,#+0
   \   000004D0   0x7081             STRB     R1,[R0, #+2]
    949                
    950              }
    951              if(SysSet.SwitchSet[7]==1)
   \                     ??GUI_SYS_PARASET_10:
   \   000004D2   0x....             LDR.N    R0,??DataTable10_16
   \   000004D4   0x7D40             LDRB     R0,[R0, #+21]
   \   000004D6   0x2801             CMP      R0,#+1
   \   000004D8   0xD14B             BNE.N    ??GUI_SYS_PARASET_40
    952              {
    953                for(i=0;i<7;i++)  // WK --> 向屏幕 7 个控制按钮写 “开 ”、“关 ”状态
   \   000004DA   0xF05F 0x0800      MOVS     R8,#+0
   \   000004DE   0xE040             B.N      ??GUI_SYS_PARASET_41
    954                {
    955                      PARA_y=63+i*37;
   \                     ??GUI_SYS_PARASET_42:
   \   000004E0   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000004E4   0x2025             MOVS     R0,#+37
   \   000004E6   0xFB00 0xF008      MUL      R0,R0,R8
   \   000004EA   0xF110 0x093F      ADDS     R9,R0,#+63
    956                      SysFlashDataT[i]=SysSet.SwitchSet[i];
   \   000004EE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000004F2   0x....             LDR.N    R0,??DataTable10_16
   \   000004F4   0xEB18 0x0000      ADDS     R0,R8,R0
   \   000004F8   0x7B80             LDRB     R0,[R0, #+14]
   \   000004FA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000004FE   0x....             LDR.N    R1,??DataTable10_21
   \   00000500   0xF808 0x0001      STRB     R0,[R8, R1]
    957                      /* WK --> 清除上一次的状态 */
    958                      YADA_71(MenuParaSET,148, PARA_y,240,PARA_y+24, 148, PARA_y);  //WK --> 剪切图标显示
   \   00000504   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000508   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \   0000050C   0x2094             MOVS     R0,#+148
   \   0000050E   0x9001             STR      R0,[SP, #+4]
   \   00000510   0xF119 0x0018      ADDS     R0,R9,#+24
   \   00000514   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000516   0x9000             STR      R0,[SP, #+0]
   \   00000518   0x23F0             MOVS     R3,#+240
   \   0000051A   0x464A             MOV      R2,R9
   \   0000051C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000051E   0x2194             MOVS     R1,#+148
   \   00000520   0x200A             MOVS     R0,#+10
   \   00000522   0x.... 0x....      BL       YADA_71
    959                      YADA_98(152, PARA_y, 0x22, 0x81, 0x02, 0xffff, 0x0000, OFF_ON[SysFlashDataT[i]], 4);// WK -->字库选择
   \   00000526   0x2004             MOVS     R0,#+4
   \   00000528   0x9004             STR      R0,[SP, #+16]
   \   0000052A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000052E   0x....             LDR.N    R0,??DataTable10_21
   \   00000530   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000534   0xA909             ADD      R1,SP,#+36
   \   00000536   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   0000053A   0x9003             STR      R0,[SP, #+12]
   \   0000053C   0x2000             MOVS     R0,#+0
   \   0000053E   0x9002             STR      R0,[SP, #+8]
   \   00000540   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000544   0x9001             STR      R0,[SP, #+4]
   \   00000546   0x2002             MOVS     R0,#+2
   \   00000548   0x9000             STR      R0,[SP, #+0]
   \   0000054A   0x2381             MOVS     R3,#+129
   \   0000054C   0x2222             MOVS     R2,#+34
   \   0000054E   0x4649             MOV      R1,R9
   \   00000550   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000552   0x2098             MOVS     R0,#+152
   \   00000554   0x.... 0x....      BL       YADA_98
    960                      delay_us(10);
   \   00000558   0x200A             MOVS     R0,#+10
   \   0000055A   0x.... 0x....      BL       delay_us
    961                }
   \   0000055E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_41:
   \   00000562   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000566   0xF1B8 0x0F07      CMP      R8,#+7
   \   0000056A   0xD3B9             BCC.N    ??GUI_SYS_PARASET_42
    962                SysSet.SwitchSet[7]=0;  // wk --> 清楚标志
   \   0000056C   0x....             LDR.N    R0,??DataTable10_16
   \   0000056E   0x2100             MOVS     R1,#+0
   \   00000570   0x7541             STRB     R1,[R0, #+21]
    963              }
    964              
    965              /* WK --> 保存键 */
    966              if(SysSet.ParaSaveFlg)
   \                     ??GUI_SYS_PARASET_40:
   \   00000572   0x....             LDR.N    R0,??DataTable10_16
   \   00000574   0x78C0             LDRB     R0,[R0, #+3]
   \   00000576   0x2800             CMP      R0,#+0
   \   00000578   0xF000 0x812F      BEQ.W    ??GUI_SYS_PARASET_43
    967              {    
    968                /* pwd*/
    969          //     shell_ptr->ARGC=1;
    970          //     shell_ptr->ARGV[0]="pwd";
    971          //     Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
    972                for(int i=0;i<9;i++) // wk @130326 --> 对超出阈值的进行处理
   \   0000057C   0x2000             MOVS     R0,#+0
   \   0000057E   0xE00D             B.N      ??GUI_SYS_PARASET_44
    973                {
    974                  if(flg_sys[i]==1)
    975                    switch(i)
    976                    {
    977                    case 0:
    978                    case 1:
    979                    case 2:
    980                      SysFlashDataT[2*i+7]=200;
    981                      SysFlashDataT[2*i+8]=0;
    982                      flg_sys[i]=0;
    983                     break;
    984                    case 3:
    985                      SysFlashDataT[2*i+7]=0x88;
    986                      SysFlashDataT[2*i+8]=0x13;
    987                      flg_sys[i]=0;
    988                     break;
    989                    case 4:
    990                      SysFlashDataT[2*i+7]=12;
    991                      SysFlashDataT[2*i+8]=0;
    992                      flg_sys[i]=0;
    993                      break;
    994                    case 5:
    995                      SysFlashDataT[2*i+7]=60;
    996                      SysFlashDataT[2*i+8]=0;
    997                      flg_sys[i]=0;
    998                      break;
    999                    case 6:
   1000                      SysFlashDataT[2*i+7]=24;
   1001                      SysFlashDataT[2*i+8]=0;
   1002                      flg_sys[i]=0;
   1003                      break;
   1004                    case 7:
   1005                      SysFlashDataT[2*i+7]=60;
   1006                      SysFlashDataT[2*i+8]=0;
   1007                      flg_sys[i]=0;
   1008                      break;
   1009                    case 8:
   1010                      SysFlashDataT[2*i+7]=60;
   \                     ??GUI_SYS_PARASET_45:
   \   00000580   0x....             LDR.N    R1,??DataTable10_21
   \   00000582   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000586   0x223C             MOVS     R2,#+60
   \   00000588   0x71CA             STRB     R2,[R1, #+7]
   1011                      SysFlashDataT[2*i+8]=0;
   \   0000058A   0x....             LDR.N    R1,??DataTable10_21
   \   0000058C   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000590   0x2200             MOVS     R2,#+0
   \   00000592   0x720A             STRB     R2,[R1, #+8]
   1012                      flg_sys[i]=0;
   \   00000594   0x....             LDR.N    R1,??DataTable10_24
   \   00000596   0x2200             MOVS     R2,#+0
   \   00000598   0x5442             STRB     R2,[R0, R1]
   1013                      break;
   \                     ??GUI_SYS_PARASET_46:
   \   0000059A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_PARASET_44:
   \   0000059C   0x2809             CMP      R0,#+9
   \   0000059E   0xDA66             BGE.N    ??GUI_SYS_PARASET_47
   \   000005A0   0x....             LDR.N    R1,??DataTable10_24
   \   000005A2   0x5C41             LDRB     R1,[R0, R1]
   \   000005A4   0x2901             CMP      R1,#+1
   \   000005A6   0xD1F8             BNE.N    ??GUI_SYS_PARASET_46
   \   000005A8   0x2800             CMP      R0,#+0
   \   000005AA   0xD00C             BEQ.N    ??GUI_SYS_PARASET_48
   \   000005AC   0x2802             CMP      R0,#+2
   \   000005AE   0xD00A             BEQ.N    ??GUI_SYS_PARASET_48
   \   000005B0   0xD309             BCC.N    ??GUI_SYS_PARASET_48
   \   000005B2   0x2804             CMP      R0,#+4
   \   000005B4   0xD023             BEQ.N    ??GUI_SYS_PARASET_49
   \   000005B6   0xD314             BCC.N    ??GUI_SYS_PARASET_50
   \   000005B8   0x2806             CMP      R0,#+6
   \   000005BA   0xD03C             BEQ.N    ??GUI_SYS_PARASET_51
   \   000005BC   0xD32D             BCC.N    ??GUI_SYS_PARASET_52
   \   000005BE   0x2808             CMP      R0,#+8
   \   000005C0   0xD0DE             BEQ.N    ??GUI_SYS_PARASET_45
   \   000005C2   0xD346             BCC.N    ??GUI_SYS_PARASET_53
   \   000005C4   0xE7E9             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_48:
   \   000005C6   0x....             LDR.N    R1,??DataTable10_21
   \   000005C8   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005CC   0x22C8             MOVS     R2,#+200
   \   000005CE   0x71CA             STRB     R2,[R1, #+7]
   \   000005D0   0x....             LDR.N    R1,??DataTable10_21
   \   000005D2   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005D6   0x2200             MOVS     R2,#+0
   \   000005D8   0x720A             STRB     R2,[R1, #+8]
   \   000005DA   0x....             LDR.N    R1,??DataTable10_24
   \   000005DC   0x2200             MOVS     R2,#+0
   \   000005DE   0x5442             STRB     R2,[R0, R1]
   \   000005E0   0xE7DB             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_50:
   \   000005E2   0x....             LDR.N    R1,??DataTable10_21
   \   000005E4   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005E8   0x2288             MOVS     R2,#+136
   \   000005EA   0x71CA             STRB     R2,[R1, #+7]
   \   000005EC   0x....             LDR.N    R1,??DataTable10_21
   \   000005EE   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000005F2   0x2213             MOVS     R2,#+19
   \   000005F4   0x720A             STRB     R2,[R1, #+8]
   \   000005F6   0x....             LDR.N    R1,??DataTable10_24
   \   000005F8   0x2200             MOVS     R2,#+0
   \   000005FA   0x5442             STRB     R2,[R0, R1]
   \   000005FC   0xE7CD             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_49:
   \   000005FE   0x....             LDR.N    R1,??DataTable10_21
   \   00000600   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000604   0x220C             MOVS     R2,#+12
   \   00000606   0x71CA             STRB     R2,[R1, #+7]
   \   00000608   0x....             LDR.N    R1,??DataTable10_21
   \   0000060A   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000060E   0x2200             MOVS     R2,#+0
   \   00000610   0x720A             STRB     R2,[R1, #+8]
   \   00000612   0x....             LDR.N    R1,??DataTable10_24
   \   00000614   0x2200             MOVS     R2,#+0
   \   00000616   0x5442             STRB     R2,[R0, R1]
   \   00000618   0xE7BF             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_52:
   \   0000061A   0x....             LDR.N    R1,??DataTable10_21
   \   0000061C   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000620   0x223C             MOVS     R2,#+60
   \   00000622   0x71CA             STRB     R2,[R1, #+7]
   \   00000624   0x....             LDR.N    R1,??DataTable10_21
   \   00000626   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000062A   0x2200             MOVS     R2,#+0
   \   0000062C   0x720A             STRB     R2,[R1, #+8]
   \   0000062E   0x....             LDR.N    R1,??DataTable10_24
   \   00000630   0x2200             MOVS     R2,#+0
   \   00000632   0x5442             STRB     R2,[R0, R1]
   \   00000634   0xE7B1             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_51:
   \   00000636   0x....             LDR.N    R1,??DataTable10_21
   \   00000638   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   0000063C   0x2218             MOVS     R2,#+24
   \   0000063E   0x71CA             STRB     R2,[R1, #+7]
   \   00000640   0x....             LDR.N    R1,??DataTable10_21
   \   00000642   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000646   0x2200             MOVS     R2,#+0
   \   00000648   0x720A             STRB     R2,[R1, #+8]
   \   0000064A   0x....             LDR.N    R1,??DataTable10_24
   \   0000064C   0x2200             MOVS     R2,#+0
   \   0000064E   0x5442             STRB     R2,[R0, R1]
   \   00000650   0xE7A3             B.N      ??GUI_SYS_PARASET_46
   \                     ??GUI_SYS_PARASET_53:
   \   00000652   0x....             LDR.N    R1,??DataTable10_21
   \   00000654   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000658   0x223C             MOVS     R2,#+60
   \   0000065A   0x71CA             STRB     R2,[R1, #+7]
   \   0000065C   0x....             LDR.N    R1,??DataTable10_21
   \   0000065E   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000662   0x2200             MOVS     R2,#+0
   \   00000664   0x720A             STRB     R2,[R1, #+8]
   \   00000666   0x....             LDR.N    R1,??DataTable10_24
   \   00000668   0x2200             MOVS     R2,#+0
   \   0000066A   0x5442             STRB     R2,[R0, R1]
   \   0000066C   0xE795             B.N      ??GUI_SYS_PARASET_46
   1014                    }
   1015                }
   1016                
   1017          #if 0 //WK -->保存时  SysFlashData 全部保存 
   1018              for(int i=0;i<84;i++) 
   1019              {
   1020                SysFlashSave[i]=SysFlashDataT[i];
   1021              }
   1022              shell_ptr->ARGC=2;
   1023              shell_ptr->ARGV[0]="cd";
   1024              shell_ptr->ARGV[1]="f:\\"; 
   1025              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1026              
   1027              shell_ptr->ARGC = 2;
   1028              shell_ptr->ARGV[0]="cd";
   1029              shell_ptr->ARGV[1]="sysset";
   1030              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1031              
   1032              shell_ptr->ARGC=4;
   1033              shell_ptr->ARGV[0]="w";
   1034              shell_ptr->ARGV[1]="sysset.txt";
   1035              shell_ptr->ARGV[2]="begin";
   1036              shell_ptr->ARGV[3]="0";
   1037              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashDataT);
   1038              
   1039              shell_ptr->ARGC=2;
   1040              shell_ptr->ARGV[0]="update"; // wk --> update
   1041              shell_ptr->ARGV[1]="flush";
   1042          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashSave);
   1043              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
   1044          #endif  // WK -->保存时  SysFlashData 全部保存 END
   1045             
   1046          #if 1 // wk --> 只保存系统设置参数界面的参数   1-25
   1047              for(int i=0;i<25;i++) 
   \                     ??GUI_SYS_PARASET_47:
   \   0000066E   0x2000             MOVS     R0,#+0
   \   00000670   0xE004             B.N      ??GUI_SYS_PARASET_54
   1048              {
   1049                SysFlashData[i]=SysFlashDataT[i];
   \                     ??GUI_SYS_PARASET_55:
   \   00000672   0x....             LDR.N    R1,??DataTable10_25
   \   00000674   0x....             LDR.N    R2,??DataTable10_21
   \   00000676   0x5C82             LDRB     R2,[R0, R2]
   \   00000678   0x5442             STRB     R2,[R0, R1]
   1050              }
   \   0000067A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_PARASET_54:
   \   0000067C   0x2819             CMP      R0,#+25
   \   0000067E   0xDBF8             BLT.N    ??GUI_SYS_PARASET_55
   1051              shell_ptr->ARGC=2;
   \   00000680   0x2002             MOVS     R0,#+2
   \   00000682   0x6220             STR      R0,[R4, #+32]
   1052              shell_ptr->ARGV[0]="cd";
   \   00000684   0x....             ADR.N    R0,??DataTable10_5  ;; 0x63, 0x64, 0x00, 0x00
   \   00000686   0x6020             STR      R0,[R4, #+0]
   1053              shell_ptr->ARGV[1]="f:\\"; 
   \   00000688   0x....             ADR.N    R0,??DataTable10_6  ;; "f:\\"
   \   0000068A   0x6060             STR      R0,[R4, #+4]
   1054              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000068C   0x0021             MOVS     R1,R4
   \   0000068E   0x6A20             LDR      R0,[R4, #+32]
   \   00000690   0x.... 0x....      BL       Shell_cd
   1055              
   1056              shell_ptr->ARGC = 2;
   \   00000694   0x2002             MOVS     R0,#+2
   \   00000696   0x6220             STR      R0,[R4, #+32]
   1057              shell_ptr->ARGV[0]="cd";
   \   00000698   0x....             ADR.N    R0,??DataTable10_5  ;; 0x63, 0x64, 0x00, 0x00
   \   0000069A   0x6020             STR      R0,[R4, #+0]
   1058              shell_ptr->ARGV[1]="sysset";
   \   0000069C   0x....             LDR.N    R0,??DataTable10_17
   \   0000069E   0x6060             STR      R0,[R4, #+4]
   1059              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000006A0   0x0021             MOVS     R1,R4
   \   000006A2   0x6A20             LDR      R0,[R4, #+32]
   \   000006A4   0x.... 0x....      BL       Shell_cd
   1060              
   1061              shell_ptr->ARGC=4;
   \   000006A8   0x2004             MOVS     R0,#+4
   \   000006AA   0x6220             STR      R0,[R4, #+32]
   1062              shell_ptr->ARGV[0]="w";
   \   000006AC   0x....             ADR.N    R0,??DataTable10_7  ;; "w"
   \   000006AE   0x6020             STR      R0,[R4, #+0]
   1063              shell_ptr->ARGV[1]="sysset.txt";
   \   000006B0   0x....             LDR.N    R0,??DataTable10_19
   \   000006B2   0x6060             STR      R0,[R4, #+4]
   1064              shell_ptr->ARGV[2]="begin";
   \   000006B4   0x....             LDR.N    R0,??DataTable10_20
   \   000006B6   0x60A0             STR      R0,[R4, #+8]
   1065              shell_ptr->ARGV[3]="0";
   \   000006B8   0x....             ADR.N    R0,??DataTable10_8  ;; "0"
   \   000006BA   0x60E0             STR      R0,[R4, #+12]
   1066              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,25,SysFlashData); 
                     ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   000006BC   0x....             LDR.N    R3,??DataTable10_25
   \   000006BE   0x2219             MOVS     R2,#+25
   \   000006C0   0x0021             MOVS     R1,R4
   \   000006C2   0x6A20             LDR      R0,[R4, #+32]
   \   000006C4   0x.... 0x....      BL       Shell_write_binary
   1067              
   1068              shell_ptr->ARGC=2;
   \   000006C8   0x2002             MOVS     R0,#+2
   \   000006CA   0x6220             STR      R0,[R4, #+32]
   1069              shell_ptr->ARGV[0]="update";// wk --> update
   \   000006CC   0x.... 0x....      LDR.W    R0,??DataTable11
   \   000006D0   0x6020             STR      R0,[R4, #+0]
   1070              shell_ptr->ARGV[1]="flush";
   \   000006D2   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   000006D6   0x6060             STR      R0,[R4, #+4]
   1071          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,25,SysFlashSave);
   1072              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000006D8   0x0021             MOVS     R1,R4
   \   000006DA   0x6A20             LDR      R0,[R4, #+32]
   \   000006DC   0x.... 0x....      BL       Shell_update
   1073          #endif // wk --> 只保存系统设置参数界面的参数   1-25
   1074              
   1075              /*WK --> 保存成功标志 */
   1076              for(i=0;i<9;i++)
   \   000006E0   0xF05F 0x0800      MOVS     R8,#+0
   \   000006E4   0xE03D             B.N      ??GUI_SYS_PARASET_56
   1077                  {
   1078                    temp=2*i;
   1079                    temp1=7*i;
   1080                    if(i<3)
   1081                    {
   1082                      ParaSetC108[temp1 + 0] = 0x5004;            //显示相位的X坐标
   1083                    }
   1084                    else if(i==3)
   1085                    {
   1086                      ParaSetC108[temp1 + 0] = 0x4004;        //显示相位的X坐标  
   1087                    }
   1088                    else
   1089                    {
   1090                      ParaSetC108[temp1 + 0] = 0x2004;        //显示相位的X坐标  
   \                     ??GUI_SYS_PARASET_57:
   \   000006E6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000006E8   0xA814             ADD      R0,SP,#+80
   \   000006EA   0xF242 0x0104      MOVW     R1,#+8196
   \   000006EE   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   1091                    }
   1092                    ParaSetC108[temp1 + 1] = SysParaXY[temp];            //显示相位的X坐标
   \                     ??GUI_SYS_PARASET_58:
   \   000006F2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000006F4   0xA814             ADD      R0,SP,#+80
   \   000006F6   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   000006FA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006FC   0xA90B             ADD      R1,SP,#+44
   \   000006FE   0xF831 0x1015      LDRH     R1,[R1, R5, LSL #+1]
   \   00000702   0x8041             STRH     R1,[R0, #+2]
   1093                    ParaSetC108[temp1 + 2] = SysParaXY[temp + 1];     //Y坐标
   \   00000704   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000706   0xA814             ADD      R0,SP,#+80
   \   00000708   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000070C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000070E   0xA90B             ADD      R1,SP,#+44
   \   00000710   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000714   0x8849             LDRH     R1,[R1, #+2]
   \   00000716   0x8081             STRH     R1,[R0, #+4]
   1094                    ParaSetC108[temp1 + 3] = 0xffc1;         //黄色，下为黑色
   \   00000718   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000071A   0xA814             ADD      R0,SP,#+80
   \   0000071C   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   00000720   0xF64F 0x71C1      MOVW     R1,#+65473
   \   00000724   0x80C1             STRH     R1,[R0, #+6]
   1095                    ParaSetC108[temp1 + 4] = 0x0000;
   \   00000726   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000728   0xA814             ADD      R0,SP,#+80
   \   0000072A   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000072E   0x2100             MOVS     R1,#+0
   \   00000730   0x8101             STRH     R1,[R0, #+8]
   1096                    ParaSetC108[temp1 + 5] = 0;         //白色，下为黑色
   \   00000732   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000734   0xA814             ADD      R0,SP,#+80
   \   00000736   0xEB10 0x0046      ADDS     R0,R0,R6, LSL #+1
   \   0000073A   0x2100             MOVS     R1,#+0
   \   0000073C   0x8141             STRH     R1,[R0, #+10]
   1097                    ParaSetC108[temp1 + 6] = (U16) (SysFlashDataT[temp+8]<<8)+(U16)(SysFlashDataT[temp+7]);
   \   0000073E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000740   0x....             LDR.N    R0,??DataTable10_21
   \   00000742   0x1828             ADDS     R0,R5,R0
   \   00000744   0x7A00             LDRB     R0,[R0, #+8]
   \   00000746   0x0200             LSLS     R0,R0,#+8
   \   00000748   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000074A   0x....             LDR.N    R1,??DataTable10_21
   \   0000074C   0x1869             ADDS     R1,R5,R1
   \   0000074E   0x79C9             LDRB     R1,[R1, #+7]
   \   00000750   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000754   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000756   0xA914             ADD      R1,SP,#+80
   \   00000758   0xEB11 0x0146      ADDS     R1,R1,R6, LSL #+1
   \   0000075C   0x8188             STRH     R0,[R1, #+12]
   \   0000075E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??GUI_SYS_PARASET_56:
   \   00000762   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000766   0xF1B8 0x0F09      CMP      R8,#+9
   \   0000076A   0xD21E             BCS.N    ??GUI_SYS_PARASET_59
   \   0000076C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000770   0xEA5F 0x0548      LSLS     R5,R8,#+1
   \   00000774   0x2007             MOVS     R0,#+7
   \   00000776   0xFB00 0xF608      MUL      R6,R0,R8
   \   0000077A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000077E   0xF1B8 0x0F03      CMP      R8,#+3
   \   00000782   0xD206             BCS.N    ??GUI_SYS_PARASET_60
   \   00000784   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000786   0xA814             ADD      R0,SP,#+80
   \   00000788   0xF245 0x0104      MOVW     R1,#+20484
   \   0000078C   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   00000790   0xE7AF             B.N      ??GUI_SYS_PARASET_58
   \                     ??GUI_SYS_PARASET_60:
   \   00000792   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000796   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000079A   0xD1A4             BNE.N    ??GUI_SYS_PARASET_57
   \   0000079C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000079E   0xA814             ADD      R0,SP,#+80
   \   000007A0   0xF244 0x0104      MOVW     R1,#+16388
   \   000007A4   0xF820 0x1016      STRH     R1,[R0, R6, LSL #+1]
   \   000007A8   0xE7A3             B.N      ??GUI_SYS_PARASET_58
   1098                  }
   1099                  YADA_C0(ParaSetAddr, ParaSetC108, 63);  // WK --> 写暂存缓冲区
   \                     ??GUI_SYS_PARASET_59:
   \   000007AA   0x223F             MOVS     R2,#+63
   \   000007AC   0xA914             ADD      R1,SP,#+80
   \   000007AE   0xF44F 0x602B      MOV      R0,#+2736
   \   000007B2   0x.... 0x....      BL       YADA_C0
   1100                  delay_us(10);
   \   000007B6   0x200A             MOVS     R0,#+10
   \   000007B8   0x.... 0x....      BL       delay_us
   1101                  YADA_C108(ParaSetAddr, 9);   //写入有效值，每次10个
   \   000007BC   0x2109             MOVS     R1,#+9
   \   000007BE   0xF44F 0x602B      MOV      R0,#+2736
   \   000007C2   0x.... 0x....      BL       YADA_C108
   1102                  delay_us(10);  
   \   000007C6   0x200A             MOVS     R0,#+10
   \   000007C8   0x.... 0x....      BL       delay_us
   1103                  
   1104                  SysSet.ParaSaveFlg=0;  // WK --> 清楚标志
   \   000007CC   0x....             LDR.N    R0,??DataTable10_16
   \   000007CE   0x2100             MOVS     R1,#+0
   \   000007D0   0x70C1             STRB     R1,[R0, #+3]
   1105                  _mem_free(shell_ptr); 
   \   000007D2   0x0020             MOVS     R0,R4
   \   000007D4   0x.... 0x....      BL       _lwmem_free
   \   000007D8   0xE002             B.N      ??GUI_SYS_PARASET_61
   1106              }
   1107              else
   1108                 _mem_free(shell_ptr); 
   \                     ??GUI_SYS_PARASET_43:
   \   000007DA   0x0020             MOVS     R0,R4
   \   000007DC   0x.... 0x....      BL       _lwmem_free
   1109          }
   \                     ??GUI_SYS_PARASET_61:
   \   000007E0   0xB047             ADD      SP,SP,#+284
   \   000007E2   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??flg_sys:
   \   00000000                      DS8 12
   1110          /*******************************************************************************
   1111          * 函  数  名      : GUI_SYS_EVENTSET
   1112          * 描      述      : 事件限值设定。可通过移位键选择各项设置
   1113          * 输      入      : 无
   1114          * 返      回      : 无
   1115          *
   1116          * 修       改     : WK
   1117          * 时       间     : 2013-03-13
   1118          * 描       述     : 基于2013-03-08界面
   1119          *******************************************************************************/
   1120          

   \                                 In section .text, align 4, keep-with-next
   1121          void GUI_SYS_EVENTSET(void)
   1122          {
   \                     GUI_SYS_EVENTSET:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB0DB             SUB      SP,SP,#+364
   1123              float String2F=0.0;
   \   00000004   0x2600             MOVS     R6,#+0
   1124              U32 Float2L=0;
   \   00000006   0x2700             MOVS     R7,#+0
   1125              U8 k,temp=0;
   \   00000008   0x2500             MOVS     R5,#+0
   1126              U16 ParaSetC108[98]= {0};
   \   0000000A   0xA82A             ADD      R0,SP,#+168
   \   0000000C   0x21C4             MOVS     R1,#+196
   \   0000000E   0x.... 0x....      BL       __aeabi_memclr4
   1127              static U8 flg_event[11]={0}; // wk @130326 --> 事件设置参数超限标志
   1128              U16 NumWave;
   1129              U16 DotWave;
   1130              
   1131              SHELL_CONTEXT_PTR    shell_ptr;
   1132              shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000012   0xF44F 0x70F2      MOV      R0,#+484
   \   00000016   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000001A   0x0004             MOVS     R4,R0
   1133              _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000001C   0xF245 0x0101      MOVW     R1,#+20481
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       _lwmem_set_type
   1134              
   1135              U16 SysEventXY[22]= {
   1136                                    155,97, 155,133, 155,169, 155,205, 155,241, 155,278, 155,315,  /*WK --> 第1列数据坐标 */
   1137                                    481,97, 481,133, 481,169, 481,205 /* WK -->第2列数据坐标 */
   1138                                  }; 
   \   00000026   0xA809             ADD      R0,SP,#+36
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   0000002C   0x222C             MOVS     R2,#+44
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   1139              U16 SysEventSetSq[44]= {
   1140                                        /* WK -->第1列光标坐标 */
   1141                                        150,96,153,122, 150,132,153,158, 150,168,153,194, 150,204,153,230, 150,240,153,266, 150,276,153,304, 150,314,153,340,
   1142                                        /* WK -->第2列光标坐标 */
   1143                                        476,96,479,122, 476,132,479,158, 476,168,479,194, 476,204,479,230
   1144                                     }; //相、UI选择\区间所在的黑色矩形框
   \   00000032   0xA814             ADD      R0,SP,#+80
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   00000038   0x2258             MOVS     R2,#+88
   \   0000003A   0x.... 0x....      BL       __aeabi_memcpy4
   1145              if(SysSet.SwFlg)  // wk @130326 --> 第一次进入时，会读取Flash中保存数据
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xF000 0x80A2      BEQ.W    ??GUI_SYS_EVENTSET_0
   1146              {
   1147                  /* WK --> 光标 */
   1148                  YADA_40(0x0000,0xfc00);//前景色为黑色，背景色为橙色 set only once
   \   0000004A   0xF44F 0x417C      MOV      R1,#+64512
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       YADA_40
   1149                  YADA_5A(SysEventSetSq,4);
   \   00000054   0x2104             MOVS     R1,#+4
   \   00000056   0xA814             ADD      R0,SP,#+80
   \   00000058   0x.... 0x....      BL       YADA_5A
   1150                  //memcpy(&SysFlashData[EVESET_INDEX],SysEventAddr,48);
   1151          #if 0 // wk --> 全部读取Flash中参数      
   1152                  shell_ptr->ARGC = 2;
   1153                  shell_ptr->ARGV[0]="cd";
   1154                  shell_ptr->ARGV[1]="f:\\"; 
   1155                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1156                  
   1157                  shell_ptr->ARGC = 2;
   1158                  shell_ptr->ARGV[0]="cd";
   1159                  shell_ptr->ARGV[1]="sysset";
   1160                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1161                  
   1162                  shell_ptr->ARGC=1;
   1163                  shell_ptr->ARGV[0]="pwd";
   1164                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
   1165                  
   1166                  shell_ptr->ARGC=5;
   1167                  shell_ptr->ARGV[0]="read";
   1168                  shell_ptr->ARGV[1]="sysevent.txt";
   1169                  shell_ptr->ARGV[2]="84";
   1170                  shell_ptr->ARGV[3]="begin";
   1171                  shell_ptr->ARGV[4]="0";
   1172                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,SysFlashData);   
   1173          #endif // wk --> 全部读取Flash中参数     
   1174          
   1175          #if 1 // wk @130326 --> 只保存事件设置参数
   1176                  shell_ptr->ARGC = 2;
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x6220             STR      R0,[R4, #+32]
   1177                  shell_ptr->ARGV[0]="cd";
   \   00000060   0xA081             ADR.N    R0,??GUI_SYS_EVENTSET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000062   0x6020             STR      R0,[R4, #+0]
   1178                  shell_ptr->ARGV[1]="f:\\"; 
   \   00000064   0xA081             ADR.N    R0,??GUI_SYS_EVENTSET_1+0x4  ;; "f:\\"
   \   00000066   0x6060             STR      R0,[R4, #+4]
   1179                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000068   0x0021             MOVS     R1,R4
   \   0000006A   0x6A20             LDR      R0,[R4, #+32]
   \   0000006C   0x.... 0x....      BL       Shell_cd
   1180                  
   1181                  shell_ptr->ARGC = 2;
   \   00000070   0x2002             MOVS     R0,#+2
   \   00000072   0x6220             STR      R0,[R4, #+32]
   1182                  shell_ptr->ARGV[0]="cd";
   \   00000074   0xA07C             ADR.N    R0,??GUI_SYS_EVENTSET_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000076   0x6020             STR      R0,[R4, #+0]
   1183                  shell_ptr->ARGV[1]="sysset";
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   0000007C   0x6060             STR      R0,[R4, #+4]
   1184                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000007E   0x0021             MOVS     R1,R4
   \   00000080   0x6A20             LDR      R0,[R4, #+32]
   \   00000082   0x.... 0x....      BL       Shell_cd
   1185                  
   1186                  shell_ptr->ARGC=1;
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x6220             STR      R0,[R4, #+32]
   1187                  shell_ptr->ARGV[0]="pwd";
   \   0000008A   0xA079             ADR.N    R0,??GUI_SYS_EVENTSET_1+0x8  ;; "pwd"
   \   0000008C   0x6020             STR      R0,[R4, #+0]
   1188                  Shell_pwd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000008E   0x0021             MOVS     R1,R4
   \   00000090   0x6A20             LDR      R0,[R4, #+32]
   \   00000092   0x.... 0x....      BL       Shell_pwd
   1189                  
   1190                  shell_ptr->ARGC=5;
   \   00000096   0x2005             MOVS     R0,#+5
   \   00000098   0x6220             STR      R0,[R4, #+32]
   1191                  shell_ptr->ARGV[0]="read";
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   0000009E   0x6020             STR      R0,[R4, #+0]
   1192                  shell_ptr->ARGV[1]="sysevent.txt";
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   000000A4   0x6060             STR      R0,[R4, #+4]
   1193                  shell_ptr->ARGV[2]="44";
   \   000000A6   0xA073             ADR.N    R0,??GUI_SYS_EVENTSET_1+0xC  ;; 0x34, 0x34, 0x00, 0x00
   \   000000A8   0x60A0             STR      R0,[R4, #+8]
   1194                  shell_ptr->ARGV[3]="begin";
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   000000AE   0x60E0             STR      R0,[R4, #+12]
   1195                  shell_ptr->ARGV[4]="0";   // WK @130326  --> 事件设置参数偏移26保存
   \   000000B0   0xA071             ADR.N    R0,??GUI_SYS_EVENTSET_1+0x10  ;; "0"
   \   000000B2   0x6120             STR      R0,[R4, #+16]
   1196                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,&(SysFlashDataT[25]));  
   \   000000B4   0x.... 0x....      LDR.W    R2,??DataTable13_5
   \   000000B8   0x0021             MOVS     R1,R4
   \   000000BA   0x6A20             LDR      R0,[R4, #+32]
   \   000000BC   0x.... 0x....      BL       Shell_read_wk
   1197          #endif      
   1198                  SysSet.SwFlg=0;
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x7001             STRB     R1,[R0, #+0]
   1199                  
   1200                  for(k=0; k<11; k++)//在第一次时全部显示，以后每次数据更改时只修改相应的项
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0xE052             B.N      ??GUI_SYS_EVENTSET_2
   1201                  {
   1202                      temp=7*k;               // old --> 0x5204
   \                     ??GUI_SYS_EVENTSET_3:
   \   000000CC   0x2107             MOVS     R1,#+7
   \   000000CE   0xFB01 0xF500      MUL      R5,R1,R0
   1203                      ParaSetC108[temp + 0] = 0x3204;         //P  显示数据的模式
   \   000000D2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D4   0xA92A             ADD      R1,SP,#+168
   \   000000D6   0xF243 0x2204      MOVW     R2,#+12804
   \   000000DA   0xF821 0x2015      STRH     R2,[R1, R5, LSL #+1]
   1204                      ParaSetC108[temp + 1] = SysEventXY[2*k];            //显示相位的X坐标
   \   000000DE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E0   0xA92A             ADD      R1,SP,#+168
   \   000000E2   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0xAA09             ADD      R2,SP,#+36
   \   000000EA   0xF832 0x2020      LDRH     R2,[R2, R0, LSL #+2]
   \   000000EE   0x804A             STRH     R2,[R1, #+2]
   1205                      ParaSetC108[temp + 2] = SysEventXY[2*k + 1];     //Y坐标
   \   000000F0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F2   0x0041             LSLS     R1,R0,#+1
   \   000000F4   0xAA09             ADD      R2,SP,#+36
   \   000000F6   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000000FA   0x8849             LDRH     R1,[R1, #+2]
   \   000000FC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000FE   0xAA2A             ADD      R2,SP,#+168
   \   00000100   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000104   0x8091             STRH     R1,[R2, #+4]
   1206                      ParaSetC108[temp + 3] = 0xffff;         //白色，下为黑色
   \   00000106   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000108   0xA92A             ADD      R1,SP,#+168
   \   0000010A   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   0000010E   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000112   0x80CA             STRH     R2,[R1, #+6]
   1207                      ParaSetC108[temp + 4] = 0x0000;
   \   00000114   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000116   0xA92A             ADD      R1,SP,#+168
   \   00000118   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   0000011C   0x2200             MOVS     R2,#+0
   \   0000011E   0x810A             STRH     R2,[R1, #+8]
   1208                      ParaSetC108[temp + 5] =(U16) (SysFlashDataT[3+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[2+4*k+EVESET_INDEX]);
   \   00000120   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000126   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000012A   0x7F09             LDRB     R1,[R1, #+28]
   \   0000012C   0x0209             LSLS     R1,R1,#+8
   \   0000012E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000130   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000134   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000138   0x7ED2             LDRB     R2,[R2, #+27]
   \   0000013A   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   0000013E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000140   0xAA2A             ADD      R2,SP,#+168
   \   00000142   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000146   0x8151             STRH     R1,[R2, #+10]
   1209                      ParaSetC108[temp + 6] =(U16) (SysFlashDataT[1+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[4*k+EVESET_INDEX]);
   \   00000148   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000014E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000152   0x7E89             LDRB     R1,[R1, #+26]
   \   00000154   0x0209             LSLS     R1,R1,#+8
   \   00000156   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000158   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   0000015C   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000160   0x7E52             LDRB     R2,[R2, #+25]
   \   00000162   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   00000166   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000168   0xAA2A             ADD      R2,SP,#+168
   \   0000016A   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   0000016E   0x8191             STRH     R1,[R2, #+12]
   1210                  }
   \   00000170   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_2:
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x280B             CMP      R0,#+11
   \   00000176   0xD3A9             BCC.N    ??GUI_SYS_EVENTSET_3
   1211                  YADA_C0(EventSetAddr, ParaSetC108, 11*7);
   \   00000178   0x224D             MOVS     R2,#+77
   \   0000017A   0xA92A             ADD      R1,SP,#+168
   \   0000017C   0xF640 0x20F7      MOVW     R0,#+2807
   \   00000180   0x.... 0x....      BL       YADA_C0
   1212                  YADA_C108(EventSetAddr, 11);   //写入有效值，每次10个
   \   00000184   0x210B             MOVS     R1,#+11
   \   00000186   0xF640 0x20F7      MOVW     R0,#+2807
   \   0000018A   0x.... 0x....      BL       YADA_C108
   1213              }
   1214              
   1215              if(SysSet.FuncFlg)//右移、左移、T，修改光标
   \                     ??GUI_SYS_EVENTSET_0:
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000192   0x7840             LDRB     R0,[R0, #+1]
   \   00000194   0x2800             CMP      R0,#+0
   \   00000196   0xD01F             BEQ.N    ??GUI_SYS_EVENTSET_4
   1216              {
   1217                  YADA_5B(&SysEventSetSq[SysEventOldIndex*4],4);//擦除前一处
   \   00000198   0x2104             MOVS     R1,#+4
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0xAA14             ADD      R2,SP,#+80
   \   000001A2   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   000001A6   0x.... 0x....      BL       YADA_5B
   1218                  YADA_5A(&SysEventSetSq[SysSet.EvntIndex*4],4);    //背景色填充相所在的矩形区域
   \   000001AA   0x2104             MOVS     R1,#+4
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001B0   0x79C0             LDRB     R0,[R0, #+7]
   \   000001B2   0xAA14             ADD      R2,SP,#+80
   \   000001B4   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   000001B8   0x.... 0x....      BL       YADA_5A
   1219                  SysEventOldIndex=SysSet.EvntIndex;
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001C0   0x79C0             LDRB     R0,[R0, #+7]
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   000001C6   0x7008             STRB     R0,[R1, #+0]
   1220                  SysSet.FuncFlg=0;
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001CC   0x2100             MOVS     R1,#+0
   \   000001CE   0x7041             STRB     R1,[R0, #+1]
   1221                  SysSet.DataCnt=0;//切换时键盘输入清零 so you don't need to clear the SysSet.Data Array
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001D4   0x2100             MOVS     R1,#+0
   \   000001D6   0x7201             STRB     R1,[R0, #+8]
   1222              }
   1223              
   1224              if(SysSet.DataFlg)//修改一项数据
   \                     ??GUI_SYS_EVENTSET_4:
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001DC   0x7880             LDRB     R0,[R0, #+2]
   \   000001DE   0x2800             CMP      R0,#+0
   \   000001E0   0xF000 0x8205      BEQ.W    ??GUI_SYS_EVENTSET_5
   1225              {
   1226                if(SysSet.DataFlg)
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001E8   0x7880             LDRB     R0,[R0, #+2]
   \   000001EA   0x2800             CMP      R0,#+0
   \   000001EC   0xD004             BEQ.N    ??GUI_SYS_EVENTSET_6
   1227                {
   1228                  SysFlashDataT[EVESEND_FLAG]=0;
   \   000001EE   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000001F2   0x2100             MOVS     R1,#+0
   \   000001F4   0xF880 0x1046      STRB     R1,[R0, #+70]
   1229                }
   1230                
   1231                if(SysSet.DataCnt==0)//clear key
   \                     ??GUI_SYS_EVENTSET_6:
   \   000001F8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000001FC   0x7A00             LDRB     R0,[R0, #+8]
   \   000001FE   0x2800             CMP      R0,#+0
   \   00000200   0xD101             BNE.N    ??GUI_SYS_EVENTSET_7
   1232                  {
   1233                      String2F=0;
   \   00000202   0x2600             MOVS     R6,#+0
   \   00000204   0xE05D             B.N      ??GUI_SYS_EVENTSET_8
   1234                  }
   1235                  else
   1236                  {
   1237                      U8 i;
   1238                      float k;
   1239                      //把字符转化为浮点数
   1240                      for( i=0; i<SysSet.DataCnt&&SysSet.Data[i]!='.'; i++) //利用输入数据个数
   \                     ??GUI_SYS_EVENTSET_7:
   \   00000206   0x2500             MOVS     R5,#+0
   \   00000208   0xE015             B.N      ??GUI_SYS_EVENTSET_9
   1241                      {
   1242                          String2F=String2F*10+SysSet.Data[i]-'0';    //求整数部分
   \                     ??GUI_SYS_EVENTSET_10:
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable13_10  ;; 0x41200000
   \   0000020E   0x0031             MOVS     R1,R6
   \   00000210   0x.... 0x....      BL       __aeabi_fmul
   \   00000214   0x0006             MOVS     R6,R0
   \   00000216   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000021C   0x1828             ADDS     R0,R5,R0
   \   0000021E   0x7A40             LDRB     R0,[R0, #+9]
   \   00000220   0x.... 0x....      BL       __aeabi_ui2f
   \   00000224   0x0031             MOVS     R1,R6
   \   00000226   0x.... 0x....      BL       __aeabi_fadd
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable13_11  ;; 0xc2400000
   \   0000022E   0x.... 0x....      BL       __aeabi_fadd
   \   00000232   0x0006             MOVS     R6,R0
   1243                      }
   \   00000234   0x1C6D             ADDS     R5,R5,#+1
   \                     ??GUI_SYS_EVENTSET_9:
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000023A   0x7A00             LDRB     R0,[R0, #+8]
   \   0000023C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000023E   0x4285             CMP      R5,R0
   \   00000240   0xD206             BCS.N    ??GUI_SYS_EVENTSET_11
   \   00000242   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000248   0x1828             ADDS     R0,R5,R0
   \   0000024A   0x7A40             LDRB     R0,[R0, #+9]
   \   0000024C   0x282E             CMP      R0,#+46
   \   0000024E   0xD1DC             BNE.N    ??GUI_SYS_EVENTSET_10
   1244                      if(SysSet.Data[i]=='.')
   \                     ??GUI_SYS_EVENTSET_11:
   \   00000250   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000252   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000256   0x1828             ADDS     R0,R5,R0
   \   00000258   0x7A40             LDRB     R0,[R0, #+9]
   \   0000025A   0x282E             CMP      R0,#+46
   \   0000025C   0xD131             BNE.N    ??GUI_SYS_EVENTSET_8
   1245                          for(i++,k=0.1; i<SysSet.DataCnt&&SysSet.Data[i]!='.'; i++,k=k/10)
   \   0000025E   0x1C6D             ADDS     R5,R5,#+1
   \   00000260   0x.... 0x....      LDR.W    R7,??DataTable13_12  ;; 0x3dcccccd
   \   00000264   0xE020             B.N      ??GUI_SYS_EVENTSET_12
   \   00000266   0xBF00             Nop      
   \                     ??GUI_SYS_EVENTSET_1:
   \   00000268   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    
   \   0000026C   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    
   \   00000270   0x70 0x77          DC8      "pwd"
   \              0x64 0x00    
   \   00000274   0x34 0x34          DC8      0x34, 0x34, 0x00, 0x00
   \              0x00 0x00    
   \   00000278   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    
   1246                          {
   1247                              String2F=String2F+(SysSet.Data[i]-'0')*k;
   \                     ??GUI_SYS_EVENTSET_13:
   \   0000027C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000027E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000282   0x1828             ADDS     R0,R5,R0
   \   00000284   0x7A40             LDRB     R0,[R0, #+9]
   \   00000286   0x3830             SUBS     R0,R0,#+48
   \   00000288   0x.... 0x....      BL       __aeabi_i2f
   \   0000028C   0x0039             MOVS     R1,R7
   \   0000028E   0x.... 0x....      BL       __aeabi_fmul
   \   00000292   0x0031             MOVS     R1,R6
   \   00000294   0x.... 0x....      BL       __aeabi_fadd
   \   00000298   0x0006             MOVS     R6,R0
   1248                          }
   \   0000029A   0x1C6D             ADDS     R5,R5,#+1
   \   0000029C   0x0038             MOVS     R0,R7
   \   0000029E   0x.... 0x....      LDR.W    R1,??DataTable13_10  ;; 0x41200000
   \   000002A2   0x.... 0x....      BL       __aeabi_fdiv
   \   000002A6   0x0007             MOVS     R7,R0
   \                     ??GUI_SYS_EVENTSET_12:
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002AC   0x7A00             LDRB     R0,[R0, #+8]
   \   000002AE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002B0   0x4285             CMP      R5,R0
   \   000002B2   0xD206             BCS.N    ??GUI_SYS_EVENTSET_8
   \   000002B4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002B6   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002BA   0x1828             ADDS     R0,R5,R0
   \   000002BC   0x7A40             LDRB     R0,[R0, #+9]
   \   000002BE   0x282E             CMP      R0,#+46
   \   000002C0   0xD1DC             BNE.N    ??GUI_SYS_EVENTSET_13
   1249                  }
   1250                    
   1251                  Float2L=(long)(String2F*100);//enlarge 100 times
   \                     ??GUI_SYS_EVENTSET_8:
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable13_13  ;; 0x42c80000
   \   000002C6   0x0031             MOVS     R1,R6
   \   000002C8   0x.... 0x....      BL       __aeabi_fmul
   \   000002CC   0x.... 0x....      BL       __aeabi_f2iz
   \   000002D0   0x0007             MOVS     R7,R0
   1252                  temp=SysSet.EvntIndex*4;
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002D6   0x79C0             LDRB     R0,[R0, #+7]
   \   000002D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002DA   0x0085             LSLS     R5,R0,#+2
   1253                  SysFlashDataT[temp+EVESET_INDEX]=(U8)(Float2L);  //四字节数
   \   000002DC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002DE   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000002E2   0x1828             ADDS     R0,R5,R0
   \   000002E4   0x7647             STRB     R7,[R0, #+25]
   1254                  SysFlashDataT[temp+1+EVESET_INDEX]=(U8)(Float2L>>8);
   \   000002E6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000002EC   0x1828             ADDS     R0,R5,R0
   \   000002EE   0x0A39             LSRS     R1,R7,#+8
   \   000002F0   0x7681             STRB     R1,[R0, #+26]
   1255                  SysFlashDataT[temp+2+EVESET_INDEX]=(U8)(Float2L>>16);
   \   000002F2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002F4   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000002F8   0x1828             ADDS     R0,R5,R0
   \   000002FA   0x0C39             LSRS     R1,R7,#+16
   \   000002FC   0x76C1             STRB     R1,[R0, #+27]
   1256                  SysFlashDataT[temp+3+EVESET_INDEX]=(U8)(Float2L>>24);
   \   000002FE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000304   0x1828             ADDS     R0,R5,R0
   \   00000306   0x0E39             LSRS     R1,R7,#+24
   \   00000308   0x7701             STRB     R1,[R0, #+28]
   1257                  
   1258                  U16 OneC108[7]= {0x3204,SysEventXY[2*SysSet.EvntIndex],SysEventXY[2*SysSet.EvntIndex + 1],0xffff,0x0000};
   \   0000030A   0xA805             ADD      R0,SP,#+20
   \   0000030C   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   00000310   0x2210             MOVS     R2,#+16
   \   00000312   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000031A   0x79C0             LDRB     R0,[R0, #+7]
   \   0000031C   0xA909             ADD      R1,SP,#+36
   \   0000031E   0xF831 0x0020      LDRH     R0,[R1, R0, LSL #+2]
   \   00000322   0xF8AD 0x0016      STRH     R0,[SP, #+22]
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000032A   0x79C0             LDRB     R0,[R0, #+7]
   \   0000032C   0x0040             LSLS     R0,R0,#+1
   \   0000032E   0xA909             ADD      R1,SP,#+36
   \   00000330   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000334   0x8840             LDRH     R0,[R0, #+2]
   \   00000336   0xF8AD 0x0018      STRH     R0,[SP, #+24]
   1259                  if(SysFlashDataT[EVESEND_FLAG])
   \   0000033A   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   0000033E   0xF890 0x0046      LDRB     R0,[R0, #+70]
   \   00000342   0x2800             CMP      R0,#+0
   \   00000344   0xD003             BEQ.N    ??GUI_SYS_EVENTSET_14
   1260                  {
   1261                    OneC108[3]=0xffe0;
   \   00000346   0xF64F 0x70E0      MOVW     R0,#+65504
   \   0000034A   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1262                  }
   1263                  OneC108[5] =(U16) (SysFlashDataT[3+temp+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[2+temp+EVESET_INDEX]);
   \                     ??GUI_SYS_EVENTSET_14:
   \   0000034E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000350   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000354   0x1828             ADDS     R0,R5,R0
   \   00000356   0x7F00             LDRB     R0,[R0, #+28]
   \   00000358   0x0200             LSLS     R0,R0,#+8
   \   0000035A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000035C   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000360   0x1869             ADDS     R1,R5,R1
   \   00000362   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000364   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000368   0xF8AD 0x001E      STRH     R0,[SP, #+30]
   1264                  OneC108[6] =(U16) (SysFlashDataT[1+temp+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[temp+EVESET_INDEX]);
   \   0000036C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000036E   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000372   0x1828             ADDS     R0,R5,R0
   \   00000374   0x7E80             LDRB     R0,[R0, #+26]
   \   00000376   0x0200             LSLS     R0,R0,#+8
   \   00000378   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000037A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000037E   0x1869             ADDS     R1,R5,R1
   \   00000380   0x7E49             LDRB     R1,[R1, #+25]
   \   00000382   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000386   0xF8AD 0x0020      STRH     R0,[SP, #+32]
   1265                  
   1266                  /* WK --> 阈值判断 */
   1267                  switch(SysSet.EvntIndex)
   \   0000038A   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000038E   0x79C0             LDRB     R0,[R0, #+7]
   \   00000390   0x2800             CMP      R0,#+0
   \   00000392   0xD017             BEQ.N    ??GUI_SYS_EVENTSET_15
   \   00000394   0x2802             CMP      R0,#+2
   \   00000396   0xD07B             BEQ.N    ??GUI_SYS_EVENTSET_16
   \   00000398   0xD353             BCC.N    ??GUI_SYS_EVENTSET_17
   \   0000039A   0x2804             CMP      R0,#+4
   \   0000039C   0xF000 0x809D      BEQ.W    ??GUI_SYS_EVENTSET_18
   \   000003A0   0xF0C0 0x8089      BCC.W    ??GUI_SYS_EVENTSET_19
   \   000003A4   0x2806             CMP      R0,#+6
   \   000003A6   0xF000 0x80BC      BEQ.W    ??GUI_SYS_EVENTSET_20
   \   000003AA   0xF0C0 0x80A8      BCC.W    ??GUI_SYS_EVENTSET_21
   \   000003AE   0x2808             CMP      R0,#+8
   \   000003B0   0xF000 0x80DC      BEQ.W    ??GUI_SYS_EVENTSET_22
   \   000003B4   0xF0C0 0x80C7      BCC.W    ??GUI_SYS_EVENTSET_23
   \   000003B8   0x280A             CMP      R0,#+10
   \   000003BA   0xF000 0x80EB      BEQ.W    ??GUI_SYS_EVENTSET_24
   \   000003BE   0xF0C0 0x80D6      BCC.W    ??GUI_SYS_EVENTSET_25
   \   000003C2   0xE0F9             B.N      ??GUI_SYS_EVENTSET_26
   1268                  {
   1269                  case 0:
   1270                    if(((OneC108[6]+((U32)OneC108[5]<<16))!=400)|| ((OneC108[6]+((U32)OneC108[5]<<16))!=600)||
   1271                              ((OneC108[6]+((U32)OneC108[5]<<16))!=800)|| ((OneC108[6]+((U32)OneC108[5]<<16))!=1000)||
   1272                              ((OneC108[6]+((U32)OneC108[5]<<16))!=1200))
   \                     ??GUI_SYS_EVENTSET_15:
   \   000003C4   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003C8   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   000003CC   0x0409             LSLS     R1,R1,#+16
   \   000003CE   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000003D2   0xF44F 0x71C8      MOV      R1,#+400
   \   000003D6   0x4288             CMP      R0,R1
   \   000003D8   0xD12A             BNE.N    ??GUI_SYS_EVENTSET_27
   \   000003DA   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003DE   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   000003E2   0x0409             LSLS     R1,R1,#+16
   \   000003E4   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000003E8   0xF44F 0x7116      MOV      R1,#+600
   \   000003EC   0x4288             CMP      R0,R1
   \   000003EE   0xD11F             BNE.N    ??GUI_SYS_EVENTSET_27
   \   000003F0   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000003F4   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   000003F8   0x0409             LSLS     R1,R1,#+16
   \   000003FA   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000003FE   0xF44F 0x7148      MOV      R1,#+800
   \   00000402   0x4288             CMP      R0,R1
   \   00000404   0xD114             BNE.N    ??GUI_SYS_EVENTSET_27
   \   00000406   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000040A   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   0000040E   0x0409             LSLS     R1,R1,#+16
   \   00000410   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000414   0xF44F 0x717A      MOV      R1,#+1000
   \   00000418   0x4288             CMP      R0,R1
   \   0000041A   0xD109             BNE.N    ??GUI_SYS_EVENTSET_27
   \   0000041C   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000420   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   00000424   0x0409             LSLS     R1,R1,#+16
   \   00000426   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000042A   0xF5B0 0x6F96      CMP      R0,#+1200
   \   0000042E   0xD007             BEQ.N    ??GUI_SYS_EVENTSET_28
   1273                     { 
   1274                      OneC108[3]=0xf800;
   \                     ??GUI_SYS_EVENTSET_27:
   \   00000430   0xF44F 0x4078      MOV      R0,#+63488
   \   00000434   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1275                      flg_event[0]=1;
   \   00000438   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000043C   0x2101             MOVS     R1,#+1
   \   0000043E   0x7001             STRB     R1,[R0, #+0]
   1276                     }
   1277                      break;
   \                     ??GUI_SYS_EVENTSET_28:
   \   00000440   0xE0BA             B.N      ??GUI_SYS_EVENTSET_29
   1278                  case 1:
   1279                    if(((OneC108[6]+(OneC108[5]<<16))!=6400)|| ((OneC108[6]+(OneC108[5]<<16))!=12800)|| 
   1280                       ((OneC108[6]+(OneC108[5]<<16))!=25600))
   \                     ??GUI_SYS_EVENTSET_17:
   \   00000442   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000446   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   0000044A   0x0409             LSLS     R1,R1,#+16
   \   0000044C   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000450   0xF5B0 0x5FC8      CMP      R0,#+6400
   \   00000454   0xD113             BNE.N    ??GUI_SYS_EVENTSET_30
   \   00000456   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000045A   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   0000045E   0x0409             LSLS     R1,R1,#+16
   \   00000460   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000464   0xF5B0 0x5F48      CMP      R0,#+12800
   \   00000468   0xD109             BNE.N    ??GUI_SYS_EVENTSET_30
   \   0000046A   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000046E   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   00000472   0x0409             LSLS     R1,R1,#+16
   \   00000474   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000478   0xF5B0 0x4FC8      CMP      R0,#+25600
   \   0000047C   0xD007             BEQ.N    ??GUI_SYS_EVENTSET_31
   1281                    {
   1282                      OneC108[3]=0xf800;
   \                     ??GUI_SYS_EVENTSET_30:
   \   0000047E   0xF44F 0x4078      MOV      R0,#+63488
   \   00000482   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1283                      flg_event[1]=1;
   \   00000486   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000048A   0x2101             MOVS     R1,#+1
   \   0000048C   0x7041             STRB     R1,[R0, #+1]
   1284                    }
   1285                      break;
   \                     ??GUI_SYS_EVENTSET_31:
   \   0000048E   0xE093             B.N      ??GUI_SYS_EVENTSET_29
   1286                  case 2:
   1287                     if((OneC108[6]+(OneC108[5]<<16))>UDeviation)
   \                     ??GUI_SYS_EVENTSET_16:
   \   00000490   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000494   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   00000498   0x0409             LSLS     R1,R1,#+16
   \   0000049A   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000049E   0xF5B0 0x7F2F      CMP      R0,#+700
   \   000004A2   0xDD07             BLE.N    ??GUI_SYS_EVENTSET_32
   1288                     {
   1289                      OneC108[3]=0xf800;
   \   000004A4   0xF44F 0x4078      MOV      R0,#+63488
   \   000004A8   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1290                      flg_event[2]=1;
   \   000004AC   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000004B0   0x2101             MOVS     R1,#+1
   \   000004B2   0x7081             STRB     R1,[R0, #+2]
   1291                     }
   1292                      break;
   \                     ??GUI_SYS_EVENTSET_32:
   \   000004B4   0xE080             B.N      ??GUI_SYS_EVENTSET_29
   1293                  case 3:
   1294                     if((OneC108[6]+(OneC108[5]<<16))>FDeviation)
   \                     ??GUI_SYS_EVENTSET_19:
   \   000004B6   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000004BA   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   000004BE   0x0409             LSLS     R1,R1,#+16
   \   000004C0   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000004C4   0x2803             CMP      R0,#+3
   \   000004C6   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_33
   1295                     {
   1296                      OneC108[3]=0xf800;
   \   000004C8   0xF44F 0x4078      MOV      R0,#+63488
   \   000004CC   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1297                      flg_event[3]=1;
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000004D4   0x2101             MOVS     R1,#+1
   \   000004D6   0x70C1             STRB     R1,[R0, #+3]
   1298                     }
   1299                      break;
   \                     ??GUI_SYS_EVENTSET_33:
   \   000004D8   0xE06E             B.N      ??GUI_SYS_EVENTSET_29
   1300                  case 4:
   1301                    if((OneC108[6]+(OneC108[5]<<16))>USurge)
   \                     ??GUI_SYS_EVENTSET_18:
   \   000004DA   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   000004DE   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   000004E2   0x0409             LSLS     R1,R1,#+16
   \   000004E4   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000004E8   0x28C9             CMP      R0,#+201
   \   000004EA   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_34
   1302                    {
   1303                      OneC108[3]=0xf800;
   \   000004EC   0xF44F 0x4078      MOV      R0,#+63488
   \   000004F0   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1304                      flg_event[4]=1;          
   \   000004F4   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000004F8   0x2101             MOVS     R1,#+1
   \   000004FA   0x7101             STRB     R1,[R0, #+4]
   1305                    }
   1306                    break;
   \                     ??GUI_SYS_EVENTSET_34:
   \   000004FC   0xE05C             B.N      ??GUI_SYS_EVENTSET_29
   1307                  case 5:
   1308                    if((OneC108[6]+(OneC108[5]<<16))>NUnblance)
   \                     ??GUI_SYS_EVENTSET_21:
   \   000004FE   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000502   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   00000506   0x0409             LSLS     R1,R1,#+16
   \   00000508   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000050C   0x28C9             CMP      R0,#+201
   \   0000050E   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_35
   1309                    {
   1310                      OneC108[3]=0xf800;
   \   00000510   0xF44F 0x4078      MOV      R0,#+63488
   \   00000514   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1311                      flg_event[5]=1;          
   \   00000518   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000051C   0x2101             MOVS     R1,#+1
   \   0000051E   0x7141             STRB     R1,[R0, #+5]
   1312                    }
   1313                    break;
   \                     ??GUI_SYS_EVENTSET_35:
   \   00000520   0xE04A             B.N      ??GUI_SYS_EVENTSET_29
   1314                  case 6:
   1315                    if((OneC108[6]+(OneC108[5]<<16))>LngFlick)
   \                     ??GUI_SYS_EVENTSET_20:
   \   00000522   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000526   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   0000052A   0x0409             LSLS     R1,R1,#+16
   \   0000052C   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000530   0x2865             CMP      R0,#+101
   \   00000532   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_36
   1316                    {
   1317                      OneC108[3]=0xf800;
   \   00000534   0xF44F 0x4078      MOV      R0,#+63488
   \   00000538   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1318                      flg_event[6]=1;          
   \   0000053C   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000540   0x2101             MOVS     R1,#+1
   \   00000542   0x7181             STRB     R1,[R0, #+6]
   1319                    }
   1320                    break;
   \                     ??GUI_SYS_EVENTSET_36:
   \   00000544   0xE038             B.N      ??GUI_SYS_EVENTSET_29
   1321                  case 7:
   1322                    if((OneC108[6]+(OneC108[5]<<16))>TotalHarmonic)
   \                     ??GUI_SYS_EVENTSET_23:
   \   00000546   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   0000054A   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   0000054E   0x0409             LSLS     R1,R1,#+16
   \   00000550   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000554   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000558   0xDD07             BLE.N    ??GUI_SYS_EVENTSET_37
   1323                    {
   1324                      OneC108[3]=0xf800;
   \   0000055A   0xF44F 0x4078      MOV      R0,#+63488
   \   0000055E   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1325                      flg_event[7]=1;          
   \   00000562   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000566   0x2101             MOVS     R1,#+1
   \   00000568   0x71C1             STRB     R1,[R0, #+7]
   1326                    }
   1327                    break;
   \                     ??GUI_SYS_EVENTSET_37:
   \   0000056A   0xE025             B.N      ??GUI_SYS_EVENTSET_29
   1328                  case 8:  //WK @130326 -->间谐波暂时没有做
   1329                    break;
   \                     ??GUI_SYS_EVENTSET_22:
   \   0000056C   0xE024             B.N      ??GUI_SYS_EVENTSET_29
   1330                  case 9:
   1331                    if((OneC108[6]+(OneC108[5]<<16))>UHarmonic)
   \                     ??GUI_SYS_EVENTSET_25:
   \   0000056E   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000572   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   00000576   0x0409             LSLS     R1,R1,#+16
   \   00000578   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000057C   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000580   0xDD07             BLE.N    ??GUI_SYS_EVENTSET_38
   1332                    {
   1333                      OneC108[3]=0xf800;
   \   00000582   0xF44F 0x4078      MOV      R0,#+63488
   \   00000586   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1334                      flg_event[9]=1;          
   \   0000058A   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000058E   0x2101             MOVS     R1,#+1
   \   00000590   0x7241             STRB     R1,[R0, #+9]
   1335                    }
   1336                    break;
   \                     ??GUI_SYS_EVENTSET_38:
   \   00000592   0xE011             B.N      ??GUI_SYS_EVENTSET_29
   1337                  case 10:
   1338                    if((OneC108[6]+(OneC108[5]<<16))>IHarmonic)
   \                     ??GUI_SYS_EVENTSET_24:
   \   00000594   0xF8BD 0x0020      LDRH     R0,[SP, #+32]
   \   00000598   0xF8BD 0x101E      LDRH     R1,[SP, #+30]
   \   0000059C   0x0409             LSLS     R1,R1,#+16
   \   0000059E   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000005A2   0x28C9             CMP      R0,#+201
   \   000005A4   0xDB07             BLT.N    ??GUI_SYS_EVENTSET_39
   1339                    {
   1340                      OneC108[3]=0xf800;
   \   000005A6   0xF44F 0x4078      MOV      R0,#+63488
   \   000005AA   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   1341                      flg_event[10]=1;          
   \   000005AE   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000005B2   0x2101             MOVS     R1,#+1
   \   000005B4   0x7281             STRB     R1,[R0, #+10]
   1342                    }
   1343                    break;      
   \                     ??GUI_SYS_EVENTSET_39:
   \   000005B6   0xE7FF             B.N      ??GUI_SYS_EVENTSET_29
   1344                  default:
   1345                    break;
   1346                  }
   1347                  YADA_C0(EventSetAddr+SysSet.EvntIndex*7, OneC108, 7);//修改发生改变的数据项
   \                     ??GUI_SYS_EVENTSET_26:
   \                     ??GUI_SYS_EVENTSET_29:
   \   000005B8   0x2207             MOVS     R2,#+7
   \   000005BA   0xA905             ADD      R1,SP,#+20
   \   000005BC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000005C0   0x79C0             LDRB     R0,[R0, #+7]
   \   000005C2   0x2307             MOVS     R3,#+7
   \   000005C4   0x4358             MULS     R0,R3,R0
   \   000005C6   0xF600 0x20F7      ADDW     R0,R0,#+2807
   \   000005CA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000005CC   0x.... 0x....      BL       YADA_C0
   1348                  YADA_C108(EventSetAddr+SysSet.EvntIndex*7, 1);
   \   000005D0   0x2101             MOVS     R1,#+1
   \   000005D2   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000005D6   0x79C0             LDRB     R0,[R0, #+7]
   \   000005D8   0x2207             MOVS     R2,#+7
   \   000005DA   0x4350             MULS     R0,R2,R0
   \   000005DC   0xF600 0x20F7      ADDW     R0,R0,#+2807
   \   000005E0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000005E2   0x.... 0x....      BL       YADA_C108
   1349                  SysSet.DataFlg=0;
   \   000005E6   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000005EA   0x2100             MOVS     R1,#+0
   \   000005EC   0x7081             STRB     R1,[R0, #+2]
   1350              }
   1351              
   1352              if(SysSet.EventSaveFlg)//将参数值发给DSP
   \                     ??GUI_SYS_EVENTSET_5:
   \   000005EE   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000005F2   0x7900             LDRB     R0,[R0, #+4]
   \   000005F4   0x2800             CMP      R0,#+0
   \   000005F6   0xF000 0x82AB      BEQ.W    ??GUI_SYS_EVENTSET_40
   1353              {
   1354               for(int i=0;i<11;i++)
   \   000005FA   0x2000             MOVS     R0,#+0
   \   000005FC   0xE000             B.N      ??GUI_SYS_EVENTSET_41
   1355                if(flg_event[i]==1)
   1356                  switch(i)
   1357                  {
   1358                    case 0:
   1359                      if( (SysFlashDataT[4*i+EVESET_INDEX+0]+((U32)SysFlashDataT[4*i+EVESET_INDEX+1]<<8)+((U32)SysFlashDataT[4*i+EVESET_INDEX+2]<<16))<=400)
   1360                      {
   1361                          NumWave=400;
   1362                      }
   1363                      else if((SysFlashDataT[4*i+EVESET_INDEX]+((U32)SysFlashDataT[4*i+EVESET_INDEX+1]<<8)+((U32)SysFlashDataT[4*i+EVESET_INDEX+2]<<16))<=600)
   1364                      {
   1365                          NumWave=600;
   1366                      }
   1367                      else if((SysFlashDataT[4*i+EVESET_INDEX]+((U32)SysFlashDataT[4*i+EVESET_INDEX+1]<<8)+((U32)SysFlashDataT[4*i+EVESET_INDEX+2]<<16))<=800)
   1368                      {
   1369                          NumWave=800;
   1370                      }
   1371                      else if((SysFlashDataT[4*i+EVESET_INDEX]+((U32)SysFlashDataT[4*i+EVESET_INDEX+1]<<8)+((U32)SysFlashDataT[4*i+EVESET_INDEX+2]<<16))<=1000)
   1372                      {
   1373                          NumWave=1000;
   1374                      }
   1375                      else
   1376                      {
   1377                          NumWave=1200;
   1378                      }
   1379                     SysFlashDataT[4*i+25]=(U8)(NumWave)%256;
   1380                     SysFlashDataT[4*i+26]=(U8)((NumWave)>>8)%256;
   1381                     SysFlashDataT[4*i+27]=(U8)((NumWave)>>16)%256;
   1382                     SysFlashDataT[4*i+28]=(U8)((NumWave)>>24)%256;
   1383                     flg_event[i]=0;
   1384                     break;
   1385                   case 1:
   1386                     if( (SysFlashDataT[4*i+25]+(SysFlashDataT[4*i+26]<<8)+(SysFlashDataT[4*i+27]<<16))<=6400)
   1387                       DotWave=6400;
   1388                     else if((SysFlashDataT[4*i+25]+(SysFlashDataT[4*i+26]<<8)+(SysFlashDataT[4*i+27]<<16))<=12800)
   1389                       DotWave=12800;
   1390                     else
   1391                       DotWave=25600;
   1392                     SysFlashDataT[4*i+25]=(U8)(DotWave)%256;
   1393                     SysFlashDataT[4*i+26]=(U8)(DotWave>>8)%256;
   1394                     SysFlashDataT[4*i+27]=(U8)(DotWave>>16)%256;
   1395                     SysFlashDataT[4*i+28]=(U8)(DotWave>>24)%256;
   1396                     flg_event[i]=0;
   1397                     break;
   1398                  case 2:
   1399                     SysFlashDataT[4*i+25]=(U8)(UDeviation)%256;
   1400                     SysFlashDataT[4*i+26]=(U8)(UDeviation>>8)%256;
   1401                     SysFlashDataT[4*i+27]=(U8)(UDeviation>>16)%256;
   1402                     SysFlashDataT[4*i+28]=(U8)(UDeviation>>24)%256;
   1403                     flg_event[i]=0;
   1404                     break;
   1405                  case 3:
   1406                     SysFlashDataT[4*i+25]=(U8)(FDeviation)%256;
   1407                     SysFlashDataT[4*i+26]=(U8)(FDeviation>>8)%256;
   1408                     SysFlashDataT[4*i+27]=(U8)(FDeviation>>16)%256;
   1409                     SysFlashDataT[4*i+28]=(U8)(FDeviation>>24)%256;
   1410                     flg_event[i]=0;
   1411                     break;
   1412                  case 4:
   1413                     SysFlashDataT[4*i+25]=(U8)(USurge)%256;
   1414                     SysFlashDataT[4*i+26]=(U8)(USurge>>8)%256;
   1415                     SysFlashDataT[4*i+27]=(U8)(USurge>>16)%256;
   1416                     SysFlashDataT[4*i+28]=(U8)(USurge>>24)%256;
   1417                     flg_event[i]=0;
   1418                     break;
   1419                  case 5:
   1420                     SysFlashDataT[4*i+25]=(U8)(NUnblance)%256;
   1421                     SysFlashDataT[4*i+26]=(U8)(NUnblance>>8)%256;
   1422                     SysFlashDataT[4*i+27]=(U8)(NUnblance>>16)%256;
   1423                     SysFlashDataT[4*i+28]=(U8)(NUnblance>>24)%256;
   1424                     flg_event[i]=0;
   1425                     break;
   1426                  case 6:
   1427                     SysFlashDataT[4*i+25]=(U8)(LngFlick)%256;
   1428                     SysFlashDataT[4*i+26]=(U8)(LngFlick>>8)%256;
   1429                     SysFlashDataT[4*i+27]=(U8)(LngFlick>>16)%256;
   1430                     SysFlashDataT[4*i+28]=(U8)(LngFlick>>24)%256;
   1431                     flg_event[i]=0;
   1432                     break;
   1433                  case 7:
   1434                     SysFlashDataT[4*i+25]=(U8)(TotalHarmonic)%256;
   1435                     SysFlashDataT[4*i+26]=(U8)(TotalHarmonic>>8)%256;
   1436                     SysFlashDataT[4*i+27]=(U8)(TotalHarmonic>>16)%256;
   1437                     SysFlashDataT[4*i+28]=(U8)(TotalHarmonic>>24)%256;
   1438                     flg_event[i]=0;
   1439                  case 8: //间谐波没有做
   1440                    break;
   1441                  case 9:
   1442                     SysFlashDataT[4*i+25]=(U8)(UHarmonic)%256;
   1443                     SysFlashDataT[4*i+26]=(U8)(UHarmonic>>8)%256;
   1444                     SysFlashDataT[4*i+27]=(U8)(UHarmonic>>16)%256;
   1445                     SysFlashDataT[4*i+28]=(U8)(UHarmonic>>24)%256;
   1446                     flg_event[i]=0;
   1447                     break;
   1448                  case 10:
   1449                     SysFlashDataT[4*i+25]=(U8)(IHarmonic)%256;
   1450                     SysFlashDataT[4*i+26]=(U8)(IHarmonic>>8)%256;
   1451                     SysFlashDataT[4*i+27]=(U8)(IHarmonic>>16)%256;
   1452                     SysFlashDataT[4*i+28]=(U8)(IHarmonic>>24)%256;
   1453                     flg_event[i]=0;
   1454                     break;
   1455                    default:
   1456                      break;
   \                     ??GUI_SYS_EVENTSET_42:
   \                     ??GUI_SYS_EVENTSET_43:
   \   000005FE   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_41:
   \   00000600   0x280B             CMP      R0,#+11
   \   00000602   0xF280 0x8201      BGE.W    ??GUI_SYS_EVENTSET_44
   \   00000606   0x.... 0x....      LDR.W    R1,??DataTable14
   \   0000060A   0x5C41             LDRB     R1,[R0, R1]
   \   0000060C   0x2901             CMP      R1,#+1
   \   0000060E   0xD1F6             BNE.N    ??GUI_SYS_EVENTSET_43
   \   00000610   0x2800             CMP      R0,#+0
   \   00000612   0xD019             BEQ.N    ??GUI_SYS_EVENTSET_45
   \   00000614   0x2802             CMP      R0,#+2
   \   00000616   0xF000 0x810F      BEQ.W    ??GUI_SYS_EVENTSET_46
   \   0000061A   0xF0C0 0x80AB      BCC.W    ??GUI_SYS_EVENTSET_47
   \   0000061E   0x2804             CMP      R0,#+4
   \   00000620   0xF000 0x8144      BEQ.W    ??GUI_SYS_EVENTSET_48
   \   00000624   0xF0C0 0x8125      BCC.W    ??GUI_SYS_EVENTSET_49
   \   00000628   0x2806             CMP      R0,#+6
   \   0000062A   0xF000 0x8179      BEQ.W    ??GUI_SYS_EVENTSET_50
   \   0000062E   0xF0C0 0x815A      BCC.W    ??GUI_SYS_EVENTSET_51
   \   00000632   0x2808             CMP      R0,#+8
   \   00000634   0xF000 0x81AD      BEQ.W    ??GUI_SYS_EVENTSET_52
   \   00000638   0xF0C0 0x818F      BCC.W    ??GUI_SYS_EVENTSET_53
   \   0000063C   0x280A             CMP      R0,#+10
   \   0000063E   0xF000 0x81C6      BEQ.W    ??GUI_SYS_EVENTSET_54
   \   00000642   0xF0C0 0x81A7      BCC.W    ??GUI_SYS_EVENTSET_55
   \   00000646   0xE7DA             B.N      ??GUI_SYS_EVENTSET_42
   \                     ??GUI_SYS_EVENTSET_45:
   \   00000648   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000064C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000650   0x7E49             LDRB     R1,[R1, #+25]
   \   00000652   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000656   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000065A   0x7E92             LDRB     R2,[R2, #+26]
   \   0000065C   0x0212             LSLS     R2,R2,#+8
   \   0000065E   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   00000662   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000666   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000066A   0x7ED2             LDRB     R2,[R2, #+27]
   \   0000066C   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   00000670   0xF5B1 0x7FC8      CMP      R1,#+400
   \   00000674   0xD802             BHI.N    ??GUI_SYS_EVENTSET_56
   \   00000676   0xF44F 0x71C8      MOV      R1,#+400
   \   0000067A   0xE04F             B.N      ??GUI_SYS_EVENTSET_57
   \                     ??GUI_SYS_EVENTSET_56:
   \   0000067C   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000680   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000684   0x7E49             LDRB     R1,[R1, #+25]
   \   00000686   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   0000068A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000068E   0x7E92             LDRB     R2,[R2, #+26]
   \   00000690   0x0212             LSLS     R2,R2,#+8
   \   00000692   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   00000696   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   0000069A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000069E   0x7ED2             LDRB     R2,[R2, #+27]
   \   000006A0   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   000006A4   0xF5B1 0x7F16      CMP      R1,#+600
   \   000006A8   0xD802             BHI.N    ??GUI_SYS_EVENTSET_58
   \   000006AA   0xF44F 0x7116      MOV      R1,#+600
   \   000006AE   0xE035             B.N      ??GUI_SYS_EVENTSET_57
   \                     ??GUI_SYS_EVENTSET_58:
   \   000006B0   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000006B4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000006B8   0x7E49             LDRB     R1,[R1, #+25]
   \   000006BA   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000006BE   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000006C2   0x7E92             LDRB     R2,[R2, #+26]
   \   000006C4   0x0212             LSLS     R2,R2,#+8
   \   000006C6   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   000006CA   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000006CE   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000006D2   0x7ED2             LDRB     R2,[R2, #+27]
   \   000006D4   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   000006D8   0xF5B1 0x7F48      CMP      R1,#+800
   \   000006DC   0xD802             BHI.N    ??GUI_SYS_EVENTSET_59
   \   000006DE   0xF44F 0x7148      MOV      R1,#+800
   \   000006E2   0xE01B             B.N      ??GUI_SYS_EVENTSET_57
   \                     ??GUI_SYS_EVENTSET_59:
   \   000006E4   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000006E8   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000006EC   0x7E49             LDRB     R1,[R1, #+25]
   \   000006EE   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000006F2   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000006F6   0x7E92             LDRB     R2,[R2, #+26]
   \   000006F8   0x0212             LSLS     R2,R2,#+8
   \   000006FA   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   000006FE   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000702   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000706   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000708   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   0000070C   0xF5B1 0x7F7A      CMP      R1,#+1000
   \   00000710   0xD802             BHI.N    ??GUI_SYS_EVENTSET_60
   \   00000712   0xF44F 0x717A      MOV      R1,#+1000
   \   00000716   0xE001             B.N      ??GUI_SYS_EVENTSET_57
   \                     ??GUI_SYS_EVENTSET_60:
   \   00000718   0xF44F 0x6196      MOV      R1,#+1200
   \                     ??GUI_SYS_EVENTSET_57:
   \   0000071C   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000720   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000724   0x000B             MOVS     R3,R1
   \   00000726   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000728   0xF44F 0x7580      MOV      R5,#+256
   \   0000072C   0xFB93 0xF6F5      SDIV     R6,R3,R5
   \   00000730   0xFB06 0x3615      MLS      R6,R6,R5,R3
   \   00000734   0x7656             STRB     R6,[R2, #+25]
   \   00000736   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   0000073A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000073E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000740   0x0A09             LSRS     R1,R1,#+8
   \   00000742   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000744   0xF44F 0x7380      MOV      R3,#+256
   \   00000748   0xFB91 0xF5F3      SDIV     R5,R1,R3
   \   0000074C   0xFB05 0x1513      MLS      R5,R5,R3,R1
   \   00000750   0x7695             STRB     R5,[R2, #+26]
   \   00000752   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000756   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000075A   0x2200             MOVS     R2,#+0
   \   0000075C   0x76CA             STRB     R2,[R1, #+27]
   \   0000075E   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000762   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000766   0x2200             MOVS     R2,#+0
   \   00000768   0x770A             STRB     R2,[R1, #+28]
   \   0000076A   0x.... 0x....      LDR.W    R1,??DataTable14
   \   0000076E   0x2200             MOVS     R2,#+0
   \   00000770   0x5442             STRB     R2,[R0, R1]
   \   00000772   0xE744             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_47:
   \   00000774   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000778   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000077C   0x7E49             LDRB     R1,[R1, #+25]
   \   0000077E   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000782   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000786   0x7E92             LDRB     R2,[R2, #+26]
   \   00000788   0x0212             LSLS     R2,R2,#+8
   \   0000078A   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   0000078E   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   00000792   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000796   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000798   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   0000079C   0xF5B1 0x5FC8      CMP      R1,#+6400
   \   000007A0   0xDC02             BGT.N    ??GUI_SYS_EVENTSET_61
   \   000007A2   0xF44F 0x51C8      MOV      R1,#+6400
   \   000007A6   0xE01B             B.N      ??GUI_SYS_EVENTSET_62
   \                     ??GUI_SYS_EVENTSET_61:
   \   000007A8   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000007AC   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000007B0   0x7E49             LDRB     R1,[R1, #+25]
   \   000007B2   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000007B6   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000007BA   0x7E92             LDRB     R2,[R2, #+26]
   \   000007BC   0x0212             LSLS     R2,R2,#+8
   \   000007BE   0xFA52 0xF181      UXTAB    R1,R2,R1
   \   000007C2   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000007C6   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000007CA   0x7ED2             LDRB     R2,[R2, #+27]
   \   000007CC   0xEB11 0x4102      ADDS     R1,R1,R2, LSL #+16
   \   000007D0   0xF5B1 0x5F48      CMP      R1,#+12800
   \   000007D4   0xDC02             BGT.N    ??GUI_SYS_EVENTSET_63
   \   000007D6   0xF44F 0x5148      MOV      R1,#+12800
   \   000007DA   0xE001             B.N      ??GUI_SYS_EVENTSET_62
   \                     ??GUI_SYS_EVENTSET_63:
   \   000007DC   0xF44F 0x41C8      MOV      R1,#+25600
   \                     ??GUI_SYS_EVENTSET_62:
   \   000007E0   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000007E4   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000007E8   0x000B             MOVS     R3,R1
   \   000007EA   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000007EC   0xF44F 0x7580      MOV      R5,#+256
   \   000007F0   0xFB93 0xF6F5      SDIV     R6,R3,R5
   \   000007F4   0xFB06 0x3615      MLS      R6,R6,R5,R3
   \   000007F8   0x7656             STRB     R6,[R2, #+25]
   \   000007FA   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000007FE   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000802   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000804   0x0A09             LSRS     R1,R1,#+8
   \   00000806   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000808   0xF44F 0x7380      MOV      R3,#+256
   \   0000080C   0xFB91 0xF5F3      SDIV     R5,R1,R3
   \   00000810   0xFB05 0x1513      MLS      R5,R5,R3,R1
   \   00000814   0x7695             STRB     R5,[R2, #+26]
   \   00000816   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000081A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000081E   0x2200             MOVS     R2,#+0
   \   00000820   0x76CA             STRB     R2,[R1, #+27]
   \   00000822   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000826   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000082A   0x2200             MOVS     R2,#+0
   \   0000082C   0x770A             STRB     R2,[R1, #+28]
   \   0000082E   0x.... 0x....      LDR.W    R1,??DataTable14
   \   00000832   0x2200             MOVS     R2,#+0
   \   00000834   0x5442             STRB     R2,[R0, R1]
   \   00000836   0xE6E2             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_46:
   \   00000838   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000083C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000840   0x22BC             MOVS     R2,#+188
   \   00000842   0x764A             STRB     R2,[R1, #+25]
   \   00000844   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000848   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000084C   0x2202             MOVS     R2,#+2
   \   0000084E   0x768A             STRB     R2,[R1, #+26]
   \   00000850   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000854   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000858   0x2200             MOVS     R2,#+0
   \   0000085A   0x76CA             STRB     R2,[R1, #+27]
   \   0000085C   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000860   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000864   0x2200             MOVS     R2,#+0
   \   00000866   0x770A             STRB     R2,[R1, #+28]
   \   00000868   0x.... 0x....      LDR.W    R1,??DataTable14
   \   0000086C   0x2200             MOVS     R2,#+0
   \   0000086E   0x5442             STRB     R2,[R0, R1]
   \   00000870   0xE6C5             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_49:
   \   00000872   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000876   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000087A   0x2202             MOVS     R2,#+2
   \   0000087C   0x764A             STRB     R2,[R1, #+25]
   \   0000087E   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000882   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000886   0x2200             MOVS     R2,#+0
   \   00000888   0x768A             STRB     R2,[R1, #+26]
   \   0000088A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000088E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000892   0x2200             MOVS     R2,#+0
   \   00000894   0x76CA             STRB     R2,[R1, #+27]
   \   00000896   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000089A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000089E   0x2200             MOVS     R2,#+0
   \   000008A0   0x770A             STRB     R2,[R1, #+28]
   \   000008A2   0x.... 0x....      LDR.W    R1,??DataTable14
   \   000008A6   0x2200             MOVS     R2,#+0
   \   000008A8   0x5442             STRB     R2,[R0, R1]
   \   000008AA   0xE6A8             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_48:
   \   000008AC   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000008B0   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008B4   0x22C8             MOVS     R2,#+200
   \   000008B6   0x764A             STRB     R2,[R1, #+25]
   \   000008B8   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000008BC   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008C0   0x2200             MOVS     R2,#+0
   \   000008C2   0x768A             STRB     R2,[R1, #+26]
   \   000008C4   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000008C8   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008CC   0x2200             MOVS     R2,#+0
   \   000008CE   0x76CA             STRB     R2,[R1, #+27]
   \   000008D0   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000008D4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008D8   0x2200             MOVS     R2,#+0
   \   000008DA   0x770A             STRB     R2,[R1, #+28]
   \   000008DC   0x.... 0x....      LDR.W    R1,??DataTable14
   \   000008E0   0x2200             MOVS     R2,#+0
   \   000008E2   0x5442             STRB     R2,[R0, R1]
   \   000008E4   0xE68B             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_51:
   \   000008E6   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000008EA   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008EE   0x22C8             MOVS     R2,#+200
   \   000008F0   0x764A             STRB     R2,[R1, #+25]
   \   000008F2   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000008F6   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000008FA   0x2200             MOVS     R2,#+0
   \   000008FC   0x768A             STRB     R2,[R1, #+26]
   \   000008FE   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000902   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000906   0x2200             MOVS     R2,#+0
   \   00000908   0x76CA             STRB     R2,[R1, #+27]
   \   0000090A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000090E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000912   0x2200             MOVS     R2,#+0
   \   00000914   0x770A             STRB     R2,[R1, #+28]
   \   00000916   0x.... 0x....      LDR.W    R1,??DataTable14
   \   0000091A   0x2200             MOVS     R2,#+0
   \   0000091C   0x5442             STRB     R2,[R0, R1]
   \   0000091E   0xE66E             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_50:
   \   00000920   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000924   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000928   0x2264             MOVS     R2,#+100
   \   0000092A   0x764A             STRB     R2,[R1, #+25]
   \   0000092C   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000930   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000934   0x2200             MOVS     R2,#+0
   \   00000936   0x768A             STRB     R2,[R1, #+26]
   \   00000938   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000093C   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000940   0x2200             MOVS     R2,#+0
   \   00000942   0x76CA             STRB     R2,[R1, #+27]
   \   00000944   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000948   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000094C   0x2200             MOVS     R2,#+0
   \   0000094E   0x770A             STRB     R2,[R1, #+28]
   \   00000950   0x.... 0x....      LDR.W    R1,??DataTable14
   \   00000954   0x2200             MOVS     R2,#+0
   \   00000956   0x5442             STRB     R2,[R0, R1]
   \   00000958   0xE651             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_53:
   \   0000095A   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000095E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000962   0x22F4             MOVS     R2,#+244
   \   00000964   0x764A             STRB     R2,[R1, #+25]
   \   00000966   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000096A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000096E   0x2201             MOVS     R2,#+1
   \   00000970   0x768A             STRB     R2,[R1, #+26]
   \   00000972   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000976   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000097A   0x2200             MOVS     R2,#+0
   \   0000097C   0x76CA             STRB     R2,[R1, #+27]
   \   0000097E   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000982   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000986   0x2200             MOVS     R2,#+0
   \   00000988   0x770A             STRB     R2,[R1, #+28]
   \   0000098A   0x.... 0x....      LDR.W    R1,??DataTable14
   \   0000098E   0x2200             MOVS     R2,#+0
   \   00000990   0x5442             STRB     R2,[R0, R1]
   \                     ??GUI_SYS_EVENTSET_52:
   \   00000992   0xE634             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_55:
   \   00000994   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000998   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000099C   0x2290             MOVS     R2,#+144
   \   0000099E   0x764A             STRB     R2,[R1, #+25]
   \   000009A0   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009A4   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009A8   0x2201             MOVS     R2,#+1
   \   000009AA   0x768A             STRB     R2,[R1, #+26]
   \   000009AC   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009B0   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009B4   0x2200             MOVS     R2,#+0
   \   000009B6   0x76CA             STRB     R2,[R1, #+27]
   \   000009B8   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009BC   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009C0   0x2200             MOVS     R2,#+0
   \   000009C2   0x770A             STRB     R2,[R1, #+28]
   \   000009C4   0x.... 0x....      LDR.W    R1,??DataTable14
   \   000009C8   0x2200             MOVS     R2,#+0
   \   000009CA   0x5442             STRB     R2,[R0, R1]
   \   000009CC   0xE617             B.N      ??GUI_SYS_EVENTSET_43
   \                     ??GUI_SYS_EVENTSET_54:
   \   000009CE   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009D2   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009D6   0x22C8             MOVS     R2,#+200
   \   000009D8   0x764A             STRB     R2,[R1, #+25]
   \   000009DA   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009DE   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009E2   0x2200             MOVS     R2,#+0
   \   000009E4   0x768A             STRB     R2,[R1, #+26]
   \   000009E6   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009EA   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009EE   0x2200             MOVS     R2,#+0
   \   000009F0   0x76CA             STRB     R2,[R1, #+27]
   \   000009F2   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000009F6   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   000009FA   0x2200             MOVS     R2,#+0
   \   000009FC   0x770A             STRB     R2,[R1, #+28]
   \   000009FE   0x.... 0x....      LDR.W    R1,??DataTable14
   \   00000A02   0x2200             MOVS     R2,#+0
   \   00000A04   0x5442             STRB     R2,[R0, R1]
   \   00000A06   0xE5FA             B.N      ??GUI_SYS_EVENTSET_43
   1457                  }
   1458          #if 0 //WK -->保存时  SysFlashData 全部保存     
   1459              for(int i=0;i<84;i++) 
   1460              {
   1461                SysFlashSave[i]=SysFlashDataT[i];
   1462              }
   1463              shell_ptr->ARGC=2;
   1464              shell_ptr->ARGV[0]="cd";
   1465              shell_ptr->ARGV[1]="f:\\"; 
   1466              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1467              
   1468              shell_ptr->ARGC = 2;
   1469              shell_ptr->ARGV[0]="cd";
   1470              shell_ptr->ARGV[1]="sysset";
   1471              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   1472              
   1473              shell_ptr->ARGC=4;
   1474              shell_ptr->ARGV[0]="write";
   1475              shell_ptr->ARGV[1]="sysevent.txt";
   1476              shell_ptr->ARGV[2]="begin";
   1477              shell_ptr->ARGV[3]="0";
   1478              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashSave);
   1479              
   1480              // wk --> update
   1481              shell_ptr->ARGC=2;
   1482              shell_ptr->ARGV[0]="update";
   1483              shell_ptr->ARGV[1]="flush";
   1484          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashSave);  
   1485              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV); 
   1486          #endif  // WK -->保存时  SysFlashData 全部保存 END
   1487           
   1488          #if 1  // wk @130326 --> 只保存事件界面数据
   1489              for(int i=0;i<44;i++) 
   \                     ??GUI_SYS_EVENTSET_44:
   \   00000A08   0x2000             MOVS     R0,#+0
   \   00000A0A   0xE007             B.N      ??GUI_SYS_EVENTSET_64
   1490              {
   1491                SysFlashData[i+25]=SysFlashDataT[i+25];  
   \                     ??GUI_SYS_EVENTSET_65:
   \   00000A0C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000A10   0x1841             ADDS     R1,R0,R1
   \   00000A12   0x....             LDR.N    R2,??DataTable13_6
   \   00000A14   0x1882             ADDS     R2,R0,R2
   \   00000A16   0x7E52             LDRB     R2,[R2, #+25]
   \   00000A18   0x764A             STRB     R2,[R1, #+25]
   1492              }
   \   00000A1A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_64:
   \   00000A1C   0x282C             CMP      R0,#+44
   \   00000A1E   0xDBF5             BLT.N    ??GUI_SYS_EVENTSET_65
   1493              shell_ptr->ARGC=2;
   \   00000A20   0x2002             MOVS     R0,#+2
   \   00000A22   0x6220             STR      R0,[R4, #+32]
   1494              shell_ptr->ARGV[0]="cd";
   \   00000A24   0x....             ADR.N    R0,??DataTable11_2  ;; 0x63, 0x64, 0x00, 0x00
   \   00000A26   0x6020             STR      R0,[R4, #+0]
   1495              shell_ptr->ARGV[1]="f:\\"; 
   \   00000A28   0x....             ADR.N    R0,??DataTable11_3  ;; "f:\\"
   \   00000A2A   0x6060             STR      R0,[R4, #+4]
   1496              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000A2C   0x0021             MOVS     R1,R4
   \   00000A2E   0x6A20             LDR      R0,[R4, #+32]
   \   00000A30   0x.... 0x....      BL       Shell_cd
   1497              
   1498              shell_ptr->ARGC = 2;
   \   00000A34   0x2002             MOVS     R0,#+2
   \   00000A36   0x6220             STR      R0,[R4, #+32]
   1499              shell_ptr->ARGV[0]="cd";
   \   00000A38   0x....             ADR.N    R0,??DataTable11_2  ;; 0x63, 0x64, 0x00, 0x00
   \   00000A3A   0x6020             STR      R0,[R4, #+0]
   1500              shell_ptr->ARGV[1]="sysset";
   \   00000A3C   0x....             LDR.N    R0,??DataTable13_1
   \   00000A3E   0x6060             STR      R0,[R4, #+4]
   1501              Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000A40   0x0021             MOVS     R1,R4
   \   00000A42   0x6A20             LDR      R0,[R4, #+32]
   \   00000A44   0x.... 0x....      BL       Shell_cd
   1502              
   1503              shell_ptr->ARGC=4;
   \   00000A48   0x2004             MOVS     R0,#+4
   \   00000A4A   0x6220             STR      R0,[R4, #+32]
   1504              shell_ptr->ARGV[0]="w";
   \   00000A4C   0x....             ADR.N    R0,??DataTable12  ;; "w"
   \   00000A4E   0x6020             STR      R0,[R4, #+0]
   1505              shell_ptr->ARGV[1]="sysevent.txt";
   \   00000A50   0x....             LDR.N    R0,??DataTable13_3
   \   00000A52   0x6060             STR      R0,[R4, #+4]
   1506              shell_ptr->ARGV[2]="begin";
   \   00000A54   0x....             LDR.N    R0,??DataTable13_4
   \   00000A56   0x60A0             STR      R0,[R4, #+8]
   1507              shell_ptr->ARGV[3]="0";  // WK @130326 --> 偏移 26  注意：偏移25时，初始上电时，波形个数为2.55，因此该到了偏移26
   \   00000A58   0x....             ADR.N    R0,??DataTable12_1  ;; "0"
   \   00000A5A   0x60E0             STR      R0,[R4, #+12]
   1508              Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,44,&(SysFlashData[25]));
                     ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   00000A5C   0x.... 0x....      LDR.W    R3,??DataTable16_3
   \   00000A60   0x222C             MOVS     R2,#+44
   \   00000A62   0x0021             MOVS     R1,R4
   \   00000A64   0x6A20             LDR      R0,[R4, #+32]
   \   00000A66   0x.... 0x....      BL       Shell_write_binary
   1509              
   1510              shell_ptr->ARGC=2;
   \   00000A6A   0x2002             MOVS     R0,#+2
   \   00000A6C   0x6220             STR      R0,[R4, #+32]
   1511              shell_ptr->ARGV[0]="update";// wk --> update
   \   00000A6E   0x....             LDR.N    R0,??DataTable11
   \   00000A70   0x6020             STR      R0,[R4, #+0]
   1512              shell_ptr->ARGV[1]="flush";
   \   00000A72   0x....             LDR.N    R0,??DataTable11_1
   \   00000A74   0x6060             STR      R0,[R4, #+4]
   1513          //    Shell_update(shell_ptr->ARGC, shell_ptr->ARGV,44,&(SysFlashSave[25]));
   1514              Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000A76   0x0021             MOVS     R1,R4
   \   00000A78   0x6A20             LDR      R0,[R4, #+32]
   \   00000A7A   0x.... 0x....      BL       Shell_update
   1515          #endif
   1516                  /*WK --> 保存成功标志，使字体变黄显示 */
   1517              for(k=0; k<11; k++)
   \   00000A7E   0x2000             MOVS     R0,#+0
   \   00000A80   0xE04E             B.N      ??GUI_SYS_EVENTSET_66
   1518                  {
   1519                      temp=7*k;
   \                     ??GUI_SYS_EVENTSET_67:
   \   00000A82   0x2107             MOVS     R1,#+7
   \   00000A84   0xFB01 0xF500      MUL      R5,R1,R0
   1520                      ParaSetC108[temp + 0] = 0x3204;         //P  显示数据的模式
   \   00000A88   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000A8A   0xA92A             ADD      R1,SP,#+168
   \   00000A8C   0xF243 0x2204      MOVW     R2,#+12804
   \   00000A90   0xF821 0x2015      STRH     R2,[R1, R5, LSL #+1]
   1521                      ParaSetC108[temp + 1] = SysEventXY[2*k];            //显示相位的X坐标
   \   00000A94   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000A96   0xA92A             ADD      R1,SP,#+168
   \   00000A98   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000A9C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000A9E   0xAA09             ADD      R2,SP,#+36
   \   00000AA0   0xF832 0x2020      LDRH     R2,[R2, R0, LSL #+2]
   \   00000AA4   0x804A             STRH     R2,[R1, #+2]
   1522                      ParaSetC108[temp + 2] = SysEventXY[2*k + 1];     //Y坐标
   \   00000AA6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000AA8   0x0041             LSLS     R1,R0,#+1
   \   00000AAA   0xAA09             ADD      R2,SP,#+36
   \   00000AAC   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000AB0   0x8849             LDRH     R1,[R1, #+2]
   \   00000AB2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000AB4   0xAA2A             ADD      R2,SP,#+168
   \   00000AB6   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000ABA   0x8091             STRH     R1,[R2, #+4]
   1523                      ParaSetC108[temp + 3] = 0xffc1;         //白色，下为黑色
   \   00000ABC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000ABE   0xA92A             ADD      R1,SP,#+168
   \   00000AC0   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000AC4   0xF64F 0x72C1      MOVW     R2,#+65473
   \   00000AC8   0x80CA             STRH     R2,[R1, #+6]
   1524                      ParaSetC108[temp + 4] = 0x0000;
   \   00000ACA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000ACC   0xA92A             ADD      R1,SP,#+168
   \   00000ACE   0xEB11 0x0145      ADDS     R1,R1,R5, LSL #+1
   \   00000AD2   0x2200             MOVS     R2,#+0
   \   00000AD4   0x810A             STRH     R2,[R1, #+8]
   1525                      ParaSetC108[temp + 5] =(U16) (SysFlashDataT[3+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[2+4*k+EVESET_INDEX]);
   \   00000AD6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000AD8   0x....             LDR.N    R1,??DataTable13_6
   \   00000ADA   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000ADE   0x7F09             LDRB     R1,[R1, #+28]
   \   00000AE0   0x0209             LSLS     R1,R1,#+8
   \   00000AE2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000AE4   0x....             LDR.N    R2,??DataTable13_6
   \   00000AE6   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000AEA   0x7ED2             LDRB     R2,[R2, #+27]
   \   00000AEC   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   00000AF0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000AF2   0xAA2A             ADD      R2,SP,#+168
   \   00000AF4   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000AF8   0x8151             STRH     R1,[R2, #+10]
   1526                      ParaSetC108[temp + 6] =(U16) (SysFlashDataT[1+4*k+EVESET_INDEX]<<8)+(U16)(SysFlashDataT[4*k+EVESET_INDEX]);
   \   00000AFA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000AFC   0x....             LDR.N    R1,??DataTable13_6
   \   00000AFE   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000B02   0x7E89             LDRB     R1,[R1, #+26]
   \   00000B04   0x0209             LSLS     R1,R1,#+8
   \   00000B06   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000B08   0x....             LDR.N    R2,??DataTable13_6
   \   00000B0A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   00000B0E   0x7E52             LDRB     R2,[R2, #+25]
   \   00000B10   0xFA51 0xF182      UXTAB    R1,R1,R2
   \   00000B14   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000B16   0xAA2A             ADD      R2,SP,#+168
   \   00000B18   0xEB12 0x0245      ADDS     R2,R2,R5, LSL #+1
   \   00000B1C   0x8191             STRH     R1,[R2, #+12]
   1527                  }
   \   00000B1E   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_SYS_EVENTSET_66:
   \   00000B20   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000B22   0x280B             CMP      R0,#+11
   \   00000B24   0xD3AD             BCC.N    ??GUI_SYS_EVENTSET_67
   1528                   YADA_C0(EventSetAddr, ParaSetC108, 11*7);
   \   00000B26   0x224D             MOVS     R2,#+77
   \   00000B28   0xA92A             ADD      R1,SP,#+168
   \   00000B2A   0xF640 0x20F7      MOVW     R0,#+2807
   \   00000B2E   0x.... 0x....      BL       YADA_C0
   1529                   YADA_C108(EventSetAddr,11);   //写入有效值，每次10个
   \   00000B32   0x210B             MOVS     R1,#+11
   \   00000B34   0xF640 0x20F7      MOVW     R0,#+2807
   \   00000B38   0x.... 0x....      BL       YADA_C108
   1530                 /* wk --> 保存成功标志 END */
   1531                   
   1532                 SysSet.EventSaveFlg=0; //清楚保存标志
   \   00000B3C   0x....             LDR.N    R0,??DataTable13
   \   00000B3E   0x2100             MOVS     R1,#+0
   \   00000B40   0x7101             STRB     R1,[R0, #+4]
   1533                 SysSet.EventSendFlg=1; //开启 K60 2 DSP 标志
   \   00000B42   0x....             LDR.N    R0,??DataTable13
   \   00000B44   0x2101             MOVS     R1,#+1
   \   00000B46   0x7141             STRB     R1,[R0, #+5]
   1534                 _mem_free(shell_ptr); 
   \   00000B48   0x0020             MOVS     R0,R4
   \   00000B4A   0x.... 0x....      BL       _lwmem_free
   \   00000B4E   0xE002             B.N      ??GUI_SYS_EVENTSET_68
   1535              }
   1536              else
   1537                _mem_free(shell_ptr); 
   \                     ??GUI_SYS_EVENTSET_40:
   \   00000B50   0x0020             MOVS     R0,R4
   \   00000B52   0x.... 0x....      BL       _lwmem_free
   1538              
   1539              if(SysSet.EventSendFlg)
   \                     ??GUI_SYS_EVENTSET_68:
   \   00000B56   0x....             LDR.N    R0,??DataTable13
   \   00000B58   0x7940             LDRB     R0,[R0, #+5]
   \   00000B5A   0x2800             CMP      R0,#+0
   \   00000B5C   0xD026             BEQ.N    ??GUI_SYS_EVENTSET_69
   1540              {
   1541                  YADA_71(MenuSysEvent,521,425,630,439,521,425);
   \   00000B5E   0xF240 0x10A9      MOVW     R0,#+425
   \   00000B62   0x9002             STR      R0,[SP, #+8]
   \   00000B64   0xF240 0x2009      MOVW     R0,#+521
   \   00000B68   0x9001             STR      R0,[SP, #+4]
   \   00000B6A   0xF240 0x10B7      MOVW     R0,#+439
   \   00000B6E   0x9000             STR      R0,[SP, #+0]
   \   00000B70   0xF240 0x2376      MOVW     R3,#+630
   \   00000B74   0xF240 0x12A9      MOVW     R2,#+425
   \   00000B78   0xF240 0x2109      MOVW     R1,#+521
   \   00000B7C   0x200B             MOVS     R0,#+11
   \   00000B7E   0x.... 0x....      BL       YADA_71
   1542                  YADA_98(521, 425, 0x22, 0x81, 0x02, 0xffe0, 0x0000, "SENDING...", 10);
   \   00000B82   0x200A             MOVS     R0,#+10
   \   00000B84   0x9004             STR      R0,[SP, #+16]
   \   00000B86   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000B8A   0x9003             STR      R0,[SP, #+12]
   \   00000B8C   0x2000             MOVS     R0,#+0
   \   00000B8E   0x9002             STR      R0,[SP, #+8]
   \   00000B90   0xF64F 0x70E0      MOVW     R0,#+65504
   \   00000B94   0x9001             STR      R0,[SP, #+4]
   \   00000B96   0x2002             MOVS     R0,#+2
   \   00000B98   0x9000             STR      R0,[SP, #+0]
   \   00000B9A   0x2381             MOVS     R3,#+129
   \   00000B9C   0x2222             MOVS     R2,#+34
   \   00000B9E   0xF240 0x11A9      MOVW     R1,#+425
   \   00000BA2   0xF240 0x2009      MOVW     R0,#+521
   \   00000BA6   0x.... 0x....      BL       YADA_98
   \   00000BAA   0xE025             B.N      ??GUI_SYS_EVENTSET_70
   1543              }
   1544              else
   1545              {
   1546                  YADA_71(MenuSysEvent,521,425,630,439,521,425);
   \                     ??GUI_SYS_EVENTSET_69:
   \   00000BAC   0xF240 0x10A9      MOVW     R0,#+425
   \   00000BB0   0x9002             STR      R0,[SP, #+8]
   \   00000BB2   0xF240 0x2009      MOVW     R0,#+521
   \   00000BB6   0x9001             STR      R0,[SP, #+4]
   \   00000BB8   0xF240 0x10B7      MOVW     R0,#+439
   \   00000BBC   0x9000             STR      R0,[SP, #+0]
   \   00000BBE   0xF240 0x2376      MOVW     R3,#+630
   \   00000BC2   0xF240 0x12A9      MOVW     R2,#+425
   \   00000BC6   0xF240 0x2109      MOVW     R1,#+521
   \   00000BCA   0x200B             MOVS     R0,#+11
   \   00000BCC   0x.... 0x....      BL       YADA_71
   1547                  YADA_98(521, 425, 0x22, 0x81, 0x02, 0xffe0, 0x0000, "WAITING...", 10); // 可以考虑换成擦除上面的文字
   \   00000BD0   0x200A             MOVS     R0,#+10
   \   00000BD2   0x9004             STR      R0,[SP, #+16]
   \   00000BD4   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   00000BD8   0x9003             STR      R0,[SP, #+12]
   \   00000BDA   0x2000             MOVS     R0,#+0
   \   00000BDC   0x9002             STR      R0,[SP, #+8]
   \   00000BDE   0xF64F 0x70E0      MOVW     R0,#+65504
   \   00000BE2   0x9001             STR      R0,[SP, #+4]
   \   00000BE4   0x2002             MOVS     R0,#+2
   \   00000BE6   0x9000             STR      R0,[SP, #+0]
   \   00000BE8   0x2381             MOVS     R3,#+129
   \   00000BEA   0x2222             MOVS     R2,#+34
   \   00000BEC   0xF240 0x11A9      MOVW     R1,#+425
   \   00000BF0   0xF240 0x2009      MOVW     R0,#+521
   \   00000BF4   0x.... 0x....      BL       YADA_98
   1548              }
   1549              
   1550          }
   \                     ??GUI_SYS_EVENTSET_70:
   \   00000BF8   0xB05B             ADD      SP,SP,#+364
   \   00000BFA   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??flg_event:
   \   00000000                      DS8 12
   1551          
   1552          /*******************************************************************************
   1553          * 函  数  名      : GUI_INIT_SET
   1554          * 描      述      : 恢复出厂设置，确认后系统各设置参数恢复最初状态。
   1555          * 输      入      : 无
   1556          * 返      回      : 无
   1557          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1558          void GUI_INIT_SET(void)
   1559          {
   \                     GUI_INIT_SET:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   1560              U8 PBUF[]= {"恢复出厂设置成功！"};
   \   00000004   0xA805             ADD      R0,SP,#+20
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable17_3
   \   0000000A   0x2213             MOVS     R2,#+19
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
   1561              
   1562              SHELL_CONTEXT_PTR    shell_ptr;
   1563              shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000010   0xF44F 0x70F2      MOV      R0,#+484
   \   00000014   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000018   0x0004             MOVS     R4,R0
   1564              _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000001A   0xF245 0x0101      MOVW     R1,#+20481
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       _lwmem_set_type
   1565              
   1566              if(InitAck)
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD04F             BEQ.N    ??GUI_INIT_SET_0
   1567              {
   1568          //        memset(SysFlashDataT,0,84);//SysFlashData[0~85]赋初值0
   1569                  for(uchar i=0;i<84;i++)
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0xE004             B.N      ??GUI_INIT_SET_1
   1570                    SysFlashDataT[i]=0;
   \                     ??GUI_INIT_SET_2:
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x....             LDR.N    R1,??DataTable13_6
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x5442             STRB     R2,[R0, R1]
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_INIT_SET_1:
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x2854             CMP      R0,#+84
   \   00000040   0xD3F7             BCC.N    ??GUI_INIT_SET_2
   1571          
   1572                  shell_ptr->ARGC=2;
   \   00000042   0x2002             MOVS     R0,#+2
   \   00000044   0x6220             STR      R0,[R4, #+32]
   1573                  shell_ptr->ARGV[0]="cd";
   \   00000046   0x....             ADR.N    R0,??DataTable13_8  ;; 0x63, 0x64, 0x00, 0x00
   \   00000048   0x6020             STR      R0,[R4, #+0]
   1574                  shell_ptr->ARGV[1]="f:\\"; 
   \   0000004A   0x....             ADR.N    R0,??DataTable13_9  ;; "f:\\"
   \   0000004C   0x6060             STR      R0,[R4, #+4]
   1575                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000004E   0x0021             MOVS     R1,R4
   \   00000050   0x6A20             LDR      R0,[R4, #+32]
   \   00000052   0x.... 0x....      BL       Shell_cd
   1576                  
   1577                  shell_ptr->ARGC = 2;
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x6220             STR      R0,[R4, #+32]
   1578                  shell_ptr->ARGV[0]="cd";
   \   0000005A   0x....             ADR.N    R0,??DataTable13_8  ;; 0x63, 0x64, 0x00, 0x00
   \   0000005C   0x6020             STR      R0,[R4, #+0]
   1579                  shell_ptr->ARGV[1]="sysset";
   \   0000005E   0x....             LDR.N    R0,??DataTable13_1
   \   00000060   0x6060             STR      R0,[R4, #+4]
   1580                  Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000062   0x0021             MOVS     R1,R4
   \   00000064   0x6A20             LDR      R0,[R4, #+32]
   \   00000066   0x.... 0x....      BL       Shell_cd
   1581                  
   1582                  shell_ptr->ARGC=4;
   \   0000006A   0x2004             MOVS     R0,#+4
   \   0000006C   0x6220             STR      R0,[R4, #+32]
   1583                  shell_ptr->ARGV[0]="w";
   \   0000006E   0x....             ADR.N    R0,??DataTable12  ;; "w"
   \   00000070   0x6020             STR      R0,[R4, #+0]
   1584                  shell_ptr->ARGV[1]="sysset.txt";
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable17_7
   \   00000076   0x6060             STR      R0,[R4, #+4]
   1585                  shell_ptr->ARGV[2]="begin";
   \   00000078   0x....             LDR.N    R0,??DataTable13_4
   \   0000007A   0x60A0             STR      R0,[R4, #+8]
   1586                  shell_ptr->ARGV[3]="0";
   \   0000007C   0x....             ADR.N    R0,??DataTable12_1  ;; "0"
   \   0000007E   0x60E0             STR      R0,[R4, #+12]
   1587                  Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,84,SysFlashDataT);
                         ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   00000080   0x....             LDR.N    R3,??DataTable13_6
   \   00000082   0x2254             MOVS     R2,#+84
   \   00000084   0x0021             MOVS     R1,R4
   \   00000086   0x6A20             LDR      R0,[R4, #+32]
   \   00000088   0x.... 0x....      BL       Shell_write_binary
   1588                  
   1589                  shell_ptr->ARGC=2;
   \   0000008C   0x2002             MOVS     R0,#+2
   \   0000008E   0x6220             STR      R0,[R4, #+32]
   1590                  shell_ptr->ARGV[0]="update"; // wk --> update
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable17_8
   \   00000094   0x6020             STR      R0,[R4, #+0]
   1591                  shell_ptr->ARGV[1]="flush";
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   0000009A   0x6060             STR      R0,[R4, #+4]
   1592                  Shell_update(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000009C   0x0021             MOVS     R1,R4
   \   0000009E   0x6A20             LDR      R0,[R4, #+32]
   \   000000A0   0x.... 0x....      BL       Shell_update
   1593                  
   1594                  YADA_98(200, 211, 0x22, 0x81, 0x02, 0xffe0, 0x0000, PBUF, 0);
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x9004             STR      R0,[SP, #+16]
   \   000000A8   0xA805             ADD      R0,SP,#+20
   \   000000AA   0x9003             STR      R0,[SP, #+12]
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x9002             STR      R0,[SP, #+8]
   \   000000B0   0xF64F 0x70E0      MOVW     R0,#+65504
   \   000000B4   0x9001             STR      R0,[SP, #+4]
   \   000000B6   0x2002             MOVS     R0,#+2
   \   000000B8   0x9000             STR      R0,[SP, #+0]
   \   000000BA   0x2381             MOVS     R3,#+129
   \   000000BC   0x2222             MOVS     R2,#+34
   \   000000BE   0x21D3             MOVS     R1,#+211
   \   000000C0   0x20C8             MOVS     R0,#+200
   \   000000C2   0x.... 0x....      BL       YADA_98
   1595                  InitAck=0;
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x7001             STRB     R1,[R0, #+0]
   1596              }
   1597          //    else
   1598          
   1599              _mem_free(shell_ptr); 
   \                     ??GUI_INIT_SET_0:
   \   000000CE   0x0020             MOVS     R0,R4
   \   000000D0   0x.... 0x....      BL       _lwmem_free
   1600          }
   \   000000D4   0xB00A             ADD      SP,SP,#+40
   \   000000D6   0xBD10             POP      {R4,PC}          ;; return
   1601          
   1602          /*******************************************************************************
   1603          * 函  数  名      : GUI_EventMonitor
   1604          * 描      述      : 事件监测显示，NPage[101~114]为事件的类别叠加;
   1605          * 输      入      : 无
   1606          * 返      回      : 无
   1607          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1608          void GUI_EventMonitor(U8 U_DISK)
   1609          {
   \                     GUI_EventMonitor:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0A9             SUB      SP,SP,#+164
   1610                  U16 EVENTMONXY[18]= {181,127,181,174,181,219,181,265,181,310,505,127,505,174,
   1611                                   505,219,505,265
   1612                                  };
   \   00000004   0xA820             ADD      R0,SP,#+128
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable17_10
   \   0000000A   0x2224             MOVS     R2,#+36
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
   1613              U16 MONITC108[63]={0};
   \   00000010   0xA800             ADD      R0,SP,#+0
   \   00000012   0x2180             MOVS     R1,#+128
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
   1614              U8 temp=0;
   \   00000018   0x2100             MOVS     R1,#+0
   1615              for(U8 k=0; k<9; k++)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xE036             B.N      ??GUI_EventMonitor_0
   1616              {
   1617                  temp=7*k;
   \                     ??GUI_EventMonitor_1:
   \   0000001E   0x2107             MOVS     R1,#+7
   \   00000020   0xFB01 0xF100      MUL      R1,R1,R0
   1618                  MONITC108[temp + 0] = 0x6004;         //P  显示数据的模式
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0xAA00             ADD      R2,SP,#+0
   \   00000028   0xF246 0x0304      MOVW     R3,#+24580
   \   0000002C   0xF822 0x3011      STRH     R3,[R2, R1, LSL #+1]
   1619                  MONITC108[temp + 1] =EVENTMONXY[2*k];            //显示相位的X坐标
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0xAA00             ADD      R2,SP,#+0
   \   00000034   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xAB20             ADD      R3,SP,#+128
   \   0000003C   0xF833 0x3020      LDRH     R3,[R3, R0, LSL #+2]
   \   00000040   0x8053             STRH     R3,[R2, #+2]
   1620                  MONITC108[temp + 2] = EVENTMONXY[2*k + 1];     //Y坐标
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x0042             LSLS     R2,R0,#+1
   \   00000046   0xAB20             ADD      R3,SP,#+128
   \   00000048   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000004C   0x8852             LDRH     R2,[R2, #+2]
   \   0000004E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000050   0xAB00             ADD      R3,SP,#+0
   \   00000052   0xEB13 0x0341      ADDS     R3,R3,R1, LSL #+1
   \   00000056   0x809A             STRH     R2,[R3, #+4]
   1621                  MONITC108[temp + 3] = 0xffff;         //白色，下为黑色
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0xAA00             ADD      R2,SP,#+0
   \   0000005C   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000060   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000064   0x80D3             STRH     R3,[R2, #+6]
   1622                  MONITC108[temp + 4] = 0x0000;
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0xAA00             ADD      R2,SP,#+0
   \   0000006A   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000006E   0x2300             MOVS     R3,#+0
   \   00000070   0x8113             STRH     R3,[R2, #+8]
   1623                  MONITC108[temp + 5] =0;
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0xAA00             ADD      R2,SP,#+0
   \   00000076   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000007A   0x2300             MOVS     R3,#+0
   \   0000007C   0x8153             STRH     R3,[R2, #+10]
   1624                  MONITC108[temp + 6] =0;
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0xAA00             ADD      R2,SP,#+0
   \   00000082   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x818A             STRH     R2,[R1, #+12]
   1625              }
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_EventMonitor_0:
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x2809             CMP      R0,#+9
   \   00000090   0xD3C5             BCC.N    ??GUI_EventMonitor_1
   1626              YADA_C0(EventMonLAddr, MONITC108, 63);
   \   00000092   0x223F             MOVS     R2,#+63
   \   00000094   0xA900             ADD      R1,SP,#+0
   \   00000096   0xF640 0x3051      MOVW     R0,#+2897
   \   0000009A   0x.... 0x....      BL       YADA_C0
   1627              YADA_C108(EventMonLAddr, 9);   //写入事件，每次10个
   \   0000009E   0x2109             MOVS     R1,#+9
   \   000000A0   0xF640 0x3051      MOVW     R0,#+2897
   \   000000A4   0x.... 0x....      BL       YADA_C108
   1628          }
   \   000000A8   0xB029             ADD      SP,SP,#+164
   \   000000AA   0xBD00             POP      {PC}             ;; return
   1629          /*******************************************************************************
   1630          * 函  数  名      : GUI_EventList
   1631          * 描      述      : 事件列表显示，从nandflash中读取。
   1632          * 输      入      : 无
   1633          * 返      回      : 无
   1634          *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
   1635          void GUI_EventList(void)
   1636          {
   \                     GUI_EventList:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xF5AD 0x7D36      SUB      SP,SP,#+728
   1637            U16 EVELSTXY[]= {30,40,35,63,30,70,35,93,30,98,35,121,30,125,35,148,30,152,35,175,30,179,35,202,30,206,
   1638                               35,229,30,233,35,256,30,262,35,285,30,288,35,311,30,316,35,339,30,342,35,365,30,370,35,393,30,396,35,419
   1639                              };
   \   00000008   0xA899             ADD      R0,SP,#+612
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable17_11
   \   0000000E   0x2270             MOVS     R2,#+112
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy4
   1640              U8 temp_num;
   1641              char EVECONTENT[14][35]= {0};
   \   00000014   0xA81E             ADD      R0,SP,#+120
   \   00000016   0xF44F 0x71F6      MOV      R1,#+492
   \   0000001A   0x.... 0x....      BL       __aeabi_memclr4
   1642              char EvntType[][5]= {"U_ERR","F_ERR","U_WAV","U_UNB","L_FLK","U_THD","I_HAM","E_HAM","O_HAM"};
   \   0000001E   0xA812             ADD      R0,SP,#+72
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable17_12
   \   00000024   0x2230             MOVS     R2,#+48
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   1643              char EvntPhase[2][5]= {"START","STOP "};
   \   0000002A   0xA80F             ADD      R0,SP,#+60
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable17_13
   \   00000030   0xC91C             LDM      R1!,{R2-R4}
   \   00000032   0xC01C             STM      R0!,{R2-R4}
   \   00000034   0x390C             SUBS     R1,R1,#+12
   \   00000036   0x380C             SUBS     R0,R0,#+12
   1644              uchar EvntHead[10];
   1645          //    char_ptr file_name="12345678.csv",temp_dir="2013";
   1646              char temp_dir[5]="2013",file_name[12]="wk12345.csv";
   \   00000038   0xA80A             ADD      R0,SP,#+40
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000003E   0xC90C             LDM      R1!,{R2,R3}
   \   00000040   0xC00C             STM      R0!,{R2,R3}
   \   00000042   0x3908             SUBS     R1,R1,#+8
   \   00000044   0x3808             SUBS     R0,R0,#+8
   \   00000046   0xA80C             ADD      R0,SP,#+48
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable17_15
   \   0000004C   0xC91C             LDM      R1!,{R2-R4}
   \   0000004E   0xC01C             STM      R0!,{R2-R4}
   \   00000050   0x390C             SUBS     R1,R1,#+12
   \   00000052   0x380C             SUBS     R0,R0,#+12
   1647              U16 temp_year=0;U8 temp_month=0,month;U32 file_num;
   \   00000054   0x2400             MOVS     R4,#+0
   \   00000056   0x2500             MOVS     R5,#+0
   1648              
   1649              YADA_40(0x0000,0xfc00);//前景色为黑色，背景色为橙色 set only once
   \   00000058   0xF44F 0x417C      MOV      R1,#+64512
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x.... 0x....      BL       YADA_40
   1650              if(EVEfunflg==1)  //功能键发生标志置一
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable17_16
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x2801             CMP      R0,#+1
   \   0000006A   0xD129             BNE.N    ??GUI_EventList_0
   1651              {
   1652                  YADA_5B(&EVELSTXY[EventOldIndex*4],4);//擦除前一处
   \   0000006C   0x2104             MOVS     R1,#+4
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable17_17
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0xAA99             ADD      R2,SP,#+612
   \   00000076   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   0000007A   0x.... 0x....      BL       YADA_5B
   1653                  YADA_5A(&EVELSTXY[EVEline*4],4);    //背景色填充相所在的矩形区域
   \   0000007E   0x2104             MOVS     R1,#+4
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable17_18
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0xAA99             ADD      R2,SP,#+612
   \   00000088   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   0000008C   0x.... 0x....      BL       YADA_5A
   1654                  EventOldIndex=EVEline;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable17_17
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable17_18
   \   00000098   0x7809             LDRB     R1,[R1, #+0]
   \   0000009A   0x7001             STRB     R1,[R0, #+0]
   1655                  EveRdNum=EVEline+14*EVEpage+1;     //2013-4-9-10-18新增EveRdNum变量，记录故障录波波形的地址，加1.
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable17_18
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable17_19
   \   000000A6   0x7809             LDRB     R1,[R1, #+0]
   \   000000A8   0x220E             MOVS     R2,#+14
   \   000000AA   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000AE   0x1C40             ADDS     R0,R0,#+1
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable17_20
   \   000000B4   0x7008             STRB     R0,[R1, #+0]
   1656                  EVEfunflg=0;
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable17_16
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x7001             STRB     R1,[R0, #+0]
   \   000000BE   0xE008             B.N      ??GUI_EventList_1
   1657              }
   1658              else
   1659              {
   1660                YADA_5A(&EVELSTXY[EventOldIndex*4],4); //2013-4-9-15-18,未按上移下移按键的标注。
   \                     ??GUI_EventList_0:
   \   000000C0   0x2104             MOVS     R1,#+4
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable17_17
   \   000000C6   0x7800             LDRB     R0,[R0, #+0]
   \   000000C8   0xAA99             ADD      R2,SP,#+612
   \   000000CA   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   000000CE   0x.... 0x....      BL       YADA_5A
   1661              }
   1662              
   1663              if(USB_Flg==1&& SysFlashDataT[6]==1)
   \                     ??GUI_EventList_1:
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable17_21
   \   000000D6   0x7800             LDRB     R0,[R0, #+0]
   \   000000D8   0x2801             CMP      R0,#+1
   \   000000DA   0xF040 0x80D2      BNE.W    ??GUI_EventList_2
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable17_22
   \   000000E2   0x7980             LDRB     R0,[R0, #+6]
   \   000000E4   0x2801             CMP      R0,#+1
   \   000000E6   0xF040 0x80CC      BNE.W    ??GUI_EventList_2
   1664              {
   1665                SHELL_CONTEXT_PTR    shell_ptr;
   1666                shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   000000EA   0xF44F 0x70F2      MOV      R0,#+484
   \   000000EE   0x.... 0x....      BL       _lwmem_alloc_zero
   \   000000F2   0x0006             MOVS     R6,R0
   1667                _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   000000F4   0xF245 0x0101      MOVW     R1,#+20481
   \   000000F8   0x0030             MOVS     R0,R6
   \   000000FA   0x.... 0x....      BL       _lwmem_set_type
   1668              
   1669                shell_ptr->ARGC = 2;
   \   000000FE   0x2002             MOVS     R0,#+2
   \   00000100   0x6230             STR      R0,[R6, #+32]
   1670                shell_ptr->ARGV[0]="cd";
   \   00000102   0x....             ADR.N    R0,??DataTable14_1  ;; 0x63, 0x64, 0x00, 0x00
   \   00000104   0x6030             STR      R0,[R6, #+0]
   1671                shell_ptr->ARGV[1]="u:\\event"; 
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable17_23
   \   0000010A   0x6070             STR      R0,[R6, #+4]
   1672                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000010C   0x0031             MOVS     R1,R6
   \   0000010E   0x6A30             LDR      R0,[R6, #+32]
   \   00000110   0x.... 0x....      BL       Shell_cd
   1673                
   1674                for(uchar i=0;i<EVEnum;i++)
   \   00000114   0x2700             MOVS     R7,#+0
   \                     ??GUI_EventList_3:
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable17_24
   \   0000011A   0x7800             LDRB     R0,[R0, #+0]
   \   0000011C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000011E   0x4287             CMP      R7,R0
   \   00000120   0xF080 0x80C2      BCS.W    ??GUI_EventList_4
   1675                {
   1676                  if(temp_year!=evntyear_old)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable17_25
   \   00000128   0x8800             LDRH     R0,[R0, #+0]
   \   0000012A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000012C   0x4284             CMP      R4,R0
   \   0000012E   0xD013             BEQ.N    ??GUI_EventList_5
   1677                  {
   1678                    temp_year=evntyear_old;
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable17_25
   \   00000134   0x8804             LDRH     R4,[R0, #+0]
   1679          //          temp_dir=num2string(evntyear_old,4,0);
   1680                    sprintf(temp_dir,"%d",evntyear_old);
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable17_25
   \   0000013A   0x8802             LDRH     R2,[R0, #+0]
   \   0000013C   0x....             ADR.N    R1,??DataTable14_2  ;; 0x25, 0x64, 0x00, 0x00
   \   0000013E   0xA80A             ADD      R0,SP,#+40
   \   00000140   0x.... 0x....      BL       _io_sprintf
   1681                    
   1682                    shell_ptr->ARGC = 2;
   \   00000144   0x2002             MOVS     R0,#+2
   \   00000146   0x6230             STR      R0,[R6, #+32]
   1683                    shell_ptr->ARGV[0]="cd";
   \   00000148   0x....             ADR.N    R0,??DataTable14_1  ;; 0x63, 0x64, 0x00, 0x00
   \   0000014A   0x6030             STR      R0,[R6, #+0]
   1684                    shell_ptr->ARGV[1]=temp_dir; 
   \   0000014C   0xA80A             ADD      R0,SP,#+40
   \   0000014E   0x6070             STR      R0,[R6, #+4]
   1685                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000150   0x0031             MOVS     R1,R6
   \   00000152   0x6A30             LDR      R0,[R6, #+32]
   \   00000154   0x.... 0x....      BL       Shell_cd
   1686                  }
   1687                  /* wk @30425 --查看最新的事件地址存储协议，看下事件月份文件夹和文件名的获取是否是最新的 */
   1688          //        month=(EventAddr[i]/100000000);
   1689                  month = EventAddr[i]>>22;
   \                     ??GUI_EventList_5:
   \   00000158   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable17_26
   \   0000015E   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000162   0x0D82             LSRS     R2,R0,#+22
   1690                  if(temp_month!=month)
   \   00000164   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000166   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000168   0x4295             CMP      R5,R2
   \   0000016A   0xD00F             BEQ.N    ??GUI_EventList_6
   1691                  {
   1692                    temp_month=month;
   \   0000016C   0x0015             MOVS     R5,R2
   1693          //          temp_dir=num2string(month,2,0);
   1694                    sprintf(temp_dir,"%d",month);
   \   0000016E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000170   0x....             ADR.N    R1,??DataTable14_2  ;; 0x25, 0x64, 0x00, 0x00
   \   00000172   0xA80A             ADD      R0,SP,#+40
   \   00000174   0x.... 0x....      BL       _io_sprintf
   1695                    shell_ptr->ARGC = 2;
   \   00000178   0x2002             MOVS     R0,#+2
   \   0000017A   0x6230             STR      R0,[R6, #+32]
   1696                    shell_ptr->ARGV[0]="cd";
   \   0000017C   0x....             ADR.N    R0,??DataTable14_1  ;; 0x63, 0x64, 0x00, 0x00
   \   0000017E   0x6030             STR      R0,[R6, #+0]
   1697                    shell_ptr->ARGV[1]=temp_dir; 
   \   00000180   0xA80A             ADD      R0,SP,#+40
   \   00000182   0x6070             STR      R0,[R6, #+4]
   1698                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000184   0x0031             MOVS     R1,R6
   \   00000186   0x6A30             LDR      R0,[R6, #+32]
   \   00000188   0x.... 0x....      BL       Shell_cd
   1699                  }
   1700          //        file_num=EventAddr[i]%100000000;
   1701                  file_num=EventAddr[i]&0x3fffff;  // 
   \                     ??GUI_EventList_6:
   \   0000018C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable17_26
   \   00000192   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000196   0x0282             LSLS     R2,R0,#+10       ;; ZeroExtS R2,R0,#+10,#+10
   \   00000198   0x0A92             LSRS     R2,R2,#+10
   1702          //        file_name=num2string(file_num,8,1);
   1703                  /* wk @30425 --> end */
   1704                  
   1705                  sprintf(file_name,"%d.csv",file_num);
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable17_27
   \   0000019E   0xA80C             ADD      R0,SP,#+48
   \   000001A0   0x.... 0x....      BL       _io_sprintf
   1706                  
   1707                  shell_ptr->ARGC=5;
   \   000001A4   0x2005             MOVS     R0,#+5
   \   000001A6   0x6230             STR      R0,[R6, #+32]
   1708                  shell_ptr->ARGV[0]="read";
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable17_28
   \   000001AC   0x6030             STR      R0,[R6, #+0]
   1709                  shell_ptr->ARGV[1]=file_name;
   \   000001AE   0xA80C             ADD      R0,SP,#+48
   \   000001B0   0x6070             STR      R0,[R6, #+4]
   1710                  shell_ptr->ARGV[2]="10";
   \   000001B2   0x....             ADR.N    R0,??DataTable14_3  ;; 0x31, 0x30, 0x00, 0x00
   \   000001B4   0x60B0             STR      R0,[R6, #+8]
   1711                  shell_ptr->ARGV[3]="begin";
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable17_29
   \   000001BA   0x60F0             STR      R0,[R6, #+12]
   1712                  shell_ptr->ARGV[4]="0";
   \   000001BC   0x....             ADR.N    R0,??DataTable14_4  ;; "0"
   \   000001BE   0x6130             STR      R0,[R6, #+16]
   1713                  Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,EvntHead);
   \   000001C0   0xAA07             ADD      R2,SP,#+28
   \   000001C2   0x0031             MOVS     R1,R6
   \   000001C4   0x6A30             LDR      R0,[R6, #+32]
   \   000001C6   0x.... 0x....      BL       Shell_read_wk
   1714                  temp_num=i%14;
   \   000001CA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001CC   0x200E             MOVS     R0,#+14
   \   000001CE   0xFB97 0xF1F0      SDIV     R1,R7,R0
   \   000001D2   0xFB00 0x7811      MLS      R8,R0,R1,R7
   1715                  sprintf( EVECONTENT[temp_num], "%d %d-%d-%d %d:%d:%d %.5s %.5s",EvntHead[0],EvntHead[1]+EvntHead[2]<<8,
   1716                           EvntHead[3],EvntHead[4],EvntHead[5],EvntHead[6],EvntHead[7],EvntType[EvntHead[8]&0x3f],EvntPhase[EvntHead[9]]);
   \   000001D6   0xF89D 0x0025      LDRB     R0,[SP, #+37]
   \   000001DA   0x2105             MOVS     R1,#+5
   \   000001DC   0xAA0F             ADD      R2,SP,#+60
   \   000001DE   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000001E2   0x9006             STR      R0,[SP, #+24]
   \   000001E4   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \   000001E8   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000001EC   0x2105             MOVS     R1,#+5
   \   000001EE   0xAA12             ADD      R2,SP,#+72
   \   000001F0   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000001F4   0x9005             STR      R0,[SP, #+20]
   \   000001F6   0xF89D 0x0023      LDRB     R0,[SP, #+35]
   \   000001FA   0x9004             STR      R0,[SP, #+16]
   \   000001FC   0xF89D 0x0022      LDRB     R0,[SP, #+34]
   \   00000200   0x9003             STR      R0,[SP, #+12]
   \   00000202   0xF89D 0x0021      LDRB     R0,[SP, #+33]
   \   00000206   0x9002             STR      R0,[SP, #+8]
   \   00000208   0xF89D 0x0020      LDRB     R0,[SP, #+32]
   \   0000020C   0x9001             STR      R0,[SP, #+4]
   \   0000020E   0xF89D 0x001F      LDRB     R0,[SP, #+31]
   \   00000212   0x9000             STR      R0,[SP, #+0]
   \   00000214   0xF89D 0x001D      LDRB     R0,[SP, #+29]
   \   00000218   0xF89D 0x101E      LDRB     R1,[SP, #+30]
   \   0000021C   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   00000220   0x0203             LSLS     R3,R0,#+8
   \   00000222   0xF89D 0x201C      LDRB     R2,[SP, #+28]
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable17_30
   \   0000022A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000022E   0x2023             MOVS     R0,#+35
   \   00000230   0xF10D 0x0C78      ADD      R12,SP,#+120
   \   00000234   0xFB00 0xC008      MLA      R0,R0,R8,R12
   \   00000238   0x.... 0x....      BL       _io_sprintf
   1717                  asm("NOP");
   \   0000023C   0xBF00             NOP              
   1718                  YADA_98(40, EVELSTXY[temp_num*4+1], 0x22, 0x81, 0x02, C108FC_W, 0x0000, (U8 *)EVECONTENT[temp_num], 34);
   \   0000023E   0x2022             MOVS     R0,#+34
   \   00000240   0x9004             STR      R0,[SP, #+16]
   \   00000242   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000246   0x2023             MOVS     R0,#+35
   \   00000248   0xA91E             ADD      R1,SP,#+120
   \   0000024A   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   0000024E   0x9003             STR      R0,[SP, #+12]
   \   00000250   0x2000             MOVS     R0,#+0
   \   00000252   0x9002             STR      R0,[SP, #+8]
   \   00000254   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000258   0x9001             STR      R0,[SP, #+4]
   \   0000025A   0x2002             MOVS     R0,#+2
   \   0000025C   0x9000             STR      R0,[SP, #+0]
   \   0000025E   0x2381             MOVS     R3,#+129
   \   00000260   0x2222             MOVS     R2,#+34
   \   00000262   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000266   0xEA5F 0x0088      LSLS     R0,R8,#+2
   \   0000026A   0xA999             ADD      R1,SP,#+612
   \   0000026C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000270   0x8841             LDRH     R1,[R0, #+2]
   \   00000272   0x2028             MOVS     R0,#+40
   \   00000274   0x.... 0x....      BL       YADA_98
   1719                  
   1720                   _mem_free(shell_ptr);
   \   00000278   0x0030             MOVS     R0,R6
   \   0000027A   0x.... 0x....      BL       _lwmem_free
   1721                }
   \   0000027E   0x1C7F             ADDS     R7,R7,#+1
   \   00000280   0xE749             B.N      ??GUI_EventList_3
   1722              }
   1723              else if(USB_Flg==0)
   \                     ??GUI_EventList_2:
   \   00000282   0x.... 0x....      LDR.W    R0,??DataTable17_21
   \   00000286   0x7800             LDRB     R0,[R0, #+0]
   \   00000288   0x2800             CMP      R0,#+0
   \   0000028A   0xD104             BNE.N    ??GUI_EventList_7
   1724              {
   1725                printf("\nATTENTION:USB is DETACHED!\n");
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable17_31
   \   00000290   0x.... 0x....      BL       _io_printf
   \   00000294   0xE008             B.N      ??GUI_EventList_4
   1726              }
   1727              else if(SysFlashDataT[6]==0)
   \                     ??GUI_EventList_7:
   \   00000296   0x.... 0x....      LDR.W    R0,??DataTable17_22
   \   0000029A   0x7980             LDRB     R0,[R0, #+6]
   \   0000029C   0x2800             CMP      R0,#+0
   \   0000029E   0xD103             BNE.N    ??GUI_EventList_4
   1728              {
   1729                printf("\nATTENTION:USB Switch is CLOSED!\n");
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable17_32
   \   000002A4   0x.... 0x....      BL       _io_printf
   1730              }
   1731          }
   \                     ??GUI_EventList_4:
   \   000002A8   0xF50D 0x7D36      ADD      SP,SP,#+728
   \   000002AC   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1732          /*******************************************************************************
   1733          * 函  数  名      : GUI_EventWave
   1734          * 描      述      : 事件波形显示
   1735          * 输      入      : 无
   1736          * 返      回      : 无
   1737          * 问      题      : ? 在函数内部定义局部变量数据 EvntWave时，程序会走飞，研究栈与堆可以解决此问题。? @130413
   1738          *******************************************************************************/ 
   1739          

   \                                 In section .text, align 2, keep-with-next
   1740          void GUI_EventWave(U8 U_DISK)
   1741          {
   \                     GUI_EventWave:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB0F8             SUB      SP,SP,#+480
   1742              U16 totalline=0,Coord_UI[]= {14,68,200,404,273,429};   //剪切及原点坐标;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xA805             ADD      R0,SP,#+20
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable17_33
   \   0000000C   0xC92C             LDM      R1!,{R2,R3,R5}
   \   0000000E   0xC02C             STM      R0!,{R2,R3,R5}
   \   00000010   0x390C             SUBS     R1,R1,#+12
   \   00000012   0x380C             SUBS     R0,R0,#+12
   1743              U16 XY[]= {36,54,40,50,44,54,40,50,40,420,40,224,598,224,594,220,598,224,594,228};
   \   00000014   0xA80D             ADD      R0,SP,#+52
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable17_34
   \   0000001A   0x2228             MOVS     R2,#+40
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   1744              U16 EVEUI[192];
   1745          //    U8 EvntWave[1536];
   1746              
   1747              char file_name[18]="12\\12345678.csv";
   \   00000020   0xA808             ADD      R0,SP,#+32
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable17_35
   \   00000026   0x2212             MOVS     R2,#+18
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy4
   1748              uint_32 file_num;
   1749              
   1750              if(USB_Flg==1&& SysFlashDataT[6]==1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable17_21
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xF040 0x80EB      BNE.W    ??GUI_EventWave_0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable17_22
   \   0000003C   0x7980             LDRB     R0,[R0, #+6]
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xF040 0x80E5      BNE.W    ??GUI_EventWave_0
   1751              {
   1752                SHELL_CONTEXT_PTR    shell_ptr;
   1753                shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000044   0xF44F 0x70F2      MOV      R0,#+484
   \   00000048   0x.... 0x....      BL       _lwmem_alloc_zero
   \   0000004C   0x0005             MOVS     R5,R0
   1754                _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   0000004E   0xF245 0x0101      MOVW     R1,#+20481
   \   00000052   0x0028             MOVS     R0,R5
   \   00000054   0x.... 0x....      BL       _lwmem_set_type
   1755                
   1756                shell_ptr->ARGC = 2;
   \   00000058   0x2002             MOVS     R0,#+2
   \   0000005A   0x6228             STR      R0,[R5, #+32]
   1757                shell_ptr->ARGV[0]="cd";
   \   0000005C   0x....             ADR.N    R0,??DataTable15  ;; 0x63, 0x64, 0x00, 0x00
   \   0000005E   0x6028             STR      R0,[R5, #+0]
   1758                shell_ptr->ARGV[1]="u:\\event"; 
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable17_23
   \   00000064   0x6068             STR      R0,[R5, #+4]
   1759                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);   
   \   00000066   0x0029             MOVS     R1,R5
   \   00000068   0x6A28             LDR      R0,[R5, #+32]
   \   0000006A   0x.... 0x....      BL       Shell_cd
   1760                
   1761          //      uchar SECOND=50,MINUTE=30,HOUR=11,DAY=13,MONTH=4,EvntRx=128;
   1762          //      file_num=(U32)SECOND+((U32)MINUTE<<6)+((U32)HOUR<<12)+((U32)DAY<<17)
   1763          //                               +((U32)MONTH<<22)+((U32)(EvntRx&0x0f)<<26);  // WK @30413 --> TEST
   1764                file_num=EventAddr[EveRdNum-1]; // wk @130413-->获取事件的文件名的月、日、时、分、秒值
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable17_20
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable17_26
   \   00000078   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   0000007C   0xF850 0x0C04      LDR      R0,[R0, #-4]
   1765                sprintf(file_name,"%d\\%d.CSV",file_num>>22,file_num&0x3fffff);///100000000
   \   00000080   0x0283             LSLS     R3,R0,#+10       ;; ZeroExtS R3,R0,#+10,#+10
   \   00000082   0x0A9B             LSRS     R3,R3,#+10
   \   00000084   0x0D82             LSRS     R2,R0,#+22
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable17_36
   \   0000008A   0xA808             ADD      R0,SP,#+32
   \   0000008C   0x.... 0x....      BL       _io_sprintf
   1766                printf("file=%s\n",file_name);
   \   00000090   0xA908             ADD      R1,SP,#+32
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable17_37
   \   00000096   0x.... 0x....      BL       _io_printf
   1767                
   1768          //      shell_ptr->ARGC=5;
   1769          //      shell_ptr->ARGV[0]="read";
   1770          //      shell_ptr->ARGV[1]=file_name;
   1771          //      shell_ptr->ARGV[2]="1536";
   1772          //      shell_ptr->ARGV[3]="begin";
   1773          //      shell_ptr->ARGV[4]="0";
   1774          //      Shell_read_wk(shell_ptr->ARGC, shell_ptr->ARGV,EveWav);  
   1775          
   1776                if((EVEnum>1)&&(EveRdNum<=(EVEnum-1)))  //2013-4-9-12-30故障发生才显示。
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable17_24
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2802             CMP      R0,#+2
   \   000000A2   0xF0C0 0x809C      BCC.W    ??GUI_EventWave_1
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable17_24
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x1E40             SUBS     R0,R0,#+1
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable17_20
   \   000000B2   0x7809             LDRB     R1,[R1, #+0]
   \   000000B4   0x4288             CMP      R0,R1
   \   000000B6   0xF2C0 0x8092      BLT.W    ??GUI_EventWave_1
   1777                {
   1778                      for(U8 i=0; i<4; i++)
   \   000000BA   0x2600             MOVS     R6,#+0
   \   000000BC   0xE02F             B.N      ??GUI_EventWave_2
   1779                      {
   1780                          for(U8 j=0; j<LINENUM; j++)
   1781                          {
   1782                              //JT-test 2013-4-6，放大倍数改变。
   1783          //                    EVEUI[j]=((((int)EveWav[j*24])<<8)+((int)EveWav[j*24+1]))/40+85;
   1784          //                    EVEUI[j+Linenum]=((((int)EveWav[j*24+2])<<8)+((int)EveWav[j*24+3]))/40+85;
   1785          //                    EVEUI[j+Linenum*2]=((((int)EveWav[j*24+4])<<8)+((int)EveWav[j*24+5]))/40+85;
   1786                            /* WK @130413 --> ?? 待完善，首先解决局部变量和全局变量之间差异的问题，也应该是堆和栈的问题 */
   1787                              EVEUI[j]=0; 
   \                     ??GUI_EventWave_3:
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C0   0xA917             ADD      R1,SP,#+92
   \   000000C2   0x2200             MOVS     R2,#+0
   \   000000C4   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
   1788                              EVEUI[j+LINENUM]=1;
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0xA917             ADD      R1,SP,#+92
   \   000000CC   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000000D0   0x2201             MOVS     R2,#+1
   \   000000D2   0xF8A1 0x2080      STRH     R2,[R1, #+128]
   1789                              EVEUI[j+LINENUM*2]=3;
   \   000000D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D8   0xA917             ADD      R1,SP,#+92
   \   000000DA   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   000000DE   0x2203             MOVS     R2,#+3
   \   000000E0   0xF8A1 0x2100      STRH     R2,[R1, #+256]
   1790                          }
   \   000000E4   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_EventWave_4:
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2840             CMP      R0,#+64
   \   000000EA   0xD3E8             BCC.N    ??GUI_EventWave_3
   1791                          totalline=LINENUM*i;
   \   000000EC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000EE   0x2040             MOVS     R0,#+64
   \   000000F0   0xFB00 0xF406      MUL      R4,R0,R6
   1792                          YADA_C0 (0x0000+totalline,EVEUI,LINENUM);
   \   000000F4   0x2240             MOVS     R2,#+64
   \   000000F6   0xA917             ADD      R1,SP,#+92
   \   000000F8   0x0020             MOVS     R0,R4
   \   000000FA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000FC   0x.... 0x....      BL       YADA_C0
   1793                          YADA_C0 (0x0400+totalline,&EVEUI[LINENUM],LINENUM);//,UB_addr
   \   00000100   0x2240             MOVS     R2,#+64
   \   00000102   0xA937             ADD      R1,SP,#+220
   \   00000104   0xF514 0x6080      ADDS     R0,R4,#+1024
   \   00000108   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000010A   0x.... 0x....      BL       YADA_C0
   1794                          YADA_C0 (0x0800+totalline,&EVEUI[LINENUM*2],LINENUM);
   \   0000010E   0x2240             MOVS     R2,#+64
   \   00000110   0xA957             ADD      R1,SP,#+348
   \   00000112   0xF514 0x6000      ADDS     R0,R4,#+2048
   \   00000116   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000118   0x.... 0x....      BL       YADA_C0
   \   0000011C   0x1C76             ADDS     R6,R6,#+1
   \                     ??GUI_EventWave_2:
   \   0000011E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000120   0x2E04             CMP      R6,#+4
   \   00000122   0xD201             BCS.N    ??GUI_EventWave_5
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0xE7DE             B.N      ??GUI_EventWave_4
   1795                      }
   1796                      //JT-test xy坐标
   1797                      YADA_40(0xffff,0x0000);
   \                     ??GUI_EventWave_5:
   \   00000128   0x2100             MOVS     R1,#+0
   \   0000012A   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000012E   0x.... 0x....      BL       YADA_40
   1798                      YADA_56(XY,6);
   \   00000132   0x2106             MOVS     R1,#+6
   \   00000134   0xA80D             ADD      R0,SP,#+52
   \   00000136   0x.... 0x....      BL       YADA_56
   1799                      YADA_56(&XY[6],4);
   \   0000013A   0x2104             MOVS     R1,#+4
   \   0000013C   0xA810             ADD      R0,SP,#+64
   \   0000013E   0x.... 0x....      BL       YADA_56
   1800                      YADA_56(&XY[10],4);
   \   00000142   0x2104             MOVS     R1,#+4
   \   00000144   0xA812             ADD      R0,SP,#+72
   \   00000146   0x.... 0x....      BL       YADA_56
   1801                      YADA_56(&XY[14],6);
   \   0000014A   0x2106             MOVS     R1,#+6
   \   0000014C   0xA814             ADD      R0,SP,#+80
   \   0000014E   0x.... 0x....      BL       YADA_56
   1802                      YADA_98(44,56, 0x22, 0x81, 0x02, C108FC_W, 0x0000,"U", 1);
   \   00000152   0x2001             MOVS     R0,#+1
   \   00000154   0x9004             STR      R0,[SP, #+16]
   \   00000156   0x....             ADR.N    R0,??DataTable15_1  ;; "U"
   \   00000158   0x9003             STR      R0,[SP, #+12]
   \   0000015A   0x2000             MOVS     R0,#+0
   \   0000015C   0x9002             STR      R0,[SP, #+8]
   \   0000015E   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000162   0x9001             STR      R0,[SP, #+4]
   \   00000164   0x2002             MOVS     R0,#+2
   \   00000166   0x9000             STR      R0,[SP, #+0]
   \   00000168   0x2381             MOVS     R3,#+129
   \   0000016A   0x2222             MOVS     R2,#+34
   \   0000016C   0x2138             MOVS     R1,#+56
   \   0000016E   0x202C             MOVS     R0,#+44
   \   00000170   0x.... 0x....      BL       YADA_98
   1803                      YADA_C103 (0x0000,40,Coord_UI[3],255,1,2,32,COLOR[0]);
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable17_38
   \   00000178   0x8800             LDRH     R0,[R0, #+0]
   \   0000017A   0x9003             STR      R0,[SP, #+12]
   \   0000017C   0x2020             MOVS     R0,#+32
   \   0000017E   0x9002             STR      R0,[SP, #+8]
   \   00000180   0x2002             MOVS     R0,#+2
   \   00000182   0x9001             STR      R0,[SP, #+4]
   \   00000184   0x2001             MOVS     R0,#+1
   \   00000186   0x9000             STR      R0,[SP, #+0]
   \   00000188   0x23FF             MOVS     R3,#+255
   \   0000018A   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   0000018E   0x2128             MOVS     R1,#+40
   \   00000190   0x2000             MOVS     R0,#+0
   \   00000192   0x.... 0x....      BL       YADA_C103
   1804                      YADA_C103 (0x0400,40,Coord_UI[3],255,1,2,32,COLOR[1]);
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable17_38
   \   0000019A   0x8840             LDRH     R0,[R0, #+2]
   \   0000019C   0x9003             STR      R0,[SP, #+12]
   \   0000019E   0x2020             MOVS     R0,#+32
   \   000001A0   0x9002             STR      R0,[SP, #+8]
   \   000001A2   0x2002             MOVS     R0,#+2
   \   000001A4   0x9001             STR      R0,[SP, #+4]
   \   000001A6   0x2001             MOVS     R0,#+1
   \   000001A8   0x9000             STR      R0,[SP, #+0]
   \   000001AA   0x23FF             MOVS     R3,#+255
   \   000001AC   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   000001B0   0x2128             MOVS     R1,#+40
   \   000001B2   0xF44F 0x6080      MOV      R0,#+1024
   \   000001B6   0x.... 0x....      BL       YADA_C103
   1805                      YADA_C103 (0x0800,40,Coord_UI[3],255,1,2,32,COLOR[2]);    
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable17_38
   \   000001BE   0x8880             LDRH     R0,[R0, #+4]
   \   000001C0   0x9003             STR      R0,[SP, #+12]
   \   000001C2   0x2020             MOVS     R0,#+32
   \   000001C4   0x9002             STR      R0,[SP, #+8]
   \   000001C6   0x2002             MOVS     R0,#+2
   \   000001C8   0x9001             STR      R0,[SP, #+4]
   \   000001CA   0x2001             MOVS     R0,#+1
   \   000001CC   0x9000             STR      R0,[SP, #+0]
   \   000001CE   0x23FF             MOVS     R3,#+255
   \   000001D0   0xF8BD 0x201A      LDRH     R2,[SP, #+26]
   \   000001D4   0x2128             MOVS     R1,#+40
   \   000001D6   0xF44F 0x6000      MOV      R0,#+2048
   \   000001DA   0x.... 0x....      BL       YADA_C103
   1806                } 
   1807                YADA_98(150, 40, 0x22, 0x81, 0x02, C108FC_W, 0x0000,(U8 *)file_name, 16);//2013-4-9-10-18测试事件文件名 ????
   \                     ??GUI_EventWave_1:
   \   000001DE   0x2010             MOVS     R0,#+16
   \   000001E0   0x9004             STR      R0,[SP, #+16]
   \   000001E2   0xA808             ADD      R0,SP,#+32
   \   000001E4   0x9003             STR      R0,[SP, #+12]
   \   000001E6   0x2000             MOVS     R0,#+0
   \   000001E8   0x9002             STR      R0,[SP, #+8]
   \   000001EA   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000001EE   0x9001             STR      R0,[SP, #+4]
   \   000001F0   0x2002             MOVS     R0,#+2
   \   000001F2   0x9000             STR      R0,[SP, #+0]
   \   000001F4   0x2381             MOVS     R3,#+129
   \   000001F6   0x2222             MOVS     R2,#+34
   \   000001F8   0x2128             MOVS     R1,#+40
   \   000001FA   0x2096             MOVS     R0,#+150
   \   000001FC   0x.... 0x....      BL       YADA_98
   1808                delay_ms(5);
   \   00000200   0x2005             MOVS     R0,#+5
   \   00000202   0x.... 0x....      BL       delay_ms
   1809                _mem_free(shell_ptr);
   \   00000206   0x0028             MOVS     R0,R5
   \   00000208   0x.... 0x....      BL       _lwmem_free
   \   0000020C   0xE012             B.N      ??GUI_EventWave_6
   1810              }
   1811              else if(USB_Flg==0)
   \                     ??GUI_EventWave_0:
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable17_21
   \   00000212   0x7800             LDRB     R0,[R0, #+0]
   \   00000214   0x2800             CMP      R0,#+0
   \   00000216   0xD104             BNE.N    ??GUI_EventWave_7
   1812              {
   1813                printf("\nATTENTION:USB is DETACHED!\n");
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable17_31
   \   0000021C   0x.... 0x....      BL       _io_printf
   \   00000220   0xE008             B.N      ??GUI_EventWave_6
   1814              }
   1815              else if(SysFlashDataT[6]==0)
   \                     ??GUI_EventWave_7:
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable17_22
   \   00000226   0x7980             LDRB     R0,[R0, #+6]
   \   00000228   0x2800             CMP      R0,#+0
   \   0000022A   0xD103             BNE.N    ??GUI_EventWave_6
   1816              {
   1817                printf("\nATTENTION:USB Switch is CLOSED!\n");
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable17_32
   \   00000230   0x.... 0x....      BL       _io_printf
   1818              }
   1819          }
   \                     ??GUI_EventWave_6:
   \   00000234   0xB078             ADD      SP,SP,#+480
   \   00000236   0xBD70             POP      {R4-R6,PC}       ;; return
   1820          /*******************************************************************************
   1821          * 函  数  名      : GUI_STATUS
   1822          * 描      述      : 工作状态的显示，如U盘存储，IP地址，版本号等。
   1823          * 输      入      : U8 U_DISK，U盘的标志。
   1824          * 返      回      : 无
   1825          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1826          void GUI_STATUS(U8 U_DISK)
   1827          {
   1828            // wk @130409 --> 内容待完善
   1829          //    U16 StatusC108[21]= {0},U_DISC[3]= {0};
   1830          //    U8 temp=0,pBuf1[64]= {0},pBuf2[64]= {0};
   1831          //    if(U_DISK==1)
   1832          //    {
   1833          //        CH376ReadBlock( pBuf1 );  //如果需要,可以读取数据块CH376_CMD_DATA.DiskMountInq,返回长度
   1834          //        CH376DiskCapacity((PU32)pBuf2);//为读取U盘总容量函数。
   1835          //        CH376DiskQuery((PU32)pBuf1);  //读取U盘剩余容量函数。
   1836          //        U_DISC[0]=(U16)(*(PU32)pBuf2 / ( 1000000 / DEF_SECTOR_SIZE ) );
   1837          //        U_DISC[1]=(U16)(*(PU32)pBuf1 / ( 1000000 / DEF_SECTOR_SIZE ) );
   1838          //        U_DISC[2]=(U16)(U_DISC[1]/120);
   1839          //    }
   1840          //    for(U8 i=0; i<3; i++)
   1841          //    {
   1842          //        temp=7*i;
   1843          //        StatusC108[temp]=0x6004;//显示数据的模式
   1844          //        StatusC108[temp+1]=480;//显示左边列谐波数据的X为82,右边列谐波数据X为438
   1845          //        StatusC108[temp+2]=94+37*i;//Y坐标
   1846          //        StatusC108[temp+3]=C108FC_W;
   1847          //        StatusC108[temp+4]=0x0000;
   1848          //        StatusC108[temp+5]=0;
   1849          //        StatusC108[temp+6]=U_DISC[i];
   1850          //    }
   1851          //    YADA_C0(StatusAddr,StatusC108,21);
   1852          //    YADA_C108(StatusAddr,3);
   1853          }
   \                     GUI_STATUS:
   \   00000000   0x4770             BX       LR               ;; return
   1854          /*******************************************************************************
   1855          * 函  数  名      : EventSave
   1856          * 描      述      : 事件存储
   1857          * 输      入      :
   1858          * 返      回      : 无
   1859          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1860          void EventSave(U8 U_DISK)
   1861          {
   \                     EventSave:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   1862              if(USB_Flg==1&& SysFlashDataT[6]==1) // ==1 时插入
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable17_21
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xF040 0x80DD      BNE.W    ??EventSave_0
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable17_22
   \   00000014   0x7980             LDRB     R0,[R0, #+6]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xF040 0x80D7      BNE.W    ??EventSave_0
   1863              {
   1864                    SHELL_CONTEXT_PTR    shell_ptr;
   1865                    shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   0000001C   0xF44F 0x70F2      MOV      R0,#+484
   \   00000020   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000024   0x0004             MOVS     R4,R0
   1866                    _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   00000026   0xF245 0x0101      MOVW     R1,#+20481
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x.... 0x....      BL       _lwmem_set_type
   1867          //          static   char_ptr file_name="12345678.csv",evntdir_name,monthDir_name;
   1868                    static char file_name[12]="wk12345.csv",evntdir_name[5]="2013",monthDir_name[3]="12";
   1869                    
   1870                    static uint_16 month_old=0;
   1871                    uint_32 file_size;
   1872                    
   1873                    TIME_STRUCT             time_sf;
   1874                    DATE_STRUCT             date_sf;     
   1875                    _time_get(&time_sf);
   \   00000030   0xA804             ADD      R0,SP,#+16
   \   00000032   0x.... 0x....      BL       _time_get
   1876                    _time_to_date(&time_sf,&date_sf);
   \   00000036   0xA900             ADD      R1,SP,#+0
   \   00000038   0xA804             ADD      R0,SP,#+16
   \   0000003A   0x.... 0x....      BL       _time_to_date
   1877              
   1878                    shell_ptr->ARGC = 2;
   \   0000003E   0x2002             MOVS     R0,#+2
   \   00000040   0x6220             STR      R0,[R4, #+32]
   1879                    shell_ptr->ARGV[0]="cd";
   \   00000042   0x....             ADR.N    R0,??DataTable16  ;; 0x63, 0x64, 0x00, 0x00
   \   00000044   0x6020             STR      R0,[R4, #+0]
   1880                    shell_ptr->ARGV[1]="u:\\event"; 
   \   00000046   0x....             LDR.N    R0,??DataTable17_23
   \   00000048   0x6060             STR      R0,[R4, #+4]
   1881                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000004A   0x0021             MOVS     R1,R4
   \   0000004C   0x6A20             LDR      R0,[R4, #+32]
   \   0000004E   0x.... 0x....      BL       Shell_cd
   1882                  
   1883                    if(evntyear_old!=date_sf.YEAR) // wk --> creata a dir named of year
   \   00000052   0x....             LDR.N    R0,??DataTable17_25
   \   00000054   0x8800             LDRH     R0,[R0, #+0]
   \   00000056   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xD014             BEQ.N    ??EventSave_1
   1884                    {
   1885          //            evntdir_name=num2string(date_sf.YEAR,4,0);
   1886                      sprintf(evntdir_name,"%d",date_sf.YEAR);
   \   0000005E   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   00000062   0x....             ADR.N    R1,??DataTable16_2  ;; 0x25, 0x64, 0x00, 0x00
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable17_39
   \   00000068   0x.... 0x....      BL       _io_sprintf
   1887                      evntyear_old=date_sf.YEAR;
   \   0000006C   0x....             LDR.N    R0,??DataTable17_25
   \   0000006E   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000072   0x8001             STRH     R1,[R0, #+0]
   1888                      
   1889                      shell_ptr->ARGC = 2;
   \   00000074   0x2002             MOVS     R0,#+2
   \   00000076   0x6220             STR      R0,[R4, #+32]
   1890                      shell_ptr->ARGV[0]="mkdir";
   \   00000078   0x....             LDR.N    R0,??DataTable17_40
   \   0000007A   0x6020             STR      R0,[R4, #+0]
   1891                      shell_ptr->ARGV[1]=evntdir_name; 
   \   0000007C   0x....             LDR.N    R0,??DataTable17_39
   \   0000007E   0x6060             STR      R0,[R4, #+4]
   1892                      Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000080   0x0021             MOVS     R1,R4
   \   00000082   0x6A20             LDR      R0,[R4, #+32]
   \   00000084   0x.... 0x....      BL       Shell_mkdir
   1893                    }
   1894                    
   1895                    shell_ptr->ARGC = 2;
   \                     ??EventSave_1:
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x6220             STR      R0,[R4, #+32]
   1896                    shell_ptr->ARGV[0]="cd";
   \   0000008C   0x....             ADR.N    R0,??DataTable16  ;; 0x63, 0x64, 0x00, 0x00
   \   0000008E   0x6020             STR      R0,[R4, #+0]
   1897                    shell_ptr->ARGV[1]=evntdir_name; 
   \   00000090   0x....             LDR.N    R0,??DataTable17_39
   \   00000092   0x6060             STR      R0,[R4, #+4]
   1898                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000094   0x0021             MOVS     R1,R4
   \   00000096   0x6A20             LDR      R0,[R4, #+32]
   \   00000098   0x.... 0x....      BL       Shell_cd
   1899                    if(month_old!=date_sf.MONTH)
   \   0000009C   0x....             LDR.N    R0,??DataTable17_41
   \   0000009E   0x8800             LDRH     R0,[R0, #+0]
   \   000000A0   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000000A4   0x4288             CMP      R0,R1
   \   000000A6   0xD013             BEQ.N    ??EventSave_2
   1900                    {
   1901          //            monthDir_name=num2string(date_sf.MONTH,2,0);
   1902                      sprintf(monthDir_name,"%d",date_sf.MONTH);
   \   000000A8   0xF8BD 0x2002      LDRH     R2,[SP, #+2]
   \   000000AC   0x....             ADR.N    R1,??DataTable16_2  ;; 0x25, 0x64, 0x00, 0x00
   \   000000AE   0x....             LDR.N    R0,??DataTable17_42
   \   000000B0   0x.... 0x....      BL       _io_sprintf
   1903                      month_old=date_sf.MONTH;
   \   000000B4   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000B8   0x....             LDR.N    R1,??DataTable17_41
   \   000000BA   0x8008             STRH     R0,[R1, #+0]
   1904                      
   1905                      shell_ptr->ARGC = 2;
   \   000000BC   0x2002             MOVS     R0,#+2
   \   000000BE   0x6220             STR      R0,[R4, #+32]
   1906                      shell_ptr->ARGV[0]="mkdir";
   \   000000C0   0x....             LDR.N    R0,??DataTable17_40
   \   000000C2   0x6020             STR      R0,[R4, #+0]
   1907                      shell_ptr->ARGV[1]=monthDir_name; 
   \   000000C4   0x....             LDR.N    R0,??DataTable17_42
   \   000000C6   0x6060             STR      R0,[R4, #+4]
   1908                      Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000000C8   0x0021             MOVS     R1,R4
   \   000000CA   0x6A20             LDR      R0,[R4, #+32]
   \   000000CC   0x.... 0x....      BL       Shell_mkdir
   1909                    }
   1910                    shell_ptr->ARGC = 2;
   \                     ??EventSave_2:
   \   000000D0   0x2002             MOVS     R0,#+2
   \   000000D2   0x6220             STR      R0,[R4, #+32]
   1911                    shell_ptr->ARGV[0]="cd";
   \   000000D4   0x....             ADR.N    R0,??DataTable16  ;; 0x63, 0x64, 0x00, 0x00
   \   000000D6   0x6020             STR      R0,[R4, #+0]
   1912                    shell_ptr->ARGV[1]=monthDir_name; 
   \   000000D8   0x....             LDR.N    R0,??DataTable17_42
   \   000000DA   0x6060             STR      R0,[R4, #+4]
   1913                    Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   000000DC   0x0021             MOVS     R1,R4
   \   000000DE   0x6A20             LDR      R0,[R4, #+32]
   \   000000E0   0x.... 0x....      BL       Shell_cd
   1914                              
   1915                    sprintf(file_name,"%d.csv",date_sf.SECOND+(date_sf.MINUTE<<6)+(date_sf.HOUR<<12)+(date_sf.DAY<<17));
   \   000000E4   0xF8BD 0x000A      LDRH     R0,[SP, #+10]
   \   000000E8   0xF8BD 0x1008      LDRH     R1,[SP, #+8]
   \   000000EC   0x0189             LSLS     R1,R1,#+6
   \   000000EE   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000000F2   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   000000F6   0xEB10 0x3001      ADDS     R0,R0,R1, LSL #+12
   \   000000FA   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   000000FE   0xEB10 0x4241      ADDS     R2,R0,R1, LSL #+17
   \   00000102   0x....             LDR.N    R1,??DataTable17_27
   \   00000104   0x....             LDR.N    R0,??DataTable17_43
   \   00000106   0x.... 0x....      BL       _io_sprintf
   1916                    
   1917                    if(EVEnum==100)
   \   0000010A   0x....             LDR.N    R0,??DataTable17_24
   \   0000010C   0x7800             LDRB     R0,[R0, #+0]
   \   0000010E   0x2864             CMP      R0,#+100
   \   00000110   0xD103             BNE.N    ??EventSave_3
   1918                      EVEnum=1;
   \   00000112   0x....             LDR.N    R0,??DataTable17_24
   \   00000114   0x2101             MOVS     R1,#+1
   \   00000116   0x7001             STRB     R1,[R0, #+0]
   \   00000118   0xE004             B.N      ??EventSave_4
   1919                    else
   1920                      EVEnum++; // wk @130412-->事件总数
   \                     ??EventSave_3:
   \   0000011A   0x....             LDR.N    R0,??DataTable17_24
   \   0000011C   0x7800             LDRB     R0,[R0, #+0]
   \   0000011E   0x1C40             ADDS     R0,R0,#+1
   \   00000120   0x....             LDR.N    R1,??DataTable17_24
   \   00000122   0x7008             STRB     R0,[R1, #+0]
   1921          //          EventAddr[EVEnum-1]=date_sf.MONTH*100000000+date_sf.DAY*1000000+date_sf.HOUR*10000+
   1922          //                            date_sf.MINUTE*100+date_sf.SECOND; // wk @130412-->获得当前事件的地址：、日、时、分、秒
   1923                    EventAddr[EVEnum-1]= date_sf.SECOND+(date_sf.MINUTE<<6)+(date_sf.HOUR<<12)+(date_sf.DAY<<17)
   1924                                         +(date_sf.MONTH<<22)+((EvntRxchar[0]&0x3f)<<26)+EvntRxchar[1]&0x01<<30;  //wk @130425 -->添加事件开始/结束标志
   \                     ??EventSave_4:
   \   00000124   0xF8BD 0x000A      LDRH     R0,[SP, #+10]
   \   00000128   0xF8BD 0x1008      LDRH     R1,[SP, #+8]
   \   0000012C   0x0189             LSLS     R1,R1,#+6
   \   0000012E   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000132   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   00000136   0xEB10 0x3001      ADDS     R0,R0,R1, LSL #+12
   \   0000013A   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   0000013E   0xEB10 0x4041      ADDS     R0,R0,R1, LSL #+17
   \   00000142   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000146   0xEB10 0x5081      ADDS     R0,R0,R1, LSL #+22
   \   0000014A   0x....             LDR.N    R1,??DataTable17_44
   \   0000014C   0x7809             LDRB     R1,[R1, #+0]
   \   0000014E   0xEB10 0x6081      ADDS     R0,R0,R1, LSL #+26
   \   00000152   0x....             LDR.N    R1,??DataTable17_44
   \   00000154   0x7849             LDRB     R1,[R1, #+1]
   \   00000156   0x1840             ADDS     R0,R0,R1
   \   00000158   0xF010 0x4080      ANDS     R0,R0,#0x40000000
   \   0000015C   0x....             LDR.N    R1,??DataTable17_24
   \   0000015E   0x7809             LDRB     R1,[R1, #+0]
   \   00000160   0x....             LDR.N    R2,??DataTable17_26
   \   00000162   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000166   0xF841 0x0C04      STR      R0,[R1, #-4]
   1925                    EventNum[(EvntRxchar[0]&0x3f)*2]++; // wk @130412-->事件类型叠加
   \   0000016A   0x....             LDR.N    R0,??DataTable17_44
   \   0000016C   0x7800             LDRB     R0,[R0, #+0]
   \   0000016E   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   00000172   0x....             LDR.N    R1,??DataTable17_45
   \   00000174   0xF811 0x0010      LDRB     R0,[R1, R0, LSL #+1]
   \   00000178   0x1C40             ADDS     R0,R0,#+1
   \   0000017A   0x....             LDR.N    R1,??DataTable17_44
   \   0000017C   0x7809             LDRB     R1,[R1, #+0]
   \   0000017E   0xF011 0x013F      ANDS     R1,R1,#0x3F
   \   00000182   0x....             LDR.N    R2,??DataTable17_45
   \   00000184   0xF802 0x0011      STRB     R0,[R2, R1, LSL #+1]
   1926                    
   1927                    /* wk @130412--> 总数 + 时间 + 类型 + 开始/结束 + 数据 */
   1928                   
   1929                    shell_ptr->ARGC=4;
   \   00000188   0x2004             MOVS     R0,#+4
   \   0000018A   0x6220             STR      R0,[R4, #+32]
   1930                    shell_ptr->ARGV[0]="write";
   \   0000018C   0x....             LDR.N    R0,??DataTable17_46
   \   0000018E   0x6020             STR      R0,[R4, #+0]
   1931                    shell_ptr->ARGV[1]=file_name;
   \   00000190   0x....             LDR.N    R0,??DataTable17_43
   \   00000192   0x6060             STR      R0,[R4, #+4]
   1932                    shell_ptr->ARGV[2]="current";
   \   00000194   0x....             LDR.N    R0,??DataTable17_47
   \   00000196   0x60A0             STR      R0,[R4, #+8]
   1933                    shell_ptr->ARGV[3]="0";
   \   00000198   0x....             ADR.N    R0,??DataTable17  ;; "0"
   \   0000019A   0x60E0             STR      R0,[R4, #+12]
   1934                    Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,1,&EVEnum);
                           ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly

            uint_32 file_size;
                    ^
"E:\Freescale\mqx_test\YD_PRJ_NEW_20130323_git_\Source\MenuView.c",1871  Warning[Pe177]: 
          variable "file_size" was declared but never referenced
   \   0000019C   0x....             LDR.N    R3,??DataTable17_24
   \   0000019E   0x2201             MOVS     R2,#+1
   \   000001A0   0x0021             MOVS     R1,R4
   \   000001A2   0x6A20             LDR      R0,[R4, #+32]
   \   000001A4   0x.... 0x....      BL       Shell_write_binary
   1935                    Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,7,&date_sf);
   \   000001A8   0xAB00             ADD      R3,SP,#+0
   \   000001AA   0x2207             MOVS     R2,#+7
   \   000001AC   0x0021             MOVS     R1,R4
   \   000001AE   0x6A20             LDR      R0,[R4, #+32]
   \   000001B0   0x.... 0x....      BL       Shell_write_binary
   1936                    /* wk @130412 --> test */
   1937          //          uchar test[]={0,1,2,3,4,5,6,7,8,9,10};
   1938          //          Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,100,test);
   1939                    /* wk @130412 --> save event data */
   1940                    Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,Evnt_SIZE,EvntRxchar); // wk @130412-->EvntRxchar包含标志位和事件数据
   \   000001B4   0x....             LDR.N    R3,??DataTable17_44
   \   000001B6   0xF641 0x0202      MOVW     R2,#+6146
   \   000001BA   0x0021             MOVS     R1,R4
   \   000001BC   0x6A20             LDR      R0,[R4, #+32]
   \   000001BE   0x.... 0x....      BL       Shell_write_binary
   1941              
   1942                   _mem_free(shell_ptr);  // wk @130403 --> important
   \   000001C2   0x0020             MOVS     R0,R4
   \   000001C4   0x.... 0x....      BL       _lwmem_free
   \   000001C8   0xE00E             B.N      ??EventSave_5
   1943              }
   1944            else if(USB_Flg==0)
   \                     ??EventSave_0:
   \   000001CA   0x....             LDR.N    R0,??DataTable17_21
   \   000001CC   0x7800             LDRB     R0,[R0, #+0]
   \   000001CE   0x2800             CMP      R0,#+0
   \   000001D0   0xD103             BNE.N    ??EventSave_6
   1945            {
   1946              printf("\nATTENTION:USB is DETACHED!\n");
   \   000001D2   0x....             LDR.N    R0,??DataTable17_31
   \   000001D4   0x.... 0x....      BL       _io_printf
   \   000001D8   0xE006             B.N      ??EventSave_5
   1947            }
   1948            else if(SysFlashDataT[6]==0)
   \                     ??EventSave_6:
   \   000001DA   0x....             LDR.N    R0,??DataTable17_22
   \   000001DC   0x7980             LDRB     R0,[R0, #+6]
   \   000001DE   0x2800             CMP      R0,#+0
   \   000001E0   0xD102             BNE.N    ??EventSave_5
   1949            {
   1950              printf("\nATTENTION:USB Switch is CLOSED!\n");
   \   000001E2   0x....             LDR.N    R0,??DataTable17_32
   \   000001E4   0x.... 0x....      BL       _io_printf
   1951            }
   1952          }
   \                     ??EventSave_5:
   \   000001E8   0xB006             ADD      SP,SP,#+24
   \   000001EA   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .data, align 4
   \                     ??file_name:
   \   00000000   0x77 0x6B          DC8 "wk12345.csv"
   \              0x31 0x32    
   \              0x33 0x34    
   \              0x35 0x2E    
   \              0x63 0x73    
   \              0x76 0x00    

   \                                 In section .data, align 4
   \                     ??evntdir_name:
   \   00000000   0x32 0x30          DC8 "2013"
   \              0x31 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .data, align 4
   \                     ??monthDir_name:
   \   00000000   0x31 0x32          DC8 "12"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .bss, align 2
   \                     ??month_old:
   \   00000000                      DS8 2
   1953          /*******************************************************************************
   1954          * 函  数  名      : PowerSave
   1955          * 描      述      : 电能数据存储
   1956          * 输      入      : 无
   1957          * 返      回      : 无
   1958          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1959          void PowerSave(void)
   1960          {
   \                     PowerSave:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   1961            if(USB_Flg==1&& SysFlashDataT[6]==1)
   \   00000004   0x....             LDR.N    R0,??DataTable17_21
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xF040 0x8085      BNE.W    ??PowerSave_0
   \   0000000E   0x....             LDR.N    R0,??DataTable17_22
   \   00000010   0x7980             LDRB     R0,[R0, #+6]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xF040 0x8080      BNE.W    ??PowerSave_0
   1962            {
   1963                SHELL_CONTEXT_PTR    shell_ptr;
   1964                shell_ptr = _mem_alloc_zero( sizeof( SHELL_CONTEXT ));
   \   00000018   0xF44F 0x70F2      MOV      R0,#+484
   \   0000001C   0x.... 0x....      BL       _lwmem_alloc_zero
   \   00000020   0x0004             MOVS     R4,R0
   1965                _mem_set_type(shell_ptr, MEM_TYPE_SHELL_CONTEXT);
   \   00000022   0xF245 0x0101      MOVW     R1,#+20481
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       _lwmem_set_type
   1966                uint_32 file_size;
   1967          //      static   char_ptr file_name="123456.csv",dir_name="1000";
   1968               static char file_name[10]="wk384.csv",dir_name[5]="1000";
   1969                static uint_16 year_old=0;
   1970                TIME_STRUCT             time_sf;
   1971                DATE_STRUCT             date_sf;
   1972                
   1973                _time_get(&time_sf);
   \   0000002C   0xA805             ADD      R0,SP,#+20
   \   0000002E   0x.... 0x....      BL       _time_get
   1974                _time_to_date(&time_sf,&date_sf);
   \   00000032   0xA900             ADD      R1,SP,#+0
   \   00000034   0xA805             ADD      R0,SP,#+20
   \   00000036   0x.... 0x....      BL       _time_to_date
   1975                
   1976          //      printf("Y=%d\tM=%d\tD=%d\tH=%d\tM=%d\tS=%d\n",date_sf.YEAR,date_sf.MONTH,date_sf.DAY,date_sf.HOUR,date_sf.MINUTE,date_sf.SECOND);
   1977                
   1978                shell_ptr->ARGC = 2;
   \   0000003A   0x2002             MOVS     R0,#+2
   \   0000003C   0x6220             STR      R0,[R4, #+32]
   1979                shell_ptr->ARGV[0]="cd";
   \   0000003E   0x....             ADR.N    R0,??DataTable17_5  ;; 0x63, 0x64, 0x00, 0x00
   \   00000040   0x6020             STR      R0,[R4, #+0]
   1980                shell_ptr->ARGV[1]="u:\\power"; 
   \   00000042   0x....             LDR.N    R0,??DataTable17_48
   \   00000044   0x6060             STR      R0,[R4, #+4]
   1981                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000046   0x0021             MOVS     R1,R4
   \   00000048   0x6A20             LDR      R0,[R4, #+32]
   \   0000004A   0x.... 0x....      BL       Shell_cd
   1982                
   1983                if(year_old!=date_sf.YEAR) // wk --> creata a dir named of year
   \   0000004E   0x....             LDR.N    R0,??DataTable17_49
   \   00000050   0x8800             LDRH     R0,[R0, #+0]
   \   00000052   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000056   0x4288             CMP      R0,R1
   \   00000058   0xD00F             BEQ.N    ??PowerSave_1
   1984                {
   1985          //        dir_name=num2string((uint_32)date_sf.YEAR,4,0);
   1986                  sprintf(dir_name,"%d",date_sf.YEAR);
   \   0000005A   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   0000005E   0x....             ADR.N    R1,??DataTable17_6  ;; 0x25, 0x64, 0x00, 0x00
   \   00000060   0x....             LDR.N    R0,??DataTable17_50
   \   00000062   0x.... 0x....      BL       _io_sprintf
   1987                  year_old=date_sf.YEAR;
   \   00000066   0x....             LDR.N    R0,??DataTable17_49
   \   00000068   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000006C   0x8001             STRH     R1,[R0, #+0]
   1988                  
   1989          //        shell_ptr->ARGC = 2;
   1990          //        shell_ptr->ARGV[0]="mkdir";
   1991                  shell_ptr->ARGV[1]=dir_name; 
   \   0000006E   0x....             LDR.N    R0,??DataTable17_50
   \   00000070   0x6060             STR      R0,[R4, #+4]
   1992                  Shell_mkdir(shell_ptr->ARGC, shell_ptr->ARGV);
   \   00000072   0x0021             MOVS     R1,R4
   \   00000074   0x6A20             LDR      R0,[R4, #+32]
   \   00000076   0x.... 0x....      BL       Shell_mkdir
   1993                }
   1994                /* wk @130407 --> 注意： 这里可以添加年份文件夹查找的，确定文件夹已经建立在打开 */
   1995          //      shell_ptr->ARGC = 2;  //WK --> 进入 dir_name 下面
   1996          //      shell_ptr->ARGV[0]="cd";
   1997                shell_ptr->ARGV[1]=dir_name; 
   \                     ??PowerSave_1:
   \   0000007A   0x....             LDR.N    R0,??DataTable17_50
   \   0000007C   0x6060             STR      R0,[R4, #+4]
   1998                Shell_cd(shell_ptr->ARGC, shell_ptr->ARGV);
   \   0000007E   0x0021             MOVS     R1,R4
   \   00000080   0x6A20             LDR      R0,[R4, #+32]
   \   00000082   0x.... 0x....      BL       Shell_cd
   1999                
   2000                if(*file_name=='w') // wk --> 第一次进来时，用月、日、时获取文件名
   \   00000086   0x....             LDR.N    R0,??DataTable17_51
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2877             CMP      R0,#+119
   \   0000008C   0xD10F             BNE.N    ??PowerSave_2
   2001                {
   2002          //       file_name=num2string(date_sf.MINUTE+(date_sf.DAY<<6)+(date_sf.MONTH<<11),6,1);
   2003                  sprintf(file_name,"%d.CSV",date_sf.HOUR+(date_sf.DAY<<5)+(date_sf.MONTH<<10));
   \   0000008E   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000092   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000096   0x0149             LSLS     R1,R1,#+5
   \   00000098   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000009C   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000000A0   0xEB10 0x2281      ADDS     R2,R0,R1, LSL #+10
   \   000000A4   0x....             LDR.N    R1,??DataTable17_52
   \   000000A6   0x....             LDR.N    R0,??DataTable17_51
   \   000000A8   0x.... 0x....      BL       _io_sprintf
   \   000000AC   0xE019             B.N      ??PowerSave_3
   2004                }
   2005                else
   2006                {
   2007          //        shell_ptr->ARGC = 2;
   2008          //        shell_ptr->ARGV[0]="df_s";
   2009                  shell_ptr->ARGV[1]=file_name;   //wk --> 注意：查找的文件名暂时必须要是大写
   \                     ??PowerSave_2:
   \   000000AE   0x....             LDR.N    R0,??DataTable17_51
   \   000000B0   0x6060             STR      R0,[R4, #+4]
   2010                  Shell_search_file_r1(shell_ptr->ARGC, shell_ptr->ARGV,&file_size);
   \   000000B2   0xAA04             ADD      R2,SP,#+16
   \   000000B4   0x0021             MOVS     R1,R4
   \   000000B6   0x6A20             LDR      R0,[R4, #+32]
   \   000000B8   0x.... 0x....      BL       Shell_search_file_r1
   2011                  
   2012                  if(file_size>134217728)  // wk --> 128M = 128*1024*1024 bytes
   \   000000BC   0x9804             LDR      R0,[SP, #+16]
   \   000000BE   0xF1B0 0x6F00      CMP      R0,#+134217728
   \   000000C2   0xD90E             BLS.N    ??PowerSave_3
   2013                  {
   2014          //          file_name=num2string(date_sf.MINUTE+(date_sf.DAY<<6)+(date_sf.MONTH<<11),6,1);
   2015                    sprintf(file_name,"%d.CSV",date_sf.HOUR+(date_sf.DAY<<5)+(date_sf.MONTH<<10));
   \   000000C4   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   000000C8   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   000000CC   0x0149             LSLS     R1,R1,#+5
   \   000000CE   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   000000D2   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000000D6   0xEB10 0x2281      ADDS     R2,R0,R1, LSL #+10
   \   000000DA   0x....             LDR.N    R1,??DataTable17_52
   \   000000DC   0x....             LDR.N    R0,??DataTable17_51
   \   000000DE   0x.... 0x....      BL       _io_sprintf
   2016                  }
   2017                }
   2018                
   2019                shell_ptr->ARGC=4;
   \                     ??PowerSave_3:
   \   000000E2   0x2004             MOVS     R0,#+4
   \   000000E4   0x6220             STR      R0,[R4, #+32]
   2020                shell_ptr->ARGV[0]="write";
   \   000000E6   0x....             LDR.N    R0,??DataTable17_46
   \   000000E8   0x6020             STR      R0,[R4, #+0]
   2021                shell_ptr->ARGV[1]=file_name;
   \   000000EA   0x....             LDR.N    R0,??DataTable17_51
   \   000000EC   0x6060             STR      R0,[R4, #+4]
   2022                shell_ptr->ARGV[2]="current";
   \   000000EE   0x....             LDR.N    R0,??DataTable17_47
   \   000000F0   0x60A0             STR      R0,[R4, #+8]
   2023                shell_ptr->ARGV[3]="0";
   \   000000F2   0x....             ADR.N    R0,??DataTable17  ;; "0"
   \   000000F4   0x60E0             STR      R0,[R4, #+12]
   2024                Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,7,&date_sf);
                       ^
Warning[Pe223]: function "Shell_write_binary" declared implicitly
   \   000000F6   0xAB00             ADD      R3,SP,#+0
   \   000000F8   0x2207             MOVS     R2,#+7
   \   000000FA   0x0021             MOVS     R1,R4
   \   000000FC   0x6A20             LDR      R0,[R4, #+32]
   \   000000FE   0x.... 0x....      BL       Shell_write_binary
   2025                     
   2026          //      shell_ptr->ARGC=4;
   2027          //      shell_ptr->ARGV[0]="write";
   2028          //      shell_ptr->ARGV[1]=file_name;
   2029          //      shell_ptr->ARGV[2]="current";
   2030          //      shell_ptr->ARGV[3]="0";
   2031                /* wk @130412 --> test power save */
   2032          //      uchar test[200]={0,1,2,3,4,5,6,7,8,9,10};
   2033          //      for(int i=0;i<200;i++)
   2034          //        test[i]=i+5;
   2035          //      for(uchar i=0;i<10;i++)
   2036          //      Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,200,test);
   2037                /* wk @130412 --> write power data */
   2038                  Shell_write_binary(shell_ptr->ARGC, shell_ptr->ARGV,Pow_SIZE,PowRxchar);
   \   00000102   0x....             LDR.N    R3,??DataTable17_53
   \   00000104   0xF640 0x12E4      MOVW     R2,#+2532
   \   00000108   0x0021             MOVS     R1,R4
   \   0000010A   0x6A20             LDR      R0,[R4, #+32]
   \   0000010C   0x.... 0x....      BL       Shell_write_binary
   2039          
   2040               _mem_free(shell_ptr);  // wk @130403 --> important
   \   00000110   0x0020             MOVS     R0,R4
   \   00000112   0x.... 0x....      BL       _lwmem_free
   \   00000116   0xE00E             B.N      ??PowerSave_4
   2041            }
   2042            else if(USB_Flg==0)
   \                     ??PowerSave_0:
   \   00000118   0x....             LDR.N    R0,??DataTable17_21
   \   0000011A   0x7800             LDRB     R0,[R0, #+0]
   \   0000011C   0x2800             CMP      R0,#+0
   \   0000011E   0xD103             BNE.N    ??PowerSave_5
   2043            {
   2044              printf("\nATTENTION:USB is DETACHED!\n");
   \   00000120   0x....             LDR.N    R0,??DataTable17_31
   \   00000122   0x.... 0x....      BL       _io_printf
   \   00000126   0xE006             B.N      ??PowerSave_4
   2045            }
   2046            else if(SysFlashDataT[6]==0)
   \                     ??PowerSave_5:
   \   00000128   0x....             LDR.N    R0,??DataTable17_22
   \   0000012A   0x7980             LDRB     R0,[R0, #+6]
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD102             BNE.N    ??PowerSave_4
   2047            {
   2048              printf("\nATTENTION:USB Switch is CLOSED!\n");
   \   00000130   0x....             LDR.N    R0,??DataTable17_32
   \   00000132   0x.... 0x....      BL       _io_printf
   2049            }
   2050               
   2051          }
   \                     ??PowerSave_4:
   \   00000136   0xB008             ADD      SP,SP,#+32
   \   00000138   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .data, align 4
   \                     ??file_name_1:
   \   00000000   0x77 0x6B          DC8 "wk384.csv"
   \              0x33 0x38    
   \              0x34 0x2E    
   \              0x63 0x73    
   \              0x76 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .data, align 4
   \                     ??dir_name:
   \   00000000   0x31 0x30          DC8 "1000"
   \              0x30 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .bss, align 2
   \                     ??year_old:
   \   00000000                      DS8 2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     `?<Constant {14, 68, 614, 225, 273, 429}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     PowRxchar+0x804

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     COLOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     PowRxchar+0x8F4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     `?<Constant {"Ua", "Ub", "Uc", "Ia", "Ib", "Ic"`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     PowRxchar+0x54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x51EB851F         DC32     0x51eb851f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x40091EB8         DC32     0x40091eb8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x40668000         DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x4064A000         DC32     0x4064a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x406D8000         DC32     0x406d8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x40654000         DC32     0x40654000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     PowRxchar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     PowRxchar+0xC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     PowRxchar+0x18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     PowRxchar+0x3C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     PowRxchar+0x48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     PowRxchar+0x6C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     PowRxchar+0x84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     PowRxchar+0x9C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     PowRxchar+0xB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     `?<Constant {"\\265\\33201-26\\264\\316", "\\265\\332`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     `?<Constant {8196, 310, 78, 65535, 0, 0, 0, 819`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x........         DC32     HarmoGraphUorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     HarmoGraphIorder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x........         DC32     HarmoGraphPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     HarmoGraphRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0xC1F00000         DC32     0xc1f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x1A9FBE77         DC32     0x1a9fbe77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x3FC4DD2F         DC32     0x3fc4dd2f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x40640000         DC32     0x40640000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x40400001         DC32     0x40400001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x0624DD2F         DC32     0x624dd2f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x402D5581         DC32     0x402d5581

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x406F0000         DC32     0x406f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0xC0080000         DC32     0xc0080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0xE147AE14         DC32     0xe147ae14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_22:
   \   00000000   0x3FFA147A         DC32     0x3ffa147a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_23:
   \   00000000   0x40698000         DC32     0x40698000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_24:
   \   00000000   0xDF3B645A         DC32     0xdf3b645a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_25:
   \   00000000   0x40038D4F         DC32     0x40038d4f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_26:
   \   00000000   0x4075A000         DC32     0x4075a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_27:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_28:
   \   00000000   0x435C0000         DC32     0x435c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_29:
   \   00000000   0x43D90000         DC32     0x43d90000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_30:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_31:
   \   00000000   0xBFC99999         DC32     0xbfc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_32:
   \   00000000   0xFBE76C8B         DC32     0xfbe76c8b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_33:
   \   00000000   0x403871A9         DC32     0x403871a9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_34:
   \   00000000   0x40786000         DC32     0x40786000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_35:
   \   00000000   0x........         DC32     HarmoInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     `?<Constant {"\\265\\3321-26\\264\\316", "\\265\\3322`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     HarmoListPhase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     HarmoListUorI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     HarmoListRange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     HarmoListAmporRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x77 0x00          DC8      "w",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     `?<Constant {"V", "A"}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     PowRxchar+0xC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \   00000000   0x........         DC32     PowRxchar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \   00000000   0x........         DC32     COLOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \   00000000   0x........         DC32     `?<Constant {"\\271\\330\\261\\325", "\\277\\252\\306\\`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \   00000000   0x........         DC32     `?<Constant {450, 50, 450, 80, 450, 112, 377, 1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \   00000000   0x........         DC32     `?<Constant {445, 48, 448, 73, 445, 80, 448, 10`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \   00000000   0x........         DC32     SysSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \   00000000   0x........         DC32     `?<Constant "sysset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_18:
   \   00000000   0x........         DC32     `?<Constant "read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_19:
   \   00000000   0x........         DC32     `?<Constant "sysset.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_20:
   \   00000000   0x........         DC32     `?<Constant "begin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_21:
   \   00000000   0x........         DC32     SysFlashDataT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_22:
   \   00000000   0x........         DC32     SysParaOldIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_23:
   \   00000000   0x........         DC32     `?<Constant {0, 0, 0, 65535, 0}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_24:
   \   00000000   0x........         DC32     ??flg_sys

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_25:
   \   00000000   0x........         DC32     SysFlashData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     `?<Constant "update">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     `?<Constant "flush">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x77 0x00          DC8      "w",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     `?<Constant {155, 97, 155, 133, 155, 169, 155, `

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     `?<Constant {150, 96, 153, 122, 150, 132, 153, `

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     SysSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     `?<Constant "sysset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     `?<Constant "read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     `?<Constant "sysevent.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     `?<Constant "begin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     SysFlashDataT+0x19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     SysFlashDataT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     SysEventOldIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x66 0x3A          DC8      "f:\\"
   \              0x5C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0xC2400000         DC32     0xc2400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     `?<Constant {12804, 0, 0, 65535, 0}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     ??flg_event

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x31 0x30          DC8      0x31, 0x30, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x55 0x00          DC8      "U",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     SysFlashData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x........         DC32     SysFlashData+0x19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     `?<Constant "SENDING...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x........         DC32     `?<Constant "WAITING...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x........         DC32     `?<Constant "\\273\\326\\270\\264\\263\\366\\263\\247\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x........         DC32     InitAck

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   0x63 0x64          DC8      0x63, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \   00000000   0x........         DC32     `?<Constant "sysset.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_8:
   \   00000000   0x........         DC32     `?<Constant "update">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_9:
   \   00000000   0x........         DC32     `?<Constant "flush">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_10:
   \   00000000   0x........         DC32     `?<Constant {181, 127, 181, 174, 181, 219, 181,`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_11:
   \   00000000   0x........         DC32     `?<Constant {30, 40, 35, 63, 30, 70, 35, 93, 30`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_12:
   \   00000000   0x........         DC32     `?<Constant {"U_ERR", "F_ERR", "U_WAV", "U_UNB"`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_13:
   \   00000000   0x........         DC32     `?<Constant {"START", "STOP "}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_14:
   \   00000000   0x........         DC32     `?<Constant "2013">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_15:
   \   00000000   0x........         DC32     `?<Constant "wk12345.csv">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_16:
   \   00000000   0x........         DC32     EVEfunflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_17:
   \   00000000   0x........         DC32     EventOldIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_18:
   \   00000000   0x........         DC32     EVEline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_19:
   \   00000000   0x........         DC32     EVEpage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_20:
   \   00000000   0x........         DC32     EveRdNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_21:
   \   00000000   0x........         DC32     USB_Flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_22:
   \   00000000   0x........         DC32     SysFlashDataT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_23:
   \   00000000   0x........         DC32     `?<Constant "u:\\\\event">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_24:
   \   00000000   0x........         DC32     EVEnum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_25:
   \   00000000   0x........         DC32     evntyear_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_26:
   \   00000000   0x........         DC32     EventAddr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_27:
   \   00000000   0x........         DC32     `?<Constant "%d.csv">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_28:
   \   00000000   0x........         DC32     `?<Constant "read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_29:
   \   00000000   0x........         DC32     `?<Constant "begin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_30:
   \   00000000   0x........         DC32     `?<Constant "%d %d-%d-%d %d:%d:%d ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_31:
   \   00000000   0x........         DC32     `?<Constant "\\nATTENTION:USB is DET...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_32:
   \   00000000   0x........         DC32     `?<Constant "\\nATTENTION:USB Switch...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_33:
   \   00000000   0x........         DC32     `?<Constant {14, 68, 200, 404, 273, 429}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_34:
   \   00000000   0x........         DC32     `?<Constant {36, 54, 40, 50, 44, 54, 40, 50, 40`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_35:
   \   00000000   0x........         DC32     `?<Constant "12\\\\12345678.csv">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_36:
   \   00000000   0x........         DC32     `?<Constant "%d\\\\%d.CSV">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_37:
   \   00000000   0x........         DC32     `?<Constant "file=%s\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_38:
   \   00000000   0x........         DC32     COLOR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_39:
   \   00000000   0x........         DC32     ??evntdir_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_40:
   \   00000000   0x........         DC32     `?<Constant "mkdir">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_41:
   \   00000000   0x........         DC32     ??month_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_42:
   \   00000000   0x........         DC32     ??monthDir_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_43:
   \   00000000   0x........         DC32     ??file_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_44:
   \   00000000   0x........         DC32     EvntRxchar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_45:
   \   00000000   0x........         DC32     EventNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_46:
   \   00000000   0x........         DC32     `?<Constant "write">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_47:
   \   00000000   0x........         DC32     `?<Constant "current">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_48:
   \   00000000   0x........         DC32     `?<Constant "u:\\\\power">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_49:
   \   00000000   0x........         DC32     ??year_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_50:
   \   00000000   0x........         DC32     ??dir_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_51:
   \   00000000   0x........         DC32     ??file_name_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_52:
   \   00000000   0x........         DC32     `?<Constant "%d.CSV">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_53:
   \   00000000   0x........         DC32     PowRxchar

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 68, 614, 225, 273, 429}>`:
   \   00000000   0x000E 0x0044      DC16 14, 68, 614, 225, 273, 429
   \              0x0266 0x00E1
   \              0x0111 0x01AD

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000182   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000192   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000202   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000212   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000222   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000232   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000242   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000252   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000262   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000272   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000282   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000292   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000302   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000312   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000322   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000332   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000342   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000352   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000362   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000372   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000382   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000392   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000402   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000412   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000422   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000432   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000442   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000452   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000462   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000472   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000482   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000492   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000182   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000192   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000202   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000212   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000222   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000232   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000242   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4`:
   \   00000000   0x000E 0x0056      DC16 14, 86, 614, 174, 212, 295, 330, 415
   \              0x0266 0x00AE
   \              0x00D4 0x0127
   \              0x014A 0x019F

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000172   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000182   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000192   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000202   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000212   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000222   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000232   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000242   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 86, 614, 174, 212, 295, 330, 4_1`:
   \   00000000   0x000E 0x0056      DC16 14, 86, 614, 174, 212, 295, 330, 415
   \              0x0266 0x00AE
   \              0x00D4 0x0127
   \              0x014A 0x019F

   \                                 In section .rodata, align 4
   \                     `?<Constant {"Ua", "Ub", "Uc", "Ia", "Ib", "Ic"`:
   \   00000000   0x55 0x61          DC8 "Ua"
   \              0x00         
   \   00000003   0x55 0x62          DC8 "Ub"
   \              0x00         
   \   00000006   0x55 0x63          DC8 "Uc"
   \              0x00         
   \   00000009   0x49 0x61          DC8 "Ia"
   \              0x00         
   \   0000000C   0x49 0x62          DC8 "Ib"
   \              0x00         
   \   0000000F   0x49 0x63          DC8 "Ic"
   \              0x00         
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000031   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000041   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000031   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {"\\265\\33201-26\\264\\316", "\\265\\332`:
   \   00000000   0xB5 0xDA          DC8 "\265\33201-26\264\316"
   \              0x30 0x31    
   \              0x2D 0x32    
   \              0x36 0xB4    
   \              0xCE 0x00    
   \   0000000A   0xB5 0xDA          DC8 "\265\33225-50\264\316"
   \              0x32 0x35    
   \              0x2D 0x35    
   \              0x30 0xB4    
   \              0xCE 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {8196, 310, 78, 65535, 0, 0, 0, 819`:
   \   00000000   0x2004 0x0136      DC16 8196, 310, 78, 65535, 0, 0, 0, 8196, 310, 265, 65535, 0, 0, 0
   \              0x004E 0xFFFF
   \              0x0000 0x0000
   \              0x0000 0x2004
   \              0x0136 0x0109
   \              0xFFFF 0x0000
   \              0x0000 0x0000
   \   0000001C   0x3304 0x01FC      DC16 13060, 508, 78, 65535, 0, 0, 0, 13060, 512, 264, 65535, 0
   \              0x004E 0xFFFF
   \              0x0000 0x0000
   \              0x0000 0x3304
   \              0x0200 0x0108
   \              0xFFFF 0x0000
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000102   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000122   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000132   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000142   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000152   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000162   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000031   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000041   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000051   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {"\\265\\3321-26\\264\\316", "\\265\\3322`:
   \   00000000   0xB5 0xDA          DC8 "\265\3321-26\264\316"
   \              0x31 0x2D    
   \              0x32 0x36    
   \              0xB4 0xCE    
   \              0x00         
   \   00000009   0x00               DC8 0
   \   0000000A   0xB5 0xDA          DC8 "\265\33225-50\264\316"
   \              0x32 0x35    
   \              0x2D 0x35    
   \              0x30 0xB4    
   \              0xCE 0x00    
   \   00000014   0xB7 0xF9          DC8 "\267\371 \326\265"
   \              0x20 0xD6    
   \              0xB5 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000001E   0xBA 0xAC          DC8 "\272\254\323\320\302\312"
   \              0xD3 0xD0    
   \              0xC2 0xCA    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   00000028   0x55 0x00          DC8 "U"
   \   0000002A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x49 0x00          DC8 "I"
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {"V", "A"}>`:
   \   00000000   0x56 0x00          DC8 "V"
   \   00000002   0x41 0x00          DC8 "A"

   \                                 In section .rodata, align 4
   \                     `?<Constant {"\\271\\330\\261\\325", "\\277\\252\\306\\`:
   \   00000000   0xB9 0xD8          DC8 0B9H, 0D8H, 0B1H, 0D5H
   \              0xB1 0xD5    
   \   00000004   0xBF 0xAA          DC8 0BFH, 0AAH, 0C6H, 0F4H
   \              0xC6 0xF4    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {450, 50, 450, 80, 450, 112, 377, 1`:
   \   00000000   0x01C2 0x0032      DC16 450, 50, 450, 80, 450, 112, 377, 146, 470, 146, 540, 146, 400, 178
   \              0x01C2 0x0050
   \              0x01C2 0x0070
   \              0x0179 0x0092
   \              0x01D6 0x0092
   \              0x021C 0x0092
   \              0x0190 0x00B2
   \   0000001C   0x01D6 0x00B2      DC16 470, 178, 540, 178
   \              0x021C 0x00B2

   \                                 In section .rodata, align 4
   \                     `?<Constant {445, 48, 448, 73, 445, 80, 448, 10`:
   \   00000000   0x01BD 0x0030      DC16 445, 48, 448, 73, 445, 80, 448, 105, 445, 110, 448, 135, 370, 145
   \              0x01C0 0x0049
   \              0x01BD 0x0050
   \              0x01C0 0x0069
   \              0x01BD 0x006E
   \              0x01C0 0x0087
   \              0x0172 0x0091
   \   0000001C   0x0175 0x00AA      DC16 373, 170, 460, 145, 463, 170, 530, 145, 533, 170, 370, 176, 373
   \              0x01CC 0x0091
   \              0x01CF 0x00AA
   \              0x0212 0x0091
   \              0x0215 0x00AA
   \              0x0172 0x00B0
   \              0x0175       
   \   00000036   0x00C9 0x01CC      DC16 201, 460, 176, 463, 201, 530, 176, 533, 201
   \              0x00B0 0x01CF
   \              0x00C9 0x0212
   \              0x00B0 0x0215
   \              0x00C9       

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x64          DC8 "cd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x66 0x3A          DC8 "f:\\"
   \              0x5C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysset">`:
   \   00000000   0x73 0x79          DC8 "sysset"
   \              0x73 0x73    
   \              0x65 0x74    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x70 0x77          DC8 "pwd"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "read">`:
   \   00000000   0x72 0x65          DC8 "read"
   \              0x61 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysset.txt">`:
   \   00000000   0x73 0x79          DC8 "sysset.txt"
   \              0x73 0x73    
   \              0x65 0x74    
   \              0x2E 0x74    
   \              0x78 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x32 0x35          DC8 "25"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "begin">`:
   \   00000000   0x62 0x65          DC8 "begin"
   \              0x67 0x69    
   \              0x6E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 65535, 0}>`:
   \   00000000   0x0000 0x0000      DC16 0, 0, 0, 65535, 0
   \              0x0000 0xFFFF
   \              0x0000       
   \   0000000A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x77 0x00          DC8 "w"

   \                                 In section .rodata, align 4
   \                     `?<Constant "update">`:
   \   00000000   0x75 0x70          DC8 "update"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "flush">`:
   \   00000000   0x66 0x6C          DC8 "flush"
   \              0x75 0x73    
   \              0x68 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000092   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {155, 97, 155, 133, 155, 169, 155, `:
   \   00000000   0x009B 0x0061      DC16 155, 97, 155, 133, 155, 169, 155, 205, 155, 241, 155, 278, 155
   \              0x009B 0x0085
   \              0x009B 0x00A9
   \              0x009B 0x00CD
   \              0x009B 0x00F1
   \              0x009B 0x0116
   \              0x009B       
   \   0000001A   0x013B 0x01E1      DC16 315, 481, 97, 481, 133, 481, 169, 481, 205
   \              0x0061 0x01E1
   \              0x0085 0x01E1
   \              0x00A9 0x01E1
   \              0x00CD       

   \                                 In section .rodata, align 4
   \                     `?<Constant {150, 96, 153, 122, 150, 132, 153, `:
   \   00000000   0x0096 0x0060      DC16 150, 96, 153, 122, 150, 132, 153, 158, 150, 168, 153, 194, 150
   \              0x0099 0x007A
   \              0x0096 0x0084
   \              0x0099 0x009E
   \              0x0096 0x00A8
   \              0x0099 0x00C2
   \              0x0096       
   \   0000001A   0x00CC 0x0099      DC16 204, 153, 230, 150, 240, 153, 266, 150, 276, 153, 304, 150, 314
   \              0x00E6 0x0096
   \              0x00F0 0x0099
   \              0x010A 0x0096
   \              0x0114 0x0099
   \              0x0130 0x0096
   \              0x013A       
   \   00000034   0x0099 0x0154      DC16 153, 340, 476, 96, 479, 122, 476, 132, 479, 158, 476, 168, 479
   \              0x01DC 0x0060
   \              0x01DF 0x007A
   \              0x01DC 0x0084
   \              0x01DF 0x009E
   \              0x01DC 0x00A8
   \              0x01DF       
   \   0000004E   0x00C2 0x01DC      DC16 194, 476, 204, 479, 230
   \              0x00CC 0x01DF
   \              0x00E6       

   \                                 In section .rodata, align 4
   \                     `?<Constant "sysevent.txt">`:
   \   00000000   0x73 0x79          DC8 "sysevent.txt"
   \              0x73 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x2E 0x74    
   \              0x78 0x74    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x34 0x34          DC8 "44"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {12804, 0, 0, 65535, 0}>`:
   \   00000000   0x3204 0x0000      DC16 12804, 0, 0, 65535, 0
   \              0x0000 0xFFFF
   \              0x0000       
   \   0000000A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "SENDING...">`:
   \   00000000   0x53 0x45          DC8 "SENDING..."
   \              0x4E 0x44    
   \              0x49 0x4E    
   \              0x47 0x2E    
   \              0x2E 0x2E    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "WAITING...">`:
   \   00000000   0x57 0x41          DC8 "WAITING..."
   \              0x49 0x54    
   \              0x49 0x4E    
   \              0x47 0x2E    
   \              0x2E 0x2E    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\273\\326\\270\\264\\263\\366\\263\\247\\3`:
   \   00000000   0xBB 0xD6          DC8 "\273\326\270\264\263\366\263\247\311\350\326\303\263\311\271\246\243\241"
   \              0xB8 0xB4    
   \              0xB3 0xF6    
   \              0xB3 0xA7    
   \              0xC9 0xE8    
   \              0xD6 0xC3    
   \              0xB3 0xC9    
   \              0xB9 0xA6    
   \              0xA3 0xA1    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {181, 127, 181, 174, 181, 219, 181,`:
   \   00000000   0x00B5 0x007F      DC16 181, 127, 181, 174, 181, 219, 181, 265, 181, 310, 505, 127, 505
   \              0x00B5 0x00AE
   \              0x00B5 0x00DB
   \              0x00B5 0x0109
   \              0x00B5 0x0136
   \              0x01F9 0x007F
   \              0x01F9       
   \   0000001A   0x00AE 0x01F9      DC16 174, 505, 219, 505, 265
   \              0x00DB 0x01F9
   \              0x0109       

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000032   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000042   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000052   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000062   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000072   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant {30, 40, 35, 63, 30, 70, 35, 93, 30`:
   \   00000000   0x001E 0x0028      DC16 30, 40, 35, 63, 30, 70, 35, 93, 30, 98, 35, 121, 30, 125, 35, 148
   \              0x0023 0x003F
   \              0x001E 0x0046
   \              0x0023 0x005D
   \              0x001E 0x0062
   \              0x0023 0x0079
   \              0x001E 0x007D
   \              0x0023 0x0094
   \   00000020   0x001E 0x0098      DC16 30, 152, 35, 175, 30, 179, 35, 202, 30, 206, 35, 229, 30, 233, 35
   \              0x0023 0x00AF
   \              0x001E 0x00B3
   \              0x0023 0x00CA
   \              0x001E 0x00CE
   \              0x0023 0x00E5
   \              0x001E 0x00E9
   \              0x0023       
   \   0000003E   0x0100 0x001E      DC16 256, 30, 262, 35, 285, 30, 288, 35, 311, 30, 316, 35, 339, 30, 342
   \              0x0106 0x0023
   \              0x011D 0x001E
   \              0x0120 0x0023
   \              0x0137 0x001E
   \              0x013C 0x0023
   \              0x0153 0x001E
   \              0x0156       
   \   0000005C   0x0023 0x016D      DC16 35, 365, 30, 370, 35, 393, 30, 396, 35, 419
   \              0x001E 0x0172
   \              0x0023 0x0189
   \              0x001E 0x018C
   \              0x0023 0x01A3

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000023   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000033   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000043   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000053   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000063   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000073   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000083   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000093   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000103   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000113   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000123   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000133   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000143   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000153   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000163   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000173   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000183   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000193   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001EA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {"U_ERR", "F_ERR", "U_WAV", "U_UNB"`:
   \   00000000   0x55 0x5F          DC8 55H, 5FH, 45H, 52H, 52H
   \              0x45 0x52    
   \              0x52         
   \   00000005   0x46 0x5F          DC8 46H, 5FH, 45H, 52H, 52H
   \              0x45 0x52    
   \              0x52         
   \   0000000A   0x55 0x5F          DC8 55H, 5FH, 57H, 41H, 56H
   \              0x57 0x41    
   \              0x56         
   \   0000000F   0x55 0x5F          DC8 55H, 5FH, 55H, 4EH, 42H
   \              0x55 0x4E    
   \              0x42         
   \   00000014   0x4C 0x5F          DC8 4CH, 5FH, 46H, 4CH, 4BH
   \              0x46 0x4C    
   \              0x4B         
   \   00000019   0x55 0x5F          DC8 55H, 5FH, 54H, 48H, 44H
   \              0x54 0x48    
   \              0x44         
   \   0000001E   0x49 0x5F          DC8 49H, 5FH, 48H, 41H, 4DH
   \              0x48 0x41    
   \              0x4D         
   \   00000023   0x45 0x5F          DC8 45H, 5FH, 48H, 41H, 4DH
   \              0x48 0x41    
   \              0x4D         
   \   00000028   0x4F 0x5F          DC8 4FH, 5FH, 48H, 41H, 4DH
   \              0x48 0x41    
   \              0x4D         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant {"START", "STOP "}>`:
   \   00000000   0x53 0x54          DC8 53H, 54H, 41H, 52H, 54H
   \              0x41 0x52    
   \              0x54         
   \   00000005   0x53 0x54          DC8 53H, 54H, 4FH, 50H, 20H
   \              0x4F 0x50    
   \              0x20         
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "2013">`:
   \   00000000   0x32 0x30          DC8 "2013"
   \              0x31 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "wk12345.csv">`:
   \   00000000   0x77 0x6B          DC8 "wk12345.csv"
   \              0x31 0x32    
   \              0x33 0x34    
   \              0x35 0x2E    
   \              0x63 0x73    
   \              0x76 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "u:\\\\event">`:
   \   00000000   0x75 0x3A          DC8 "u:\\event"
   \              0x5C 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "%d.csv">`:
   \   00000000   0x25 0x64          DC8 "%d.csv"
   \              0x2E 0x63    
   \              0x73 0x76    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x31 0x30          DC8 "10"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "%d %d-%d-%d %d:%d:%d ...">`:
   \   00000000   0x25 0x64          DC8 "%d %d-%d-%d %d:%d:%d %.5s %.5s"
   \              0x20 0x25    
   \              0x64 0x2D    
   \              0x25 0x64    
   \              0x2D 0x25    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x3A 0x25    
   \              0x64 0x3A    
   \              0x25 0x64    
   \              0x20 0x25    
   \              0x2E 0x35    
   \              0x73 0x20    
   \              0x25 0x2E    
   \              0x35 0x73    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nATTENTION:USB is DET...">`:
   \   00000000   0x0A 0x41          DC8 "\012ATTENTION:USB is DETACHED!\012"
   \              0x54 0x54    
   \              0x45 0x4E    
   \              0x54 0x49    
   \              0x4F 0x4E    
   \              0x3A 0x55    
   \              0x53 0x42    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x44 0x45    
   \              0x54 0x41    
   \              0x43 0x48    
   \              0x45 0x44    
   \              0x21 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nATTENTION:USB Switch...">`:
   \   00000000   0x0A 0x41          DC8 "\012ATTENTION:USB Switch is CLOSED!\012"
   \              0x54 0x54    
   \              0x45 0x4E    
   \              0x54 0x49    
   \              0x4F 0x4E    
   \              0x3A 0x55    
   \              0x53 0x42    
   \              0x20 0x53    
   \              0x77 0x69    
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x69 0x73    
   \              0x20 0x43    
   \              0x4C 0x4F    
   \              0x53 0x45    
   \              0x44 0x21    
   \              0x0A 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {14, 68, 200, 404, 273, 429}>`:
   \   00000000   0x000E 0x0044      DC16 14, 68, 200, 404, 273, 429
   \              0x00C8 0x0194
   \              0x0111 0x01AD

   \                                 In section .rodata, align 4
   \                     `?<Constant {36, 54, 40, 50, 44, 54, 40, 50, 40`:
   \   00000000   0x0024 0x0036      DC16 36, 54, 40, 50, 44, 54, 40, 50, 40, 420, 40, 224, 598, 224, 594
   \              0x0028 0x0032
   \              0x002C 0x0036
   \              0x0028 0x0032
   \              0x0028 0x01A4
   \              0x0028 0x00E0
   \              0x0256 0x00E0
   \              0x0252       
   \   0000001E   0x00DC 0x0256      DC16 220, 598, 224, 594, 228
   \              0x00E0 0x0252
   \              0x00E4       

   \                                 In section .rodata, align 4
   \                     `?<Constant "12\\\\12345678.csv">`:
   \   00000000   0x31 0x32          DC8 "12\\12345678.csv"
   \              0x5C 0x31    
   \              0x32 0x33    
   \              0x34 0x35    
   \              0x36 0x37    
   \              0x38 0x2E    
   \              0x63 0x73    
   \              0x76 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%d\\\\%d.CSV">`:
   \   00000000   0x25 0x64          DC8 "%d\\%d.CSV"
   \              0x5C 0x25    
   \              0x64 0x2E    
   \              0x43 0x53    
   \              0x56 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "file=%s\\n">`:
   \   00000000   0x66 0x69          DC8 "file=%s\012"
   \              0x6C 0x65    
   \              0x3D 0x25    
   \              0x73 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \   00000000   0x55 0x00          DC8 "U"

   \                                 In section .rodata, align 4
   \                     `?<Constant "mkdir">`:
   \   00000000   0x6D 0x6B          DC8 "mkdir"
   \              0x64 0x69    
   \              0x72 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "write">`:
   \   00000000   0x77 0x72          DC8 "write"
   \              0x69 0x74    
   \              0x65 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "current">`:
   \   00000000   0x63 0x75          DC8 "current"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "u:\\\\power">`:
   \   00000000   0x75 0x3A          DC8 "u:\\power"
   \              0x5C 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%d.CSV">`:
   \   00000000   0x25 0x64          DC8 "%d.CSV"
   \              0x2E 0x43    
   \              0x53 0x56    
   \              0x00         
   \   00000007   0x00               DC8 0
   2052          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       32  EventSave
               32 -> Shell_cd
               32 -> Shell_mkdir
               32 -> Shell_write_binary
               32 -> _io_printf
               32 -> _io_sprintf
               32 -> _lwmem_alloc_zero
               32 -> _lwmem_free
               32 -> _lwmem_set_type
               32 -> _time_get
               32 -> _time_to_date
      752  GUI_EventList
              752 -> Shell_cd
              752 -> Shell_read_wk
              752 -> YADA_40
              752 -> YADA_5A
              752 -> YADA_5B
              752 -> YADA_98
              752 -> __aeabi_memclr4
              752 -> __aeabi_memcpy4
              752 -> _io_printf
              752 -> _io_sprintf
              752 -> _lwmem_alloc_zero
              752 -> _lwmem_free
              752 -> _lwmem_set_type
      168  GUI_EventMonitor
              168 -> YADA_C0
              168 -> YADA_C108
              168 -> __aeabi_memclr4
              168 -> __aeabi_memcpy4
      496  GUI_EventWave
              496 -> Shell_cd
              496 -> YADA_40
              496 -> YADA_56
              496 -> YADA_98
              496 -> YADA_C0
              496 -> YADA_C103
              496 -> __aeabi_memcpy4
              496 -> _io_printf
              496 -> _io_sprintf
              496 -> _lwmem_alloc_zero
              496 -> _lwmem_free
              496 -> _lwmem_set_type
              496 -> delay_ms
       48  GUI_INIT_SET
               48 -> Shell_cd
               48 -> Shell_update
               48 -> Shell_write_binary
               48 -> YADA_98
               48 -> __aeabi_memcpy4
               48 -> _lwmem_alloc_zero
               48 -> _lwmem_free
               48 -> _lwmem_set_type
        0  GUI_STATUS
      384  GUI_SYS_EVENTSET
              384 -> Shell_cd
              384 -> Shell_pwd
              384 -> Shell_read_wk
              384 -> Shell_update
              384 -> Shell_write_binary
              384 -> YADA_40
              384 -> YADA_5A
              384 -> YADA_5B
              384 -> YADA_71
              384 -> YADA_98
              384 -> YADA_C0
              384 -> YADA_C108
              384 -> __aeabi_f2iz
              384 -> __aeabi_fadd
              384 -> __aeabi_fdiv
              384 -> __aeabi_fmul
              384 -> __aeabi_i2f
              384 -> __aeabi_memclr4
              384 -> __aeabi_memcpy4
              384 -> __aeabi_ui2f
              384 -> _lwmem_alloc_zero
              384 -> _lwmem_free
              384 -> _lwmem_set_type
      312  GUI_SYS_PARASET
              312 -> Shell_cd
              312 -> Shell_pwd
              312 -> Shell_read_wk
              312 -> Shell_update
              312 -> Shell_write_binary
              312 -> YADA_40
              312 -> YADA_5A
              312 -> YADA_5B
              312 -> YADA_71
              312 -> YADA_98
              312 -> YADA_C0
              312 -> YADA_C108
              312 -> __aeabi_memclr4
              312 -> __aeabi_memcpy4
              312 -> _lwmem_alloc_zero
              312 -> _lwmem_free
              312 -> _lwmem_set_type
              312 -> delay_us
      744  GUI_VIEW_HarmoGraph
              744 -> ChartoFloat
              744 -> Sig_Fiq
              744 -> YADA_40
              744 -> YADA_5B
              744 -> YADA_71
              744 -> YADA_98
              744 -> YADA_C0
              744 -> YADA_C108
              744 -> __aeabi_cfcmple
              744 -> __aeabi_cfrcmple
              744 -> __aeabi_d2iz
              744 -> __aeabi_dadd
              744 -> __aeabi_dmul
              744 -> __aeabi_dsub
              744 -> __aeabi_f2d
              744 -> __aeabi_f2iz
              744 -> __aeabi_fadd
              744 -> __aeabi_fmul
              744 -> __aeabi_fsub
              744 -> __aeabi_memclr4
              744 -> __aeabi_memcpy4
              744 -> delay_ms
      968  GUI_VIEW_HarmoList
              968 -> ChartoFloat
              968 -> Sig_Fiq
              968 -> UIValues2HR
              968 -> YADA_40
              968 -> YADA_98
              968 -> YADA_C0
              968 -> YADA_C108
              968 -> __aeabi_memclr4
              968 -> __aeabi_memcpy4
              968 -> delay_ms
              968 -> delay_us
      640  GUI_VIEW_I
              640 -> CharToInt
              640 -> WR_WAVE_UI
              640 -> YADA_C104
              640 -> __aeabi_memclr4
              640 -> __aeabi_memcpy4
              640 -> delay_ms
              640 -> linemark
      392  GUI_VIEW_ListMeasure
              392 -> Sig_Fiq
              392 -> YADA_C0
              392 -> YADA_C108
              392 -> __aeabi_memclr4
              392 -> delay_ms
      336  GUI_VIEW_ListQuality
              336 -> Sig_Fiq
              336 -> YADA_C0
              336 -> YADA_C108
              336 -> __aeabi_memclr4
              336 -> delay_ms
      192  GUI_VIEW_ListQuality2
              192 -> Sig_Fiq
              192 -> YADA_C0
              192 -> YADA_C108
              192 -> __aeabi_memclr4
      640  GUI_VIEW_U
              640 -> CharToInt
              640 -> WR_WAVE_UI
              640 -> YADA_C104
              640 -> __aeabi_memclr4
              640 -> __aeabi_memcpy4
              640 -> delay_ms
              640 -> linemark
     1240  GUI_VIEW_UI
             1240 -> CharToInt
             1240 -> WR_WAVE_UI
             1240 -> YADA_C104
             1240 -> __aeabi_memclr4
             1240 -> delay_ms
             1240 -> linemark
      232  GUI_VIEW_VECT
              232 -> ChartoFloat
              232 -> PhaseShift
              232 -> YADA_40
              232 -> YADA_56
              232 -> YADA_71
              232 -> YADA_98
              232 -> YADA_C0
              232 -> YADA_C108
              232 -> __aeabi_d2f
              232 -> __aeabi_d2iz
              232 -> __aeabi_dadd
              232 -> __aeabi_ddiv
              232 -> __aeabi_dmul
              232 -> __aeabi_dsub
              232 -> __aeabi_f2d
              232 -> __aeabi_i2d
              232 -> __aeabi_memclr4
              232 -> __aeabi_memcpy4
              232 -> __aeabi_ui2d
              232 -> cos
              232 -> delay_ms
              232 -> sin
       40  PowerSave
               40 -> Shell_cd
               40 -> Shell_mkdir
               40 -> Shell_search_file_r1
               40 -> Shell_write_binary
               40 -> _io_printf
               40 -> _io_sprintf
               40 -> _lwmem_alloc_zero
               40 -> _lwmem_free
               40 -> _lwmem_set_type
               40 -> _time_get
               40 -> _time_to_date
       96  linemark
               96 -> Sig_Fiq
               96 -> YADA_98
               96 -> YADA_C0
               96 -> YADA_C108
               96 -> __aeabi_memclr4
               96 -> delay_ms


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  ?<Constant "%d %d-%d-%d %d:%d:%d ...">
       4  ?<Constant "%d">
       8  ?<Constant "%d.CSV">
       8  ?<Constant "%d.csv">
      12  ?<Constant "%d\\%d.CSV">
       2  ?<Constant "0">
       4  ?<Constant "10">
      16  ?<Constant "12\\12345678.csv">
       8  ?<Constant "2013">
       4  ?<Constant "25">
       4  ?<Constant "44">
      12  ?<Constant "SENDING...">
       2  ?<Constant "U">
      12  ?<Constant "WAITING...">
      20  ?<Constant "\273\326\270\264\263\366\263\247\3
      36  ?<Constant "\nATTENTION:USB Switch...">
      32  ?<Constant "\nATTENTION:USB is DET...">
       8  ?<Constant "begin">
       4  ?<Constant "cd">
       8  ?<Constant "current">
       4  ?<Constant "f:\\">
      12  ?<Constant "file=%s\n">
       8  ?<Constant "flush">
       8  ?<Constant "mkdir">
       4  ?<Constant "pwd">
       8  ?<Constant "read">
      16  ?<Constant "sysevent.txt">
       8  ?<Constant "sysset">
      12  ?<Constant "sysset.txt">
      12  ?<Constant "u:\\event">
      12  ?<Constant "u:\\power">
       8  ?<Constant "update">
       2  ?<Constant "w">
      12  ?<Constant "wk12345.csv">
       8  ?<Constant "write">
      12  ?<Constant {"START", "STOP "}>
      48  ?<Constant {"U_ERR", "F_ERR", "U_WAV", "U_UNB"
      20  ?<Constant {"Ua", "Ub", "Uc", "Ia", "Ib", "Ic"
       4  ?<Constant {"V", "A"}>
      20  ?<Constant {"\265\33201-26\264\316", "\265\332
      60  ?<Constant {"\265\3321-26\264\316", "\265\3322
       8  ?<Constant {"\271\330\261\325", "\277\252\306\
      24  ?<Constant {(0.0F)}>
     208  ?<Constant {(0.0F)}>_1
     200  ?<Constant {(0.0F)}>_2
      16  ?<Constant {0, 0, 0, 65535, 0}>
    1200  ?<Constant {0}>
     600  ?<Constant {0}>_1
     208  ?<Constant {0}>_10
     208  ?<Constant {0}>_11
       8  ?<Constant {0}>_12
     200  ?<Constant {0}>_13
     364  ?<Constant {0}>_14
     104  ?<Constant {0}>_15
      44  ?<Constant {0}>_16
      12  ?<Constant {0}>_17
     128  ?<Constant {0}>_18
     196  ?<Constant {0}>_19
     600  ?<Constant {0}>_2
     128  ?<Constant {0}>_20
      84  ?<Constant {0}>_3
      12  ?<Constant {0}>_4
     296  ?<Constant {0}>_5
      84  ?<Constant {0}>_6
      72  ?<Constant {0}>_7
      40  ?<Constant {0}>_8
     140  ?<Constant {0}>_9
      16  ?<Constant {12804, 0, 0, 65535, 0}>
      12  ?<Constant {14, 68, 200, 404, 273, 429}>
      12  ?<Constant {14, 68, 614, 225, 273, 429}>
      16  ?<Constant {14, 86, 614, 174, 212, 295, 330, 4
      16  ?<Constant {14, 86, 614, 174, 212, 295, 330, 4_1
      88  ?<Constant {150, 96, 153, 122, 150, 132, 153,
      44  ?<Constant {155, 97, 155, 133, 155, 169, 155,
      36  ?<Constant {181, 127, 181, 174, 181, 219, 181,
     112  ?<Constant {30, 40, 35, 63, 30, 70, 35, 93, 30
      40  ?<Constant {36, 54, 40, 50, 44, 54, 40, 50, 40
      72  ?<Constant {445, 48, 448, 73, 445, 80, 448, 10
      36  ?<Constant {450, 50, 450, 80, 450, 112, 377, 1
      56  ?<Constant {8196, 310, 78, 65535, 0, 0, 0, 819
     492  ?<Constant {{0}}>
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_18
       4  ??DataTable10_19
       4  ??DataTable10_2
       4  ??DataTable10_20
       4  ??DataTable10_21
       4  ??DataTable10_22
       4  ??DataTable10_23
       4  ??DataTable10_24
       4  ??DataTable10_25
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_10
       4  ??DataTable17_11
       4  ??DataTable17_12
       4  ??DataTable17_13
       4  ??DataTable17_14
       4  ??DataTable17_15
       4  ??DataTable17_16
       4  ??DataTable17_17
       4  ??DataTable17_18
       4  ??DataTable17_19
       4  ??DataTable17_2
       4  ??DataTable17_20
       4  ??DataTable17_21
       4  ??DataTable17_22
       4  ??DataTable17_23
       4  ??DataTable17_24
       4  ??DataTable17_25
       4  ??DataTable17_26
       4  ??DataTable17_27
       4  ??DataTable17_28
       4  ??DataTable17_29
       4  ??DataTable17_3
       4  ??DataTable17_30
       4  ??DataTable17_31
       4  ??DataTable17_32
       4  ??DataTable17_33
       4  ??DataTable17_34
       4  ??DataTable17_35
       4  ??DataTable17_36
       4  ??DataTable17_37
       4  ??DataTable17_38
       4  ??DataTable17_39
       4  ??DataTable17_4
       4  ??DataTable17_40
       4  ??DataTable17_41
       4  ??DataTable17_42
       4  ??DataTable17_43
       4  ??DataTable17_44
       4  ??DataTable17_45
       4  ??DataTable17_46
       4  ??DataTable17_47
       4  ??DataTable17_48
       4  ??DataTable17_49
       4  ??DataTable17_5
       4  ??DataTable17_50
       4  ??DataTable17_51
       4  ??DataTable17_52
       4  ??DataTable17_53
       4  ??DataTable17_6
       4  ??DataTable17_7
       4  ??DataTable17_8
       4  ??DataTable17_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_22
       4  ??DataTable9_23
       4  ??DataTable9_24
       4  ??DataTable9_25
       4  ??DataTable9_26
       4  ??DataTable9_27
       4  ??DataTable9_28
       4  ??DataTable9_29
       4  ??DataTable9_3
       4  ??DataTable9_30
       4  ??DataTable9_31
       4  ??DataTable9_32
       4  ??DataTable9_33
       4  ??DataTable9_34
       4  ??DataTable9_35
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
       8  COLOR
       1  EVEnum
       1  EVEnum_old
       1  EveRdNum
     400  EventAddr
      20  EventNum
       1  EventOldIndex
     492  EventSave
     688  GUI_EventList
     172  GUI_EventMonitor
     568  GUI_EventWave
     216  GUI_INIT_SET
       2  GUI_STATUS
    3068  GUI_SYS_EVENTSET
    2022  GUI_SYS_PARASET
    1226  GUI_VIEW_HarmoGraph
     910  GUI_VIEW_HarmoList
     212  GUI_VIEW_I
     432  GUI_VIEW_ListMeasure
     354  GUI_VIEW_ListQuality
     254  GUI_VIEW_ListQuality2
     212  GUI_VIEW_U
     362  GUI_VIEW_UI
     748  GUI_VIEW_VECT
      40  HarmoInfo
     314  PowerSave
       1  SysEventOldIndex
      84  SysFlashData
      84  SysFlashDataT
       1  SysParaOldIndex
       1  USB_Flg
       8  dir_name
       8  evntdir_name
       2  evntyear_old
      12  file_name
      12  file_name
      12  flg_event
      12  flg_sys
     374  linemark
       4  monthDir_name
       2  month_old
       2  year_old

 
    624 bytes in section .bss
     85 bytes in section .data
  6 774 bytes in section .rodata
 13 298 bytes in section .text
 
 13 298 bytes of CODE  memory
  6 774 bytes of CONST memory
    709 bytes of DATA  memory

Errors: none
Warnings: 6
