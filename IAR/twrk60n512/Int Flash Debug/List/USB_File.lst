###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     01/Apr/2013  10:24:17 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\Source_ #
#                    MQX\USB_File.c                                           #
#    Command line =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\Source_ #
#                    MQX\USB_File.c -D _DEBUG=1 -lC                           #
#                    "L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n51 #
#                    2\Int Flash Debug\List\" -lA                             #
#                    "L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n51 #
#                    2\Int Flash Debug\List\" --diag_suppress                 #
#                    Pa039,Pa082,Pe186 -o "L:\git_workspace\YD_PRJ_NEW_201303 #
#                    23_git_\IAR\twrk60n512\Int Flash Debug\Obj\" --no_cse    #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\ -I L:\git_workspace\YD_PRJ_NEW_20130323_git #
#                    _\IAR\..\lib\twrk60n512.iar\bsp\ -I                      #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\psp\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\lib\twrk60n512.iar\bsp\Generated_Code\ -I   #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\rtcs\ -I L:\git_workspace\YD_PRJ_NEW_2013032 #
#                    3_git_\IAR\..\lib\twrk60n512.iar\mfs\ -I                 #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\host\ -I L:\git_workspace\YD_PRJ_NEW_201 #
#                    30323_git_\IAR\..\lib\twrk60n512.iar\shell\ -I           #
#                    L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\..\lib\twr #
#                    k60n512.iar\usb\ -I L:\git_workspace\YD_PRJ_NEW_20130323 #
#                    _git_\IAR\..\ -I L:\git_workspace\YD_PRJ_NEW_20130323_gi #
#                    t_\IAR\..\Source\Source_MQX\ -I "E:\Freescale\Freescale  #
#                    MQX 3.8\shell\source\include\" -Ol --use_c++_inline      #
#    List file    =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\List\USB_File.lst                       #
#    Object file  =  L:\git_workspace\YD_PRJ_NEW_20130323_git_\IAR\twrk60n512 #
#                    \Int Flash Debug\Obj\USB_File.o                          #
#                                                                             #
#                                                                             #
###############################################################################

L:\git_workspace\YD_PRJ_NEW_20130323_git_\Source\Source_MQX\USB_File.c
      1          /**HEADER********************************************************************
      2          * 
      3          * Copyright (c) 2008 Freescale Semiconductor;
      4          * All Rights Reserved
      5          *
      6          * Copyright (c) 2004-2008 Embedded Access Inc.;
      7          * All Rights Reserved
      8          *
      9          *************************************************************************** 
     10          *
     11          * THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY EXPRESSED OR 
     12          * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
     13          * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  
     14          * IN NO EVENT SHALL FREESCALE OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
     15          * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
     16          * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
     17          * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
     18          * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
     19          * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
     20          * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
     21          * THE POSSIBILITY OF SUCH DAMAGE.
     22          *
     23          **************************************************************************
     24          *
     25          * $FileName: USB_File.c$
     26          * $Version : 3.6.4.0$
     27          * $Date    : Jun-4-2010$
     28          *
     29          * Comments:
     30          *
     31          *   This file contains the initialization and menu source code for
     32          *   the USB mass storage MFS test example program using USB mass storage
     33          *   link driver.
     34          *
     35          *END************************************************************************/
     36          
     37          #include <mqx.h>
     38          #include <bsp.h>
     39          #include <mfs.h>
     40          #include <part_mgr.h>
     41          #include <usbmfs.h>
     42          #include "usb_file.h"
     43          
     44          

   \                                 In section .text, align 2, keep-with-next
     45          pointer usb_filesystem_install( 
     46             pointer     usb_handle,
     47             char_ptr    block_device_name,
     48             char_ptr    partition_manager_name,
     49             char_ptr    file_system_name )
     50          {
   \                     usb_filesystem_install:
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000F             MOVS     R7,R1
   \   00000008   0x4690             MOV      R8,R2
   \   0000000A   0x001D             MOVS     R5,R3
     51             uint_32                    partition_number;
     52             uchar_ptr                  dev_info;
     53             int_32                     error_code;
     54             uint_32                    mfs_status;
     55             USB_FILESYSTEM_STRUCT_PTR  usb_fs_ptr;
     56          
     57          
     58             usb_fs_ptr = _mem_alloc_system_zero(sizeof(USB_FILESYSTEM_STRUCT));
   \   0000000C   0x2018             MOVS     R0,#+24
   \   0000000E   0x.... 0x....      BL       _lwmem_alloc_system_zero
   \   00000012   0x0004             MOVS     R4,R0
     59             if (usb_fs_ptr==NULL) {
   \   00000014   0x2C00             CMP      R4,#+0
   \   00000016   0xD101             BNE.N    ??usb_filesystem_install_0
     60                return NULL;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xE0B5             B.N      ??usb_filesystem_install_1
     61             }
     62          
     63             /* USB MFS INSTALL */
     64             _io_usb_mfs_install(block_device_name, 0, (pointer)usb_handle);
   \                     ??usb_filesystem_install_0:
   \   0000001C   0x0032             MOVS     R2,R6
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x0038             MOVS     R0,R7
   \   00000022   0x.... 0x....      BL       _io_usb_mfs_install
     65             usb_fs_ptr->DEV_NAME = block_device_name;
   \   00000026   0x60E7             STR      R7,[R4, #+12]
     66          
     67          
     68             /* Open the USB mass storage  device */
     69             _time_delay(500);
   \   00000028   0xF44F 0x70FA      MOV      R0,#+500
   \   0000002C   0x.... 0x....      BL       _time_delay
     70             usb_fs_ptr->DEV_FD_PTR = fopen(block_device_name, (char_ptr) 0);
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x0038             MOVS     R0,R7
   \   00000034   0x.... 0x....      BL       _io_fopen
   \   00000038   0x6020             STR      R0,[R4, #+0]
     71          
     72             if (usb_fs_ptr->DEV_FD_PTR == NULL) {
   \   0000003A   0x6820             LDR      R0,[R4, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD107             BNE.N    ??usb_filesystem_install_2
     73                printf("\nUnable to open USB disk");
   \   00000040   0x....             LDR.N    R0,??DataTable1
   \   00000042   0x.... 0x....      BL       _io_printf
     74                usb_filesystem_uninstall(usb_fs_ptr);
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0x.... 0x....      BL       usb_filesystem_uninstall
     75                return NULL;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xE09B             B.N      ??usb_filesystem_install_1
     76             } 
     77             _io_ioctl(usb_fs_ptr->DEV_FD_PTR, IO_IOCTL_SET_BLOCK_MODE, NULL);
   \                     ??usb_filesystem_install_2:
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x211A             MOVS     R1,#+26
   \   00000054   0x6820             LDR      R0,[R4, #+0]
   \   00000056   0x.... 0x....      BL       _io_ioctl
     78          
     79             /* get the vendor information and display it */
     80             printf("\n************************************************************************");
   \   0000005A   0x....             LDR.N    R0,??DataTable1_1
   \   0000005C   0x.... 0x....      BL       _io_printf
     81             _io_ioctl(usb_fs_ptr->DEV_FD_PTR, IO_IOCTL_GET_VENDOR_INFO, &dev_info);
   \   00000060   0xAA00             ADD      R2,SP,#+0
   \   00000062   0x2116             MOVS     R1,#+22
   \   00000064   0x6820             LDR      R0,[R4, #+0]
   \   00000066   0x.... 0x....      BL       _io_ioctl
     82             printf("\nVendor Information:     %-1.8s Mass Storage Device",dev_info);
   \   0000006A   0x9900             LDR      R1,[SP, #+0]
   \   0000006C   0x....             LDR.N    R0,??DataTable1_2
   \   0000006E   0x.... 0x....      BL       _io_printf
     83             _io_ioctl(usb_fs_ptr->DEV_FD_PTR, IO_IOCTL_GET_PRODUCT_ID, &dev_info);
   \   00000072   0xAA00             ADD      R2,SP,#+0
   \   00000074   0x2117             MOVS     R1,#+23
   \   00000076   0x6820             LDR      R0,[R4, #+0]
   \   00000078   0x.... 0x....      BL       _io_ioctl
     84             printf("\nProduct Identification: %-1.16s",dev_info);
   \   0000007C   0x9900             LDR      R1,[SP, #+0]
   \   0000007E   0x....             LDR.N    R0,??DataTable1_3
   \   00000080   0x.... 0x....      BL       _io_printf
     85             _io_ioctl(usb_fs_ptr->DEV_FD_PTR, IO_IOCTL_GET_PRODUCT_REV, &dev_info);
   \   00000084   0xAA00             ADD      R2,SP,#+0
   \   00000086   0x2118             MOVS     R1,#+24
   \   00000088   0x6820             LDR      R0,[R4, #+0]
   \   0000008A   0x.... 0x....      BL       _io_ioctl
     86             printf("\nProduct Revision Level: %-1.4s",dev_info);
   \   0000008E   0x9900             LDR      R1,[SP, #+0]
   \   00000090   0x....             LDR.N    R0,??DataTable1_4
   \   00000092   0x.... 0x....      BL       _io_printf
     87             printf("\n************************************************************************");
   \   00000096   0x....             LDR.N    R0,??DataTable1_1
   \   00000098   0x.... 0x....      BL       _io_printf
     88          
     89             /* Try Installing a the partition manager */
     90             error_code = _io_part_mgr_install(usb_fs_ptr->DEV_FD_PTR, partition_manager_name, 0);
   \   0000009C   0x2200             MOVS     R2,#+0
   \   0000009E   0x4641             MOV      R1,R8
   \   000000A0   0x6820             LDR      R0,[R4, #+0]
   \   000000A2   0x.... 0x....      BL       _io_part_mgr_install
     91             if (error_code != MFS_NO_ERROR) {
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD00A             BEQ.N    ??usb_filesystem_install_3
     92                printf("\nError while initializing (%s)", MFS_Error_text((uint_32)error_code));
   \   000000AA   0x.... 0x....      BL       MFS_Error_text
   \   000000AE   0x0001             MOVS     R1,R0
   \   000000B0   0x....             LDR.N    R0,??DataTable1_5
   \   000000B2   0x.... 0x....      BL       _io_printf
     93                usb_filesystem_uninstall(usb_fs_ptr);
   \   000000B6   0x0020             MOVS     R0,R4
   \   000000B8   0x.... 0x....      BL       usb_filesystem_uninstall
     94                return NULL;
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0xE063             B.N      ??usb_filesystem_install_1
     95             } 
     96             usb_fs_ptr->PM_NAME = partition_manager_name;
   \                     ??usb_filesystem_install_3:
   \   000000C0   0xF8C4 0x8010      STR      R8,[R4, #+16]
     97          
     98             usb_fs_ptr->PM_FD_PTR = fopen(partition_manager_name, NULL);
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x4640             MOV      R0,R8
   \   000000C8   0x.... 0x....      BL       _io_fopen
   \   000000CC   0x6060             STR      R0,[R4, #+4]
     99             if (usb_fs_ptr->PM_FD_PTR == NULL) {
   \   000000CE   0x6860             LDR      R0,[R4, #+4]
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xD10D             BNE.N    ??usb_filesystem_install_4
    100                error_code = ferror(usb_fs_ptr->PM_FD_PTR);
   \   000000D4   0x6860             LDR      R0,[R4, #+4]
   \   000000D6   0x.... 0x....      BL       _io_ferror
    101                printf("\nError while opening partition (%s)", MFS_Error_text((uint_32)error_code));
   \   000000DA   0x.... 0x....      BL       MFS_Error_text
   \   000000DE   0x0001             MOVS     R1,R0
   \   000000E0   0x....             LDR.N    R0,??DataTable1_6
   \   000000E2   0x.... 0x....      BL       _io_printf
    102                usb_filesystem_uninstall(usb_fs_ptr);
   \   000000E6   0x0020             MOVS     R0,R4
   \   000000E8   0x.... 0x....      BL       usb_filesystem_uninstall
    103                return NULL;
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0xE04B             B.N      ??usb_filesystem_install_1
    104             } 
    105          
    106             printf("\n--->USB Mass storage device opened");
   \                     ??usb_filesystem_install_4:
   \   000000F0   0x....             LDR.N    R0,??DataTable1_7
   \   000000F2   0x.... 0x....      BL       _io_printf
    107          
    108             partition_number = 1;
   \   000000F6   0x2001             MOVS     R0,#+1
   \   000000F8   0x9001             STR      R0,[SP, #+4]
    109             error_code = _io_ioctl(usb_fs_ptr->PM_FD_PTR, IO_IOCTL_VAL_PART, &partition_number);
   \   000000FA   0xAA01             ADD      R2,SP,#+4
   \   000000FC   0xF240 0x1123      MOVW     R1,#+291
   \   00000100   0x6860             LDR      R0,[R4, #+4]
   \   00000102   0x.... 0x....      BL       _io_ioctl
    110             if (error_code == PMGR_INVALID_PARTITION) {
   \   00000106   0xF243 0x01AA      MOVW     R1,#+12458
   \   0000010A   0x4288             CMP      R0,R1
   \   0000010C   0xD112             BNE.N    ??usb_filesystem_install_5
    111                printf("\n--->No partition available on this device");
   \   0000010E   0x....             LDR.N    R0,??DataTable1_8
   \   00000110   0x.... 0x....      BL       _io_printf
    112          
    113                /* uninitialize */
    114                fclose(usb_fs_ptr->PM_FD_PTR);
   \   00000114   0x6860             LDR      R0,[R4, #+4]
   \   00000116   0x.... 0x....      BL       _io_fclose
    115                usb_fs_ptr->PM_FD_PTR = NULL;
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x6060             STR      R0,[R4, #+4]
    116          
    117                _io_part_mgr_uninstall(usb_fs_ptr->PM_NAME);
   \   0000011E   0x6920             LDR      R0,[R4, #+16]
   \   00000120   0x.... 0x....      BL       _io_part_mgr_uninstall
    118                usb_fs_ptr->PM_NAME = NULL;
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x6120             STR      R0,[R4, #+16]
    119          
    120                /* install MFS without partition */
    121                mfs_status = _io_mfs_install(usb_fs_ptr->DEV_FD_PTR, file_system_name, 0);
   \   00000128   0x2200             MOVS     R2,#+0
   \   0000012A   0x0029             MOVS     R1,R5
   \   0000012C   0x6820             LDR      R0,[R4, #+0]
   \   0000012E   0x.... 0x....      BL       _io_mfs_install
   \   00000132   0xE007             B.N      ??usb_filesystem_install_6
    122             } else {
    123                printf("\n--->Partition Manager installed");
   \                     ??usb_filesystem_install_5:
   \   00000134   0x....             LDR.N    R0,??DataTable1_9
   \   00000136   0x.... 0x....      BL       _io_printf
    124                 /* Install MFS on the partition #1 */
    125                mfs_status = _io_mfs_install(usb_fs_ptr->PM_FD_PTR, file_system_name, partition_number);
   \   0000013A   0x9A01             LDR      R2,[SP, #+4]
   \   0000013C   0x0029             MOVS     R1,R5
   \   0000013E   0x6860             LDR      R0,[R4, #+4]
   \   00000140   0x.... 0x....      BL       _io_mfs_install
    126          
    127             } 
    128          
    129             if (mfs_status != MFS_NO_ERROR) {
   \                     ??usb_filesystem_install_6:
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD00A             BEQ.N    ??usb_filesystem_install_7
    130                printf("\nError initializing MFS (%s)", MFS_Error_text((uint_32)mfs_status));
   \   00000148   0x.... 0x....      BL       MFS_Error_text
   \   0000014C   0x0001             MOVS     R1,R0
   \   0000014E   0x....             LDR.N    R0,??DataTable1_10
   \   00000150   0x.... 0x....      BL       _io_printf
    131                /* uninitialize and exit */
    132                usb_filesystem_uninstall(usb_fs_ptr);
   \   00000154   0x0020             MOVS     R0,R4
   \   00000156   0x.... 0x....      BL       usb_filesystem_uninstall
    133                return NULL;
   \   0000015A   0x2000             MOVS     R0,#+0
   \   0000015C   0xE014             B.N      ??usb_filesystem_install_1
    134             } 
    135             printf("\n--->File System installed");
   \                     ??usb_filesystem_install_7:
   \   0000015E   0x....             LDR.N    R0,??DataTable1_11
   \   00000160   0x.... 0x....      BL       _io_printf
    136          
    137             usb_fs_ptr->FS_NAME  = file_system_name;
   \   00000164   0x6165             STR      R5,[R4, #+20]
    138          
    139             usb_fs_ptr->FS_FD_PTR = fopen(file_system_name, 0);
   \   00000166   0x2100             MOVS     R1,#+0
   \   00000168   0x0028             MOVS     R0,R5
   \   0000016A   0x.... 0x....      BL       _io_fopen
   \   0000016E   0x60A0             STR      R0,[R4, #+8]
    140             if (usb_fs_ptr->FS_FD_PTR==NULL) {
   \   00000170   0x68A0             LDR      R0,[R4, #+8]
   \   00000172   0x2800             CMP      R0,#+0
   \   00000174   0xD104             BNE.N    ??usb_filesystem_install_8
    141                usb_filesystem_uninstall(usb_fs_ptr);
   \   00000176   0x0020             MOVS     R0,R4
   \   00000178   0x.... 0x....      BL       usb_filesystem_uninstall
    142                return NULL;
   \   0000017C   0x2000             MOVS     R0,#+0
   \   0000017E   0xE003             B.N      ??usb_filesystem_install_1
    143             } 
    144          
    145             printf("\n--->File System opened");
   \                     ??usb_filesystem_install_8:
   \   00000180   0x....             LDR.N    R0,??DataTable1_12
   \   00000182   0x.... 0x....      BL       _io_printf
    146             return (pointer) usb_fs_ptr;
   \   00000186   0x0020             MOVS     R0,R4
   \                     ??usb_filesystem_install_1:
   \   00000188   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}  ;; return
    147          }
    148          

   \                                 In section .text, align 2, keep-with-next
    149          MQX_FILE_PTR usb_filesystem_handle( USB_FILESYSTEM_STRUCT_PTR  usb_fs_ptr)
    150          {
    151             return usb_fs_ptr->FS_FD_PTR ;
   \                     usb_filesystem_handle:
   \   00000000   0x6880             LDR      R0,[R0, #+8]
   \   00000002   0x4770             BX       LR               ;; return
    152          }
    153          

   \                                 In section .text, align 2, keep-with-next
    154          void usb_filesystem_uninstall( USB_FILESYSTEM_STRUCT_PTR  usb_fs_ptr)
    155          {
   \                     usb_filesystem_uninstall:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    156             int_32                     error_code;
    157             uint_32                    mfs_status;
    158             boolean                    partition_found = FALSE;
                                               ^
Warning[Pe177]: variable "partition_found" was declared but never referenced
   \   00000004   0x2000             MOVS     R0,#+0
    159          
    160             if (usb_fs_ptr == NULL) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD068             BEQ.N    ??usb_filesystem_uninstall_0
    161                return;
    162             }
    163              _int_disable();
   \                     ??usb_filesystem_uninstall_1:
   \   0000000A   0x.... 0x....      BL       _int_disable
    164             printf("\nDevice removed, starting device cleanup");
   \   0000000E   0x....             LDR.N    R0,??DataTable1_13
   \   00000010   0x.... 0x....      BL       _io_printf
    165             printf("\n--->Closing MFS");
   \   00000014   0x....             LDR.N    R0,??DataTable1_14
   \   00000016   0x.... 0x....      BL       _io_printf
    166             if (usb_fs_ptr->FS_FD_PTR) {
   \   0000001A   0x68A0             LDR      R0,[R4, #+8]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD008             BEQ.N    ??usb_filesystem_uninstall_2
    167                error_code = fclose(usb_fs_ptr->FS_FD_PTR);
   \   00000020   0x68A0             LDR      R0,[R4, #+8]
   \   00000022   0x.... 0x....      BL       _io_fclose
    168                if ( error_code != IO_OK ) {
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD003             BEQ.N    ??usb_filesystem_uninstall_2
    169                   printf("\nError closing MFS device: 0x%X.", error_code);
   \   0000002A   0x0001             MOVS     R1,R0
   \   0000002C   0x....             LDR.N    R0,??DataTable1_15
   \   0000002E   0x.... 0x....      BL       _io_printf
    170                } 
    171             }
    172          
    173             printf("\n--->Uninstalling %s",usb_fs_ptr->FS_NAME);
   \                     ??usb_filesystem_uninstall_2:
   \   00000032   0x6961             LDR      R1,[R4, #+20]
   \   00000034   0x....             LDR.N    R0,??DataTable1_16
   \   00000036   0x.... 0x....      BL       _io_printf
    174             if (usb_fs_ptr->FS_NAME) {
   \   0000003A   0x6960             LDR      R0,[R4, #+20]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD00C             BEQ.N    ??usb_filesystem_uninstall_3
    175                mfs_status = _io_mfs_uninstall(usb_fs_ptr->FS_NAME);
   \   00000040   0x6960             LDR      R0,[R4, #+20]
   \   00000042   0x.... 0x....      BL       _io_mfs_uninstall
   \   00000046   0x0005             MOVS     R5,R0
    176                if ((mfs_status != MFS_NO_ERROR)  && (mfs_status !=IO_DEVICE_DOES_NOT_EXIST)) {
   \   00000048   0x2D00             CMP      R5,#+0
   \   0000004A   0xD006             BEQ.N    ??usb_filesystem_uninstall_3
   \   0000004C   0xF640 0x2001      MOVW     R0,#+2561
   \   00000050   0x4285             CMP      R5,R0
   \   00000052   0xD002             BEQ.N    ??usb_filesystem_uninstall_3
    177                   printf("\nError while uninstalling MFS on device");
   \   00000054   0x....             LDR.N    R0,??DataTable1_17
   \   00000056   0x.... 0x....      BL       _io_printf
    178                } 
    179             }
    180          
    181             if (usb_fs_ptr->PM_FD_PTR != NULL) {
   \                     ??usb_filesystem_uninstall_3:
   \   0000005A   0x6860             LDR      R0,[R4, #+4]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD00C             BEQ.N    ??usb_filesystem_uninstall_4
    182                /* Close partition device */
    183                printf("\n--->Closing partition");
   \   00000060   0x....             LDR.N    R0,??DataTable1_18
   \   00000062   0x.... 0x....      BL       _io_printf
    184                error_code = fclose(usb_fs_ptr->PM_FD_PTR);
   \   00000066   0x6860             LDR      R0,[R4, #+4]
   \   00000068   0x.... 0x....      BL       _io_fclose
    185                if ( error_code != IO_OK ) {
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD004             BEQ.N    ??usb_filesystem_uninstall_4
    186                   printf("\nError closing Partition device %s: 0x%X.", usb_fs_ptr->PM_NAME, error_code);
   \   00000070   0x0002             MOVS     R2,R0
   \   00000072   0x6921             LDR      R1,[R4, #+16]
   \   00000074   0x....             LDR.N    R0,??DataTable1_19
   \   00000076   0x.... 0x....      BL       _io_printf
    187                } 
    188             }
    189          
    190              if (usb_fs_ptr->PM_NAME) {
   \                     ??usb_filesystem_uninstall_4:
   \   0000007A   0x6920             LDR      R0,[R4, #+16]
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD010             BEQ.N    ??usb_filesystem_uninstall_5
    191               /* Uninstall the partition manager */
    192                printf("\n--->Uninstalling PM");
   \   00000080   0x....             LDR.N    R0,??DataTable1_20
   \   00000082   0x.... 0x....      BL       _io_printf
    193                error_code = _io_part_mgr_uninstall(usb_fs_ptr->PM_NAME);
   \   00000086   0x6920             LDR      R0,[R4, #+16]
   \   00000088   0x.... 0x....      BL       _io_part_mgr_uninstall
    194                if (( error_code != IO_OK ) && (mfs_status !=IO_DEVICE_DOES_NOT_EXIST)) {
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD008             BEQ.N    ??usb_filesystem_uninstall_5
   \   00000090   0xF640 0x2101      MOVW     R1,#+2561
   \   00000094   0x428D             CMP      R5,R1
   \   00000096   0xD004             BEQ.N    ??usb_filesystem_uninstall_5
    195                   printf("\nError uninstalling Partition device %s: 0x%X.", usb_fs_ptr->PM_NAME, error_code);
   \   00000098   0x0002             MOVS     R2,R0
   \   0000009A   0x6921             LDR      R1,[R4, #+16]
   \   0000009C   0x....             LDR.N    R0,??DataTable1_21
   \   0000009E   0x.... 0x....      BL       _io_printf
    196                } 
    197             } 
    198          
    199             /* USB mass storage link device */
    200             if (usb_fs_ptr->DEV_FD_PTR) {
   \                     ??usb_filesystem_uninstall_5:
   \   000000A2   0x6820             LDR      R0,[R4, #+0]
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD00B             BEQ.N    ??usb_filesystem_uninstall_6
    201                printf("\n--->Closing disk");
   \   000000A8   0x....             LDR.N    R0,??DataTable1_22
   \   000000AA   0x.... 0x....      BL       _io_printf
    202                error_code = fclose(usb_fs_ptr->DEV_FD_PTR);
   \   000000AE   0x6820             LDR      R0,[R4, #+0]
   \   000000B0   0x.... 0x....      BL       _io_fclose
    203                if ( error_code != IO_OK ) {
   \   000000B4   0x2800             CMP      R0,#+0
   \   000000B6   0xD003             BEQ.N    ??usb_filesystem_uninstall_6
    204                   printf("\nError closing disk (0x%X)", error_code);
   \   000000B8   0x0001             MOVS     R1,R0
   \   000000BA   0x....             LDR.N    R0,??DataTable1_23
   \   000000BC   0x.... 0x....      BL       _io_printf
    205                } 
    206             }
    207             _int_enable();
   \                     ??usb_filesystem_uninstall_6:
   \   000000C0   0x.... 0x....      BL       _int_enable
    208             
    209             if (usb_fs_ptr->DEV_NAME) {
   \   000000C4   0x68E0             LDR      R0,[R4, #+12]
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD005             BEQ.N    ??usb_filesystem_uninstall_7
    210                printf("\n--->Closing USB MFS");
   \   000000CA   0x....             LDR.N    R0,??DataTable1_24
   \   000000CC   0x.... 0x....      BL       _io_printf
    211                _io_dev_uninstall(usb_fs_ptr->DEV_NAME);
   \   000000D0   0x68E0             LDR      R0,[R4, #+12]
   \   000000D2   0x.... 0x....      BL       _io_dev_uninstall
    212             }
    213          
    214             _mem_free(usb_fs_ptr);
   \                     ??usb_filesystem_uninstall_7:
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0x.... 0x....      BL       _lwmem_free
    215          }
   \                     ??usb_filesystem_uninstall_0:
   \   000000DC   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     `?<Constant "\\nUnable to open USB disk">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     `?<Constant "\\n********************...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     `?<Constant "\\nVendor Information: ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     `?<Constant "\\nProduct Identificati...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     `?<Constant "\\nProduct Revision Lev...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     `?<Constant "\\nError while initiali...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     `?<Constant "\\nError while opening ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     `?<Constant "\\n--->USB Mass storage...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     `?<Constant "\\n--->No partition ava...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Partition Manage...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     `?<Constant "\\nError initializing M...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     `?<Constant "\\n--->File System inst...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     `?<Constant "\\n--->File System opened">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     `?<Constant "\\nDevice removed, star...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Closing MFS">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     `?<Constant "\\nError closing MFS de...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Uninstalling %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     `?<Constant "\\nError while uninstal...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Closing partition">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x........         DC32     `?<Constant "\\nError closing Partit...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Uninstalling PM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0x........         DC32     `?<Constant "\\nError uninstalling P...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Closing disk">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     `?<Constant "\\nError closing disk (...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x........         DC32     `?<Constant "\\n--->Closing USB MFS">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nUnable to open USB disk">`:
   \   00000000   0x0A 0x55          DC8 "\012Unable to open USB disk"
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x6E 0x20    
   \              0x55 0x53    
   \              0x42 0x20    
   \              0x64 0x69    
   \              0x73 0x6B    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n********************...">`:
   \   00000000   0x0A 0x2A          DC8 0AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000010   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000018   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000020   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000028   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000030   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000048   0x2A 0x00          DC8 2AH, 0
   \   0000004A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nVendor Information: ...">`:
   \   00000000   0x0A 0x56          DC8 0AH, 56H, 65H, 6EH, 64H, 6FH, 72H, 20H
   \              0x65 0x6E    
   \              0x64 0x6F    
   \              0x72 0x20    
   \   00000008   0x49 0x6E          DC8 49H, 6EH, 66H, 6FH, 72H, 6DH, 61H, 74H
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x61 0x74    
   \   00000010   0x69 0x6F          DC8 69H, 6FH, 6EH, 3AH, 20H, 20H, 20H, 20H
   \              0x6E 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \   00000018   0x20 0x25          DC8 20H, 25H, 2DH, 31H, 2EH, 38H, 73H, 20H
   \              0x2D 0x31    
   \              0x2E 0x38    
   \              0x73 0x20    
   \   00000020   0x4D 0x61          DC8 4DH, 61H, 73H, 73H, 20H, 53H, 74H, 6FH
   \              0x73 0x73    
   \              0x20 0x53    
   \              0x74 0x6F    
   \   00000028   0x72 0x61          DC8 72H, 61H, 67H, 65H, 20H, 44H, 65H, 76H
   \              0x67 0x65    
   \              0x20 0x44    
   \              0x65 0x76    
   \   00000030   0x69 0x63          DC8 69H, 63H, 65H, 0
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nProduct Identificati...">`:
   \   00000000   0x0A 0x50          DC8 "\012Product Identification: %-1.16s"
   \              0x72 0x6F    
   \              0x64 0x75    
   \              0x63 0x74    
   \              0x20 0x49    
   \              0x64 0x65    
   \              0x6E 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x2D 0x31    
   \              0x2E 0x31    
   \              0x36 0x73    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nProduct Revision Lev...">`:
   \   00000000   0x0A 0x50          DC8 "\012Product Revision Level: %-1.4s"
   \              0x72 0x6F    
   \              0x64 0x75    
   \              0x63 0x74    
   \              0x20 0x52    
   \              0x65 0x76    
   \              0x69 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x4C 0x65    
   \              0x76 0x65    
   \              0x6C 0x3A    
   \              0x20 0x25    
   \              0x2D 0x31    
   \              0x2E 0x34    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError while initiali...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error while initializing (%s)"
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x77    
   \              0x68 0x69    
   \              0x6C 0x65    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x61 0x6C    
   \              0x69 0x7A    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x28 0x25    
   \              0x73 0x29    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError while opening ...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error while opening partition (%s)"
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x77    
   \              0x68 0x69    
   \              0x6C 0x65    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x74 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x28    
   \              0x25 0x73    
   \              0x29 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->USB Mass storage...">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->USB Mass storage device opened"
   \              0x2D 0x2D    
   \              0x3E 0x55    
   \              0x53 0x42    
   \              0x20 0x4D    
   \              0x61 0x73    
   \              0x73 0x20    
   \              0x73 0x74    
   \              0x6F 0x72    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x6E 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->No partition ava...">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->No partition available on this device"
   \              0x2D 0x2D    
   \              0x3E 0x4E    
   \              0x6F 0x20    
   \              0x70 0x61    
   \              0x72 0x74    
   \              0x69 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x61 0x76    
   \              0x61 0x69    
   \              0x6C 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x68 0x69    
   \              0x73 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Partition Manage...">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Partition Manager installed"
   \              0x2D 0x2D    
   \              0x3E 0x50    
   \              0x61 0x72    
   \              0x74 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x4D    
   \              0x61 0x6E    
   \              0x61 0x67    
   \              0x65 0x72    
   \              0x20 0x69    
   \              0x6E 0x73    
   \              0x74 0x61    
   \              0x6C 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError initializing M...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error initializing MFS (%s)"
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x61 0x6C    
   \              0x69 0x7A    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x4D 0x46    
   \              0x53 0x20    
   \              0x28 0x25    
   \              0x73 0x29    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->File System inst...">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->File System installed"
   \              0x2D 0x2D    
   \              0x3E 0x46    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x53 0x79    
   \              0x73 0x74    
   \              0x65 0x6D    
   \              0x20 0x69    
   \              0x6E 0x73    
   \              0x74 0x61    
   \              0x6C 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->File System opened">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->File System opened"
   \              0x2D 0x2D    
   \              0x3E 0x46    
   \              0x69 0x6C    
   \              0x65 0x20    
   \              0x53 0x79    
   \              0x73 0x74    
   \              0x65 0x6D    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x6E 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nDevice removed, star...">`:
   \   00000000   0x0A 0x44          DC8 "\012Device removed, starting device cleanup"
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x6D 0x6F    
   \              0x76 0x65    
   \              0x64 0x2C    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x63    
   \              0x6C 0x65    
   \              0x61 0x6E    
   \              0x75 0x70    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Closing MFS">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Closing MFS"
   \              0x2D 0x2D    
   \              0x3E 0x43    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x4D    
   \              0x46 0x53    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError closing MFS de...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error closing MFS device: 0x%X."
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x4D    
   \              0x46 0x53    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x2E    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Uninstalling %s">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Uninstalling %s"
   \              0x2D 0x2D    
   \              0x3E 0x55    
   \              0x6E 0x69    
   \              0x6E 0x73    
   \              0x74 0x61    
   \              0x6C 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x25 0x73    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError while uninstal...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error while uninstalling MFS on device"
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x77    
   \              0x68 0x69    
   \              0x6C 0x65    
   \              0x20 0x75    
   \              0x6E 0x69    
   \              0x6E 0x73    
   \              0x74 0x61    
   \              0x6C 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x4D 0x46    
   \              0x53 0x20    
   \              0x6F 0x6E    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Closing partition">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Closing partition"
   \              0x2D 0x2D    
   \              0x3E 0x43    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x74 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError closing Partit...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error closing Partition device %s: 0x%X."
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x50    
   \              0x61 0x72    
   \              0x74 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x2E 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Uninstalling PM">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Uninstalling PM"
   \              0x2D 0x2D    
   \              0x3E 0x55    
   \              0x6E 0x69    
   \              0x6E 0x73    
   \              0x74 0x61    
   \              0x6C 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x50 0x4D    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError uninstalling P...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error uninstalling Partition device %s: 0x%X."
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x75    
   \              0x6E 0x69    
   \              0x6E 0x73    
   \              0x74 0x61    
   \              0x6C 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x50 0x61    
   \              0x72 0x74    
   \              0x69 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x25    
   \              0x73 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x2E    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Closing disk">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Closing disk"
   \              0x2D 0x2D    
   \              0x3E 0x43    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x6B 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nError closing disk (...">`:
   \   00000000   0x0A 0x45          DC8 "\012Error closing disk (0x%X)"
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x6B 0x20    
   \              0x28 0x30    
   \              0x78 0x25    
   \              0x58 0x29    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\n--->Closing USB MFS">`:
   \   00000000   0x0A 0x2D          DC8 "\012--->Closing USB MFS"
   \              0x2D 0x2D    
   \              0x3E 0x43    
   \              0x6C 0x6F    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x55    
   \              0x53 0x42    
   \              0x20 0x4D    
   \              0x46 0x53    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    216          
    217          /* EOF */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  usb_filesystem_handle
       32  usb_filesystem_install
             32 -> MFS_Error_text
             32 -> _io_fclose
             32 -> _io_ferror
             32 -> _io_fopen
             32 -> _io_ioctl
             32 -> _io_mfs_install
             32 -> _io_part_mgr_install
             32 -> _io_part_mgr_uninstall
             32 -> _io_printf
             32 -> _io_usb_mfs_install
             32 -> _lwmem_alloc_system_zero
             32 -> _time_delay
             32 -> usb_filesystem_uninstall
       16  usb_filesystem_uninstall
             16 -> _int_disable
             16 -> _int_enable
             16 -> _io_dev_uninstall
             16 -> _io_fclose
             16 -> _io_mfs_uninstall
             16 -> _io_part_mgr_uninstall
             16 -> _io_printf
             16 -> _lwmem_free


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      76  ?<Constant "\n********************...">
      20  ?<Constant "\n--->Closing MFS">
      24  ?<Constant "\n--->Closing USB MFS">
      20  ?<Constant "\n--->Closing disk">
      24  ?<Constant "\n--->Closing partition">
      28  ?<Constant "\n--->File System inst...">
      24  ?<Constant "\n--->File System opened">
      44  ?<Constant "\n--->No partition ava...">
      36  ?<Constant "\n--->Partition Manage...">
      36  ?<Constant "\n--->USB Mass storage...">
      24  ?<Constant "\n--->Uninstalling %s">
      24  ?<Constant "\n--->Uninstalling PM">
      44  ?<Constant "\nDevice removed, star...">
      36  ?<Constant "\nError closing MFS de...">
      44  ?<Constant "\nError closing Partit...">
      28  ?<Constant "\nError closing disk (...">
      32  ?<Constant "\nError initializing M...">
      48  ?<Constant "\nError uninstalling P...">
      32  ?<Constant "\nError while initiali...">
      36  ?<Constant "\nError while opening ...">
      40  ?<Constant "\nError while uninstal...">
      36  ?<Constant "\nProduct Identificati...">
      32  ?<Constant "\nProduct Revision Lev...">
      28  ?<Constant "\nUnable to open USB disk">
      52  ?<Constant "\nVendor Information: ...">
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  usb_filesystem_handle
     396  usb_filesystem_install
     222  usb_filesystem_uninstall

 
 868 bytes in section .rodata
 722 bytes in section .text
 
 722 bytes of CODE  memory
 868 bytes of CONST memory

Errors: none
Warnings: 1
